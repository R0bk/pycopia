#!/usr/bin/python
# -*- coding: utf8 -*-
# vim:ts=4:sw=4:softtabstop=4:smarttab:expandtab
# File originally autogenerated by SQLAutoCode, then modified.
# see http://code.google.com/p/sqlautocode/

"""
Basic set of tables useful for web applications, test automation, and lab
management.

typical database:
  create DATABASE pycopia ENCODING 'utf-8' OWNER pycopia;

"""

from pytz import timezone
from datetime import datetime

from sqlalchemy import *
from pycopia.db.types import *

# default value constructors

UTC = timezone('UTC')

def time_now():
    return datetime.now(UTC)

def default_active():
    return True

def default_inactive():
    return False

def default_obj(x): # call this one in default attribute
    return lambda: x


metadata = MetaData()


auth_message =  Table('auth_message', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'user_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'message', TEXT(length=None, convert_unicode=False), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'user_id'], [u'public.auth_user.id'], name=u'auth_message_user_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
    schema='public')
Index('index_auth_message_user_id', auth_message.c.user_id, unique=False)


client_session =  Table('client_session', metadata,
    Column(u'session_key', VARCHAR(length=40, convert_unicode=False), primary_key=True, nullable=False),
            Column(u'data', PickleText(), primary_key=False, nullable=False, default=default_obj({})),
            Column(u'expire_date', TIMESTAMP(timezone=True), primary_key=False, nullable=False),
    schema='public')
Index('index_client_session_pkey', client_session.c.session_key, unique=True)


project_category =  Table('project_category', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
    schema='public')
Index('index_project_category_name_key', project_category.c.name, unique=True)


config =  Table('config', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'value', PickleText(), primary_key=False, nullable=True, default=default_obj(None)),
            Column(u'comment', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'parent_id', INTEGER(), primary_key=False),
            Column(u'user_id', INTEGER(), primary_key=False),
            Column(u'testcase_id', INTEGER(), primary_key=False),
            Column(u'testsuite_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'testcase_id'], [u'public.test_cases.id'], name=u'config_testcase_id_fkey'),
            ForeignKeyConstraint([u'testsuite_id'], [u'public.test_suites.id'], name=u'config_testsuite_id_fkey'),
            ForeignKeyConstraint([u'parent_id'], [u'public.config.id'], name=u'parent_id_refs_config_id'),
            ForeignKeyConstraint([u'user_id'], [u'public.auth_user.id'], name=u'config_user_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
    UniqueConstraint("name", "parent_id"),
    schema='public')
Index('index_config_testcase_id', config.c.testcase_id, unique=False)
Index('index_config_name_key', config.c.name, config.c.parent_id, unique=True)
Index('index_config_parent_id', config.c.parent_id, unique=False)
Index('index_config_user_id', config.c.user_id, unique=False)
Index('index_config_testsuite_id', config.c.testsuite_id, unique=False)


contacts =  Table('contacts', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'prefix', VARCHAR(length=15, convert_unicode=False), primary_key=False),
            Column(u'firstname', VARCHAR(length=50, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'middlename', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'lastname', VARCHAR(length=50, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'title', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'position', VARCHAR(length=100, convert_unicode=False), primary_key=False),
            Column(u'phonehome', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'phoneoffice', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'phoneother', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'phonework', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'phonemobile', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'pager', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'fax', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'email', VARCHAR(length=80, convert_unicode=False), primary_key=False),
            Column(u'note', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'address_id', INTEGER(), primary_key=False),
            Column(u'user_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'address_id'], [u'public.addresses.id'], name=u'contacts_address_id_fkey'),
            ForeignKeyConstraint([u'user_id'], [u'public.auth_user.id'], name=u'contacts_user_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
    schema='public')
Index('index_contacts_address_id', contacts.c.address_id, unique=False)
Index('index_contacts_lastname', contacts.c.lastname, unique=False)
Index('index_contacts_user_id', contacts.c.user_id, unique=False)


corp_attribute_type =  Table('corp_attribute_type', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'description', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'value_type', ValueType(), primary_key=False, nullable=False, default=ValueType.get_default),
    schema='public')
Index('index_corp_attribute_type_name_key', corp_attribute_type.c.name, unique=True)


corp_attributes =  Table('corp_attributes', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'type_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'value', PickleText(), primary_key=False, nullable=False),
            Column(u'corporation_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'corporation_id'], [u'public.corporations.id'], name=u'corp_attributes_corporation_id_fkey'),
            ForeignKeyConstraint([u'type_id'], [u'public.corp_attribute_type.id'], name=u'corp_attributes_type_id_fkey'),
    schema='public')
Index('index_corp_attributes_type_id', corp_attributes.c.type_id, unique=False)
Index('index_corp_attributes_corporation_id', corp_attributes.c.corporation_id, unique=False)


account_ids =  Table('account_ids', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'identifier', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'login', VARCHAR(length=80, convert_unicode=False), primary_key=False),
            Column(u'password', VARCHAR(length=80, convert_unicode=False), primary_key=False),
            Column(u'note', TEXT(length=None, convert_unicode=False), primary_key=False),
    schema='public')
Index('index_account_ids_identifier', account_ids.c.identifier, unique=False)


addresses =  Table('addresses', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'address', TEXT(length=None, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'address2', TEXT(length=None, convert_unicode=False), primary_key=False, nullable=True),
            Column(u'city', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=True),
            Column(u'stateprov', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=True),
            Column(u'postalcode', VARCHAR(length=15, convert_unicode=False), primary_key=False, nullable=True),
            Column(u'country_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'country_id'], [u'public.country_codes.id'], name=u'addresses_country_id_fkey'),
    schema='public')
Index('index_addresses_country_id', addresses.c.country_id, unique=False)


capability_group =  Table('capability_group', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
    schema='public')
Index('index_capability_group_name_key', capability_group.c.name, unique=True)


capability_type =  Table('capability_type', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'description', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'group_id', INTEGER(), primary_key=False),
            Column(u'value_type', ValueType(), primary_key=False, nullable=False, default=ValueType.get_default),
    ForeignKeyConstraint([u'group_id'], [u'public.capability_group.id'], name=u'capability_type_group_id_fkey'),
    schema='public')
Index('index_capability_type_name_key', capability_type.c.name, unique=True)
Index('index_capability_type_group_id', capability_type.c.group_id, unique=False)


capability =  Table('capability', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'type_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'value', PickleText(), primary_key=False, nullable=False),
            Column(u'equipment_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'equipment_id'], [u'public.equipment.id'], name=u'capability_equipment_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
            ForeignKeyConstraint([u'type_id'], [u'public.capability_type.id'], name=u'capability_type_id_fkey'),
    schema='public')
Index('index_capability_equipment_id', capability.c.equipment_id, unique=False)
Index('index_capability_type_id', capability.c.type_id, unique=False)


location =  Table('location', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'locationcode', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'address_id', INTEGER(), primary_key=False),
            Column(u'contact_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'address_id'], [u'public.addresses.id'], name=u'location_address_id_fkey'),
            ForeignKeyConstraint([u'contact_id'], [u'public.contacts.id'], name=u'location_contact_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
    schema='public')
Index('index_location_address_id', location.c.address_id, unique=False)
Index('index_location_contact_id', location.c.contact_id, unique=False)


attribute_type =  Table('attribute_type', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'description', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'value_type', ValueType(), primary_key=False, nullable=False, default=ValueType.get_default),
    schema='public')
Index('index_attribute_type_name_key', attribute_type.c.name, unique=True)


software_attributes =  Table('software_attributes', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'type_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'value', PickleText(), primary_key=False, nullable=False),
            Column(u'software_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'software_id'], [u'public.software.id'], name=u'software_attributes_software_id_fkey'),
            ForeignKeyConstraint([u'type_id'], [u'public.attribute_type.id'], name=u'software_attributes_type_id_fkey'),
    schema='public')
Index('index_software_attributes_software_id', software_attributes.c.software_id, unique=False)
Index('index_software_attributes_type_id', software_attributes.c.type_id, unique=False)


environmentattribute_type =  Table('environmentattribute_type', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'description', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'value_type', ValueType(), primary_key=False, nullable=False, default=ValueType.get_default),
    schema='public')
Index('index_environmentattribute_type_name_key', environmentattribute_type.c.name, unique=True)


environment_attributes =  Table('environment_attributes', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'type_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'value', PickleText(), primary_key=False, nullable=False),
            Column(u'environment_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'environment_id'], [u'public.environments.id'], name=u'environment_attributes_environment_id_fkey'),
            ForeignKeyConstraint([u'type_id'], [u'public.environmentattribute_type.id'], name=u'environment_attributes_type_id_fkey'),
    schema='public')
Index('index_environment_attributes_environment_id', environment_attributes.c.environment_id, unique=False)
Index('index_environment_attributes_type_id', environment_attributes.c.type_id, unique=False)


test_jobs =  Table('test_jobs', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'user_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'environment_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'testsuite_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'reportname', VARCHAR(length=80, convert_unicode=False), primary_key=False, 
                    nullable=False, default=default_obj("email")),
            Column(u'parameters', TEXT(), primary_key=False),
            Column(u'isscheduled', BOOLEAN(), primary_key=False, nullable=False, default=default_inactive),
            Column(u'schedule_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'environment_id'], [u'public.environments.id'], name=u'test_jobs_environment_id_fkey'),
            ForeignKeyConstraint([u'schedule_id'], [u'public.schedule.id'], name=u'test_jobs_schedule_id_fkey'),
            ForeignKeyConstraint([u'testsuite_id'], [u'public.test_suites.id'], name=u'test_jobs_testsuite_id_fkey'),
            ForeignKeyConstraint([u'user_id'], [u'public.auth_user.id'], name=u'test_jobs_user_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
    schema='public')
Index('index_test_jobs_user_id', test_jobs.c.user_id, unique=False)
Index('index_test_jobs_testsuite_id', test_jobs.c.testsuite_id, unique=False)
Index('index_test_jobs_name', test_jobs.c.name, unique=False)
Index('index_test_jobs_schedule_id', test_jobs.c.schedule_id, unique=False)
Index('index_test_jobs_environment_id', test_jobs.c.environment_id, unique=False)
Index('index_test_jobs_name_key', test_jobs.c.name, test_jobs.c.user_id, unique=True)


schedule =  Table('schedule', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'user_id', INTEGER(), primary_key=False),
            Column(u'minute', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'hour', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'day_of_month', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'month', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'day_of_week', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'user_id'], [u'public.auth_user.id'], name=u'schedule_user_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
    schema='public')
Index('index_schedule_user_id', schedule.c.user_id, unique=False)


test_results_data =  Table('test_results_data', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'data', PickleText(), primary_key=False, nullable=False),
            Column(u'note', VARCHAR(length=255, convert_unicode=False), primary_key=False),
    schema='public')
Index('index_test_results_data_pkey', test_results_data.c.id, unique=True)


test_results =  Table('test_results', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'testcase_id', INTEGER(), primary_key=False),
            Column(u'testimplementation', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'testversion', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'tester_id', INTEGER(), primary_key=False),
            Column(u'environment_id', INTEGER(), primary_key=False),
            Column(u'build_id', INTEGER(), primary_key=False),
            Column(u'parent_id', INTEGER(), primary_key=False),
            Column(u'objecttype', TestObjectType(), primary_key=False, nullable=False),
            Column(u'starttime', TIMESTAMP(timezone=True), primary_key=False),
            Column(u'endtime', TIMESTAMP(timezone=True), primary_key=False),
            Column(u'arguments', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'result', TestResultType(), primary_key=False, nullable=False),
            Column(u'diagnostic', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'testresultdata_id', INTEGER(), primary_key=False),
            Column(u'resultslocation', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'reportfilename', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'note', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'valid', BOOLEAN(), primary_key=False, nullable=False, default=default_active),
    ForeignKeyConstraint([u'tester_id'], [u'public.auth_user.id'], name=u'test_results_tester_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
            ForeignKeyConstraint([u'parent_id'], [u'public.test_results.id'], name=u'parent_id_refs_test_results_id'),
            ForeignKeyConstraint([u'build_id'], [u'public.project_versions.id'], name=u'test_results_build_id_fkey'),
            ForeignKeyConstraint([u'environment_id'], [u'public.environments.id'], name=u'test_results_environment_id_fkey'),
            ForeignKeyConstraint([u'testcase_id'], [u'public.test_cases.id'], name=u'test_results_testcase_id_fkey'),
            ForeignKeyConstraint([u'testresultdata_id'], [u'public.test_results_data.id'], name=u'test_results_testresultdata_id_fkey'),
    schema='public')
Index('index_test_results_testcase_id', test_results.c.testcase_id, unique=False)
Index('index_test_results_testresultdata_id', test_results.c.testresultdata_id, unique=False)
Index('index_test_results_build_id', test_results.c.build_id, unique=False)
Index('index_test_results_parent_id', test_results.c.parent_id, unique=False)
Index('index_test_results_tester_id', test_results.c.tester_id, unique=False)
Index('index_test_results_testimplementation', test_results.c.testimplementation, unique=False)
Index('index_test_results_environment_id', test_results.c.environment_id, unique=False)


traps =  Table('traps', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'timestamp', TIMESTAMP(timezone=True), primary_key=False, nullable=False,
                    default=time_now),
            Column(u'trap', PickleText(), primary_key=False, nullable=False),
    schema='public')
Index('index_traps_pkey', traps.c.id, unique=True)


cookies =  Table('cookies', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'value', TEXT(length=None, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'comment', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'domain', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'max_age', INTEGER(), primary_key=False),
            Column(u'path', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'version', INTEGER(), primary_key=False, nullable=False),
            Column(u'secure', BOOLEAN(), primary_key=False),
            Column(u'expires', TIMESTAMP(timezone=True), primary_key=False),
            Column(u'discard', BOOLEAN(), primary_key=False),
            Column(u'comment_url', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'port', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'user_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'user_id'], [u'public.auth_user.id'], name=u'cookies_user_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
    schema='public')
Index('index_cookies_user_id', cookies.c.user_id, unique=False)


auth_group_permissions =  Table('auth_group_permissions', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'group_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'permission_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'group_id'], [u'public.auth_group.id'], name=u'auth_group_permissions_group_id_fkey'),
            ForeignKeyConstraint([u'permission_id'], [u'public.auth_permission.id'], name=u'auth_group_permissions_permission_id_fkey'),
    schema='public')
Index('index_auth_group_permissions_group_id_key', auth_group_permissions.c.group_id, auth_group_permissions.c.permission_id, unique=True)


auth_user_groups =  Table('auth_user_groups', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'user_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'group_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'group_id'], [u'public.auth_group.id'], name=u'auth_user_groups_group_id_fkey'),
            ForeignKeyConstraint([u'user_id'], [u'public.auth_user.id'], name=u'auth_user_groups_user_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
    schema='public')
Index('index_auth_user_groups_user_id_key', auth_user_groups.c.user_id, auth_user_groups.c.group_id, unique=True)


auth_group =  Table('auth_group', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
    schema='public')
Index('index_auth_group_name_key', auth_group.c.name, unique=True)


auth_permission =  Table('auth_permission', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=50, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'description', TEXT(convert_unicode=False), primary_key=False, nullable=False),
    schema='public')


auth_user_user_permissions =  Table('auth_user_user_permissions', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'user_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'permission_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'permission_id'], [u'public.auth_permission.id'], name=u'auth_user_user_permissions_permission_id_fkey'),
            ForeignKeyConstraint([u'user_id'], [u'public.auth_user.id'], name=u'auth_user_user_permissions_user_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
    schema='public')
Index('index_auth_user_user_permissions_user_id_key', auth_user_user_permissions.c.user_id, auth_user_user_permissions.c.permission_id, unique=True)


auth_user =  Table('auth_user', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'username', VARCHAR(length=30, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'first_name', VARCHAR(length=30, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'middle_name', VARCHAR(length=30, convert_unicode=False), primary_key=False),
            Column(u'last_name', VARCHAR(length=30, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'email', VARCHAR(length=75, convert_unicode=False), primary_key=False),
            Column(u'is_staff', BOOLEAN(), primary_key=False, nullable=False, default=default_active),
            Column(u'is_active', BOOLEAN(), primary_key=False, nullable=False, default=default_active),
            Column(u'is_superuser', BOOLEAN(), primary_key=False, nullable=False, default=default_inactive),
            Column(u'last_login', TIMESTAMP(timezone=True), primary_key=False, nullable=False, 
                    onupdate=time_now, default=time_now),
            Column(u'date_joined', TIMESTAMP(timezone=True), primary_key=False, nullable=False, default=time_now),
            Column(u'password', VARCHAR(length=40, convert_unicode=False), primary_key=False),
            Column(u'authservice', VARCHAR(length=20, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'address_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'address_id'], [u'public.addresses.id'], name=u'auth_user_address_id_fkey'),
    schema='public')
Index('index_auth_user_username_key', auth_user.c.username, unique=True)


components_suites =  Table('components_suites', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'component_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'testsuite_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'component_id'], [u'public.components.id'], name=u'components_suites_component_id_fkey'),
            ForeignKeyConstraint([u'testsuite_id'], [u'public.test_suites.id'], name=u'components_suites_testsuite_id_fkey'),
    schema='public')
Index('index_components_suites_component_id_key', components_suites.c.component_id, components_suites.c.testsuite_id, unique=True)


projects =  Table('projects', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'category_id', INTEGER(), primary_key=False),
            Column(u'leader_id', INTEGER(), primary_key=False),
            Column(u'description', TEXT(length=None, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'created', TIMESTAMP(timezone=True), primary_key=False, nullable=False, default=time_now),
    ForeignKeyConstraint([u'category_id'], [u'public.project_category.id'], name=u'projects_category_id_fkey'),
            ForeignKeyConstraint([u'leader_id'], [u'public.contacts.id'], name=u'projects_leader_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
    schema='public')
Index('index_projects_name_key', projects.c.name, unique=True)
Index('index_projects_leader_id', projects.c.leader_id, unique=False)
Index('index_projects_category_id', projects.c.category_id, unique=False)


projects_components =  Table('projects_components', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'project_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'component_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'component_id'], [u'public.components.id'], name=u'projects_components_component_id_fkey'),
            ForeignKeyConstraint([u'project_id'], [u'public.projects.id'], name=u'projects_components_project_id_fkey'),
    schema='public')
Index('index_projects_components_project_id_key', projects_components.c.project_id, projects_components.c.component_id, unique=True)


components =  Table('components', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'description', TEXT(length=None, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'created', TIMESTAMP(timezone=True), primary_key=False, nullable=False, default=time_now),
    schema='public')
Index('index_components_name_key', components.c.name, unique=True)


test_cases_areas =  Table('test_cases_areas', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'testcase_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'functionalarea_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'functionalarea_id'], [u'public.functional_area.id'], name=u'test_cases_areas_functionalarea_id_fkey'),
            ForeignKeyConstraint([u'testcase_id'], [u'public.test_cases.id'], name=u'test_cases_areas_testcase_id_fkey'),
    schema='public')
Index('index_test_cases_areas_testcase_id_key', test_cases_areas.c.testcase_id, test_cases_areas.c.functionalarea_id, unique=True)


test_cases =  Table('test_cases', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'lastchange', TIMESTAMP(timezone=True), primary_key=False, nullable=False, 
                    onupdate=time_now, default=time_now),
            Column(u'lastchangeauthor_id', INTEGER(), primary_key=False),
            Column(u'author_id', INTEGER(), primary_key=False),
            Column(u'reviewer_id', INTEGER(), primary_key=False),
            Column(u'tester_id', INTEGER(), primary_key=False),
            Column(u'reference', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'purpose', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'passcriteria', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'startcondition', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'endcondition', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'procedure', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'comments', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'priority', TestPriorityType(), primary_key=False, nullable=False, default=TestPriorityType.get_default),
            Column(u'cycle', TestCaseType(), primary_key=False, nullable=False, default=TestCaseType.get_default),
            Column(u'status', TestCaseStatus(), primary_key=False, nullable=False, default=TestCaseStatus.get_default),
            Column(u'automated', BOOLEAN(), primary_key=False, nullable=False, default=default_active),
            Column(u'interactive', BOOLEAN(), primary_key=False, nullable=False, default=default_inactive),
            Column(u'valid', BOOLEAN(), primary_key=False, nullable=False, default=default_active),
            Column(u'testimplementation', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'bugid', VARCHAR(length=80, convert_unicode=False), primary_key=False),
            Column(u'prerequisite_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'author_id'], [u'public.auth_user.id'], name=u'test_cases_author_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
            ForeignKeyConstraint([u'reviewer_id'], [u'public.auth_user.id'], name=u'test_cases_reviewer_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
            ForeignKeyConstraint([u'tester_id'], [u'public.auth_user.id'], name=u'test_cases_tester_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
            ForeignKeyConstraint([u'lastchangeauthor_id'], [u'public.auth_user.id'], name=u'test_cases_lastchangeauthor_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
            ForeignKeyConstraint([u'prerequisite_id'], [u'public.test_cases.id'], name=u'test_cases_prerequisite_id_fkey'),
    schema='public')
Index('index_test_cases_lastchangeauthor_id', test_cases.c.lastchangeauthor_id, unique=False)
Index('index_test_cases_reviewer_id', test_cases.c.reviewer_id, unique=False)
Index('index_test_cases_testimplementation', test_cases.c.testimplementation, unique=False)
Index('index_test_cases_author_id', test_cases.c.author_id, unique=False)
Index('index_test_cases_name_key', test_cases.c.name, unique=True)
Index('index_test_cases_tester_id', test_cases.c.tester_id, unique=False)


test_suites =  Table('test_suites', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'valid', BOOLEAN(), primary_key=False, nullable=False, default=default_active),
            Column(u'lastchange', TIMESTAMP(timezone=True), primary_key=False, nullable=False, 
                    onupdate=time_now, default=time_now),
            Column(u'lastchangeauthor_id', INTEGER(), primary_key=False),
            Column(u'suiteimplementation', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'project_id', INTEGER(), primary_key=False),
            Column(u'purpose', TEXT(length=None, convert_unicode=False), primary_key=False),
    ForeignKeyConstraint([u'lastchangeauthor_id'], [u'public.auth_user.id'], name=u'test_suites_lastchangeauthor_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
            ForeignKeyConstraint([u'project_id'], [u'public.projects.id'], name=u'test_suites_projects_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
    schema='public')
Index('index_test_suites_lastchangeauthor_id', test_suites.c.lastchangeauthor_id, unique=False)
Index('index_test_suites_name_key', test_suites.c.name, unique=True)
Index('index_test_suites_project_id', test_suites.c.project_id, unique=False)


test_suites_testcases =  Table('test_suites_testcases', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'testsuite_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'testcase_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'testcase_id'], [u'public.test_cases.id'], name=u'test_suites_testcases_testcase_id_fkey'),
            ForeignKeyConstraint([u'testsuite_id'], [u'public.test_suites.id'], name=u'test_suites_testcases_testsuite_id_fkey'),
    schema='public')
Index('index_test_suites_testcases_testsuite_id_key', test_suites_testcases.c.testsuite_id, test_suites_testcases.c.testcase_id, unique=True)


country_codes =  Table('country_codes', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'isocode', VARCHAR(length=4, convert_unicode=False), primary_key=False, nullable=False),
    schema='public')
Index('index_country_codes_isocode_key', country_codes.c.isocode, unique=True)


test_suites_suites =  Table('test_suites_suites', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'from_testsuite_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'to_testsuite_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'from_testsuite_id'], [u'public.test_suites.id'], name=u'test_suites_suites_from_testsuite_id_fkey'),
            ForeignKeyConstraint([u'to_testsuite_id'], [u'public.test_suites.id'], name=u'test_suites_suites_to_testsuite_id_fkey'),
    schema='public')
Index('index_test_suites_suites_from_testsuite_id_key', test_suites_suites.c.from_testsuite_id, test_suites_suites.c.to_testsuite_id, unique=True)


country_sets =  Table('country_sets', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
    schema='public')
Index('index_country_sets_name_key', country_sets.c.name, unique=True)


country_sets_countries =  Table('country_sets_countries', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'countryset_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'country_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'country_id'], [u'public.country_codes.id'], name=u'country_sets_countries_country_id_fkey'),
            ForeignKeyConstraint([u'countryset_id'], [u'public.country_sets.id'], name=u'country_sets_countries_countryset_id_fkey'),
    schema='public')
Index('index_country_sets_countries_countryset_id_key', country_sets_countries.c.countryset_id, country_sets_countries.c.country_id, unique=True)


language_sets =  Table('language_sets', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
    schema='public')
Index('index_language_sets_name_key', language_sets.c.name, unique=True)


language_sets_languages =  Table('language_sets_languages', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'languageset_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'language_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'language_id'], [u'public.language_codes.id'], name=u'language_sets_languages_language_id_fkey'),
            ForeignKeyConstraint([u'languageset_id'], [u'public.language_sets.id'], name=u'language_sets_languages_languageset_id_fkey'),
    
    schema='public')
Index('index_language_sets_languages_languageset_id_key', language_sets_languages.c.languageset_id, language_sets_languages.c.language_id, unique=True)


corporations_services =  Table('corporations_services', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'corporation_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'functionalarea_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'corporation_id'], [u'public.corporations.id'], name=u'corporations_services_corporation_id_fkey'),
            ForeignKeyConstraint([u'functionalarea_id'], [u'public.functional_area.id'], name=u'corporations_services_functionalarea_id_fkey'),
    schema='public')
Index('index_corporations_services_corporation_id_key', corporations_services.c.corporation_id, corporations_services.c.functionalarea_id, unique=True)


functional_area =  Table('functional_area', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'description', VARCHAR(length=255, convert_unicode=False), primary_key=False),
    schema='public')
Index('index_functional_area_name_key', functional_area.c.name, unique=True)


software_variants =  Table('software_variants', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'software_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'softwarevariant_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'software_id'], [u'public.software.id'], name=u'software_variants_software_id_fkey'),
            ForeignKeyConstraint([u'softwarevariant_id'], [u'public.software_variant.id'], name=u'software_variants_softwarevariant_id_fkey'),
    schema='public')
Index('index_software_variants_software_id_key', software_variants.c.software_id, software_variants.c.softwarevariant_id, unique=True)


software_variant =  Table('software_variant', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'language_id', INTEGER(), primary_key=False),
            Column(u'country_id', INTEGER(), primary_key=False),
            Column(u'encoding', VARCHAR(length=80, convert_unicode=False), primary_key=False),
    ForeignKeyConstraint([u'country_id'], [u'public.country_codes.id'], name=u'software_variant_country_id_fkey'),
            ForeignKeyConstraint([u'language_id'], [u'public.language_codes.id'], name=u'software_variant_language_id_fkey'),
    schema='public')
Index('index_software_variant_name_key', software_variant.c.name, unique=True)
Index('index_software_variant_language_id', software_variant.c.language_id, unique=False)
Index('index_software_variant_country_id', software_variant.c.country_id, unique=False)


language_codes =  Table('language_codes', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'isocode', VARCHAR(length=6, convert_unicode=False), primary_key=False, nullable=False),
    schema='public')
Index('index_language_codes_isocode_key', language_codes.c.isocode, unique=True)
Index('index_language_codes_name_key', language_codes.c.name, unique=True)


networks = Table('networks', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=64, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'layer', INTEGER(), primary_key=False, nullable=False, server_default="1"),
            Column(u'vlanid', INTEGER(), primary_key=False),
            Column(u'ipnetwork', Cidr(), primary_key=False),
            Column(u'lower_id', INTEGER(), primary_key=False),
            Column(u'notes', TEXT(length=None, convert_unicode=False), primary_key=False),
    ForeignKeyConstraint([u'lower_id'], [u'public.networks.id'], name=u'lower_id_refs_networks_id',
                    ondelete="SET NULL"),
    CheckConstraint('layer > 0 AND  layer < 8', name='osilayers'),
            CheckConstraint('vlanid > 0 AND  vlanid < 4094', name='vlanrange'),
    schema='public')


equipment = Table('equipment', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'model_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'serno', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'location_id', INTEGER(), primary_key=False),
            Column(u'sublocation', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'addeddate', TIMESTAMP(timezone=True), primary_key=False, default=time_now),
            Column(u'comments', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'language_id', INTEGER(), primary_key=False),
            Column(u'owner_id', INTEGER(), primary_key=False),
            Column(u'vendor_id', INTEGER(), primary_key=False),
            Column(u'account_id', INTEGER(), primary_key=False),
            Column(u'parent_id', INTEGER(), primary_key=False),
            Column(u'active', BOOLEAN(), primary_key=False, nullable=False, default=default_active),
    ForeignKeyConstraint([u'language_id'], [u'public.language_codes.id'], name=u'equipment_language_id_fkey'),
            ForeignKeyConstraint([u'model_id'], [u'public.equipment_model.id'], name=u'equipment_model_id_fkey'),
            ForeignKeyConstraint([u'vendor_id'], [u'public.corporations.id'], name=u'equipment_vendor_id_fkey'),
            ForeignKeyConstraint([u'owner_id'], [u'public.auth_user.id'], name=u'equipment_owner_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
            ForeignKeyConstraint([u'location_id'], [u'public.location.id'], name=u'equipment_location_id_fkey'),
            ForeignKeyConstraint([u'account_id'], [u'public.account_ids.id'], name=u'equipment_account_id_fkey'),
            ForeignKeyConstraint([u'parent_id'], [u'public.equipment.id'], name=u'parent_id_refs_equipment_id'),
    schema='public')

Index('index_equipment_model_id', equipment.c.model_id, unique=False)
Index('index_equipment_language_id', equipment.c.language_id, unique=False)
Index('index_equipment_owner_id', equipment.c.owner_id, unique=False)
Index('index_equipment_vendor_id', equipment.c.vendor_id, unique=False)
Index('index_equipment_location_id', equipment.c.location_id, unique=False)
Index('index_equipment_account_id', equipment.c.account_id, unique=False)
Index('index_equipment_parent_id', equipment.c.parent_id, unique=False)

# IANAifType
interface_type =  Table('interface_type', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=40, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'enumeration', INTEGER(), primary_key=False),
    schema='public')

interfaces =  Table('interfaces', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=64, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'alias', VARCHAR(length=64, convert_unicode=False)),
            Column(u'ifindex', INTEGER(), primary_key=False),
            Column(u'description', TEXT(convert_unicode=False), primary_key=False),
            Column(u'macaddr', MACADDR(), primary_key=False),
            Column(u'vlan', INTEGER(), primary_key=False),
            Column(u'ipaddr', Inet(), primary_key=False),
            Column(u'mtu', INTEGER(), primary_key=False),
            Column(u'speed', INTEGER(), primary_key=False),
            Column(u'status', INTEGER(), primary_key=False),
            Column(u'interface_type_id', INTEGER(), primary_key=False),
            Column(u'parent_id', INTEGER(), primary_key=False),
            Column(u'equipment_id', INTEGER(), primary_key=False),
            Column(u'network_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'equipment_id'], [u'public.equipment.id'], name=u'interfaces_equipment_id_fkey'),
            ForeignKeyConstraint([u'parent_id'], [u'public.interfaces.id'], name=u'parent_id_refs_interfaces_id'),
            ForeignKeyConstraint([u'interface_type_id'], [u'public.interface_type.id'], name=u'interface_type_id_refs_interfaces_id'),
            ForeignKeyConstraint([u'network_id'], [u'public.networks.id'], name=u'network_id_refs_networks_id'),
    schema='public')
Index('index_interfaces_parent_id', interfaces.c.parent_id, unique=False)
Index('index_interfaces_equipment_id', interfaces.c.equipment_id, unique=False)
Index('index_interfaces_interface_type_id', interfaces.c.interface_type_id, unique=False)
Index('index_interfaces_network_id', interfaces.c.network_id, unique=False)

equipment_attributes =  Table('equipment_attributes', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'type_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'value', PickleText(), primary_key=False, nullable=False),
            Column(u'equipment_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'equipment_id'], [u'public.equipment.id'], name=u'equipment_attributes_equipment_id_fkey'),
            ForeignKeyConstraint([u'type_id'], [u'public.attribute_type.id'], name=u'equipment_attributes_type_id_fkey'),
    schema='public')
Index('index_equipment_attributes_type_id', equipment_attributes.c.type_id, unique=False)
Index('index_equipment_attributes_equipment_id', equipment_attributes.c.equipment_id, unique=False)


equipment_model_attributes =  Table('equipment_model_attributes', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'type_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'value', PickleText(), primary_key=False, nullable=False),
            Column(u'equipmentmodel_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'equipmentmodel_id'], [u'public.equipment_model.id'], name=u'equipment_model_attributes_equipmentmodel_id_fkey'),
            ForeignKeyConstraint([u'type_id'], [u'public.attribute_type.id'], name=u'equipment_model_attributes_type_id_fkey'),
    schema='public')
Index('index_equipment_model_attributes_type_id', equipment_model_attributes.c.type_id, unique=False)
Index('index_equipment_model_attributes_equipmentmodel_id', equipment_model_attributes.c.equipmentmodel_id, unique=False)


equipment_subcomponents =  Table('equipment_subcomponents', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'from_equipment_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'to_equipment_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'from_equipment_id'], [u'public.equipment.id'], name=u'equipment_subcomponents_from_equipment_id_fkey'),
            ForeignKeyConstraint([u'to_equipment_id'], [u'public.equipment.id'], name=u'equipment_subcomponents_to_equipment_id_fkey'),
    schema='public')
Index('index_equipment_subcomponents_from_equipment_id_key', equipment_subcomponents.c.from_equipment_id, equipment_subcomponents.c.to_equipment_id, unique=True)


equipment_software =  Table('equipment_software', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'equipment_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'software_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'equipment_id'], [u'public.equipment.id'], name=u'equipment_software_equipment_id_fkey'),
            ForeignKeyConstraint([u'software_id'], [u'public.software.id'], name=u'equipment_software_software_id_fkey'),
    schema='public')
Index('index_equipment_software_equipment_id_key', equipment_software.c.equipment_id, equipment_software.c.software_id, unique=True)


equipment_category =  Table('equipment_category', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
    schema='public')
Index('index_equipment_category_name_key', equipment_category.c.name, unique=True)


equipment_model =  Table('equipment_model', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'manufacturer_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'category_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'specs', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'picture', VARCHAR(length=255, convert_unicode=False), primary_key=False),
            Column(u'note', TEXT(length=None, convert_unicode=False), primary_key=False),
    ForeignKeyConstraint([u'category_id'], [u'public.equipment_category.id'], name=u'equipment_model_category_id_fkey'),
            ForeignKeyConstraint([u'manufacturer_id'], [u'public.corporations.id'], name=u'equipment_model_manufacturer_id_fkey'),
    schema='public')
Index('index_equipment_model_category_id', equipment_model.c.category_id, unique=False)
Index('index_equipment_model_manufacturer_id', equipment_model.c.manufacturer_id, unique=False)
Index('index_equipment_model_manufacturer_id_key', equipment_model.c.manufacturer_id, equipment_model.c.name, unique=True)


equipment_model_embeddedsoftware =  Table('equipment_model_embeddedsoftware', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'equipmentmodel_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'software_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'equipmentmodel_id'], [u'public.equipment_model.id'], name=u'equipment_model_embeddedsoftware_equipmentmodel_id_fkey'),
            ForeignKeyConstraint([u'software_id'], [u'public.software.id'], name=u'equipment_model_embeddedsoftware_software_id_fkey'),
    schema='public')
Index('index_equipment_model_embeddedsoftware_equipmentmodel_id_key', equipment_model_embeddedsoftware.c.equipmentmodel_id, equipment_model_embeddedsoftware.c.software_id, unique=True)


software =  Table('software', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'manufacturer_id', INTEGER(), primary_key=False),
            Column(u'vendor_id', INTEGER(), primary_key=False),
            Column(u'category_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'category_id'], [u'public.software_category.id'], name=u'software_category_id_fkey'),
            ForeignKeyConstraint([u'vendor_id'], [u'public.corporations.id'], name=u'software_vendor_id_fkey'),
            ForeignKeyConstraint([u'manufacturer_id'], [u'public.corporations.id'], name=u'software_manufacturer_id_fkey'),
    schema='public')
Index('index_software_manufacturer_id', software.c.manufacturer_id, unique=False)
Index('index_software_name_key', software.c.name, unique=True)
Index('index_software_vendor_id', software.c.vendor_id, unique=False)
Index('index_software_category_id', software.c.category_id, unique=False)


project_versions =  Table('project_versions', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'project_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'major', INTEGER(), primary_key=False, nullable=False, default=default_obj(1)),
            Column(u'minor', INTEGER(), primary_key=False, nullable=False, default=default_obj(0)),
            Column(u'subminor', INTEGER(), primary_key=False, nullable=False, default=default_obj(0)),
            Column(u'build', INTEGER(), primary_key=False),
            Column(u'valid', BOOLEAN(), primary_key=False, nullable=False, default=default_active),
    ForeignKeyConstraint([u'project_id'], [u'public.projects.id'], name=u'project_versions_project_id_fkey'),
    schema='public')
Index('index_project_versions_project_id', project_versions.c.project_id, unique=False)


corporations =  Table('corporations', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'parent_id', INTEGER(), primary_key=False),
            Column(u'notes', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'address_id', INTEGER(), primary_key=False),
            Column(u'contact_id', INTEGER(), primary_key=False),
            Column(u'country_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'contact_id'], [u'public.contacts.id'], name=u'contact_id_refs_contacts_id'),
            ForeignKeyConstraint([u'parent_id'], [u'public.corporations.id'], name=u'parent_id_refs_corporations_id'),
            ForeignKeyConstraint([u'country_id'], [u'public.country_codes.id'], name=u'corporations_country_id_fkey'),
            ForeignKeyConstraint([u'address_id'], [u'public.addresses.id'], name=u'corporations_address_id_fkey'),
    schema='public')
Index('index_corporations_parent_id', corporations.c.parent_id, unique=False)
Index('index_corporations_name', corporations.c.name, unique=False)
Index('index_corporations_country_id', corporations.c.country_id, unique=False)
Index('index_corporations_contact_id', corporations.c.contact_id, unique=False)
Index('index_corporations_address_id', corporations.c.address_id, unique=False)
Index('index_corporations_name_key', corporations.c.name, corporations.c.country_id, unique=True)


environments =  Table('environments', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=255, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'owner_id', INTEGER(), primary_key=False),
    ForeignKeyConstraint([u'owner_id'], [u'public.auth_user.id'], name=u'environments_owner_id_fkey',
                    onupdate="CASCADE", ondelete="SET NULL"),
    schema='public')
Index('index_environments_name_key', environments.c.name, unique=True)
Index('index_environments_owner_id', environments.c.owner_id, unique=False)


testequipment =  Table('testequipment', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'equipment_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'environment_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'UUT', BOOLEAN(), primary_key=False, nullable=False, default=default_inactive),
    ForeignKeyConstraint([u'environment_id'], [u'public.environments.id'], name=u'testequipment_environment_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
            ForeignKeyConstraint([u'equipment_id'], [u'public.equipment.id'], name=u'testequipment_equipment_id_fkey',
                    onupdate="CASCADE", ondelete="CASCADE"),
    schema='public')

Index('index_testequipment_equipment_id', testequipment.c.equipment_id, unique=False)
Index('index_testequipment_environment_id', testequipment.c.environment_id, unique=False)


testequipment_roles =  Table('testequipment_roles', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'testequipment_id', INTEGER(), primary_key=False, nullable=False),
            Column(u'softwarecategory_id', INTEGER(), primary_key=False, nullable=False),
    ForeignKeyConstraint([u'softwarecategory_id'], [u'public.software_category.id'], name=u'testequipment_roles_softwarecategory_id_fkey'),
            ForeignKeyConstraint([u'testequipment_id'], [u'public.testequipment.id'], name=u'testequipment_roles_testequipment_id_fkey'),
    schema='public')
Index('index_testequipment_roles_testequipment_id_key', testequipment_roles.c.testequipment_id, testequipment_roles.c.softwarecategory_id, unique=True)


software_category =  Table('software_category', metadata,
    Column(u'id', INTEGER(), primary_key=True, nullable=False),
            Column(u'name', VARCHAR(length=80, convert_unicode=False), primary_key=False, nullable=False),
            Column(u'description', TEXT(length=None, convert_unicode=False), primary_key=False),
    schema='public')
Index('index_software_category_name_key', software_category.c.name, unique=True)

# This table was made to work with the old StarOffice Addressbook
# table. It's still useful as a general contacts list. It's here as an
# "extra".
addressbook =  Table('addressbook', metadata,
            Column(u'PREFIX', VARCHAR(length=15, convert_unicode=False), primary_key=False),
            Column(u'FIRSTNAME', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'LASTNAME', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'TITLE', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'COMPANY', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'DEPARTMENT', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'ADDRESS', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'CITY', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'STATEPROV', VARCHAR(length=5, convert_unicode=False), primary_key=False),
            Column(u'POSTALCODE', VARCHAR(length=15, convert_unicode=False), primary_key=False),
            Column(u'COUNTRY', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'POSITION', VARCHAR(length=100, convert_unicode=False), primary_key=False),
            Column(u'INITIALS', VARCHAR(length=10, convert_unicode=False), primary_key=False),
            Column(u'SALUTATION', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'PHONEHOME', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'PHONEOFFI', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'PHONEOTHE', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'PHONEWORK', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'MOBILE', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'PAGER', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'FAX', VARCHAR(length=25, convert_unicode=False), primary_key=False),
            Column(u'EMAIL', VARCHAR(length=50, convert_unicode=False), primary_key=False),
            Column(u'URL', VARCHAR(length=128, convert_unicode=False), primary_key=False),
            Column(u'NOTE', TEXT(length=None, convert_unicode=False), primary_key=False),
            Column(u'ALTFIELD1', VARCHAR(length=100, convert_unicode=False), primary_key=False),
            Column(u'ALTFIELD2', VARCHAR(length=100, convert_unicode=False), primary_key=False),
            Column(u'ALTFIELD3', VARCHAR(length=100, convert_unicode=False), primary_key=False),
            Column(u'ALTFIELD4', VARCHAR(length=100, convert_unicode=False), primary_key=False),
            Column(u'ID', INTEGER(), primary_key=True, nullable=False),
            Column(u'CALENDAR', VARCHAR(length=100, convert_unicode=False), primary_key=False),
            Column(u'INVITE', VARCHAR(length=1, convert_unicode=False), primary_key=False),
    schema='public')
Index('index_address_pkey', addressbook.c.ID, unique=True)


# Run this module to create the tables. The user/role/database should
# already be created.
if __name__ == '__main__':
    import sys
    from pycopia import autodebug
    from pycopia import getopt
    from sqlalchemy import create_engine

    tname = None
    opts, longopts, args = getopt.getopt(sys.argv[1:], "t:")
    try:
        url = args[0]
    except IndexError:
        print "Please supply a database URL."
        print "e.g: postgresql://pycopia@localhost/pycopia"
        print "Use -t <name> to select single table."
    else:
        for opt, optarg in opts:
            if opt == "-t":
                tname = optarg
        db = create_engine(unicode(url))
        metadata.bind = db
        if tname:
            tbl = getattr(sys.modules[__name__], tname)
            print tbl
            tbl.drop(checkfirst=True)
            tbl.create()
        else:
            print "creating tables in", url
            metadata.create_all()


