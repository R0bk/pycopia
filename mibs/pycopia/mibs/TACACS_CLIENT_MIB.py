# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Unsigned32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from INET_ADDRESS_MIB import InetAddressIPv4
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus
from LVL7_REF_MIB import fastPath

class TACACS_CLIENT_MIB(ModuleObject):
	path = '/usr/share/mibs/site/TACACS-CLIENT-MIB'
	conformance = 4
	name = 'TACACS-CLIENT-MIB'
	language = 2
	description = 'This MIB module defines a portion of the SNMP MIB under\nthe LVL7 Systems enterprise OID pertaining to\nTACACS+ client configuration.'

# nodes
class agentTacacsClientMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18])
	name = 'agentTacacsClientMIB'

class agentTacacsClientObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1])
	name = 'agentTacacsClientObjects'

class agentTacacsGlobalConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 1])
	name = 'agentTacacsGlobalConfigGroup'


# macros
# types 
# scalars 
class agentTacacsGlobalTimeout(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentTacacsGlobalKey(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


# columns
class agentTacacsServerIpAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 2, 1, 1])
	syntaxobject = InetAddressIPv4


class agentTacacsPortNumber(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentTacacsTimeOut(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentTacacsKey(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentTacacsPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentTacacsServerStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class agentTacacsServerEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentTacacsServerIpAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 18, 1, 2, 1])
	access = 2
	rowstatus = agentTacacsServerStatus
	columns = {'agentTacacsServerIpAddress': agentTacacsServerIpAddress, 'agentTacacsPortNumber': agentTacacsPortNumber, 'agentTacacsTimeOut': agentTacacsTimeOut, 'agentTacacsKey': agentTacacsKey, 'agentTacacsPriority': agentTacacsPriority, 'agentTacacsServerStatus': agentTacacsServerStatus}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
