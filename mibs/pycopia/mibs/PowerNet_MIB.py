# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from RFC1213_MIB import DisplayString
from RFC1155_SMI import enterprises, IpAddress, Gauge, TimeTicks
from RFC_1215 import TRAP_TYPE

class PowerNet_MIB(ModuleObject):
	path = '/usr/share/mibs/site/PowerNet-MIB'
	conformance = 2
	name = 'PowerNet-MIB'
	language = 1

# nodes
class apc(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318])
	name = 'apc'

class products(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1])
	name = 'products'

class hardware(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1])
	name = 'hardware'

class ups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1])
	name = 'ups'

class upsIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1])
	name = 'upsIdent'

class upsBasicIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 1])
	name = 'upsBasicIdent'

class upsAdvIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 2])
	name = 'upsAdvIdent'

class upsBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2])
	name = 'upsBattery'

class upsBasicBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 1])
	name = 'upsBasicBattery'

class upsAdvBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2])
	name = 'upsAdvBattery'

class upsInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3])
	name = 'upsInput'

class upsBasicInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 1])
	name = 'upsBasicInput'

class upsAdvInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2])
	name = 'upsAdvInput'

class upsOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4])
	name = 'upsOutput'

class upsBasicOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 1])
	name = 'upsBasicOutput'

class upsAdvOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2])
	name = 'upsAdvOutput'

class upsConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5])
	name = 'upsConfig'

class upsBasicConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1])
	name = 'upsBasicConfig'

class upsAdvConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2])
	name = 'upsAdvConfig'

class upsControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6])
	name = 'upsControl'

class upsBasicControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 1])
	name = 'upsBasicControl'

class upsAdvControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2])
	name = 'upsAdvControl'

class upsTest(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7])
	name = 'upsTest'

class upsBasicTest(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 1])
	name = 'upsBasicTest'

class upsAdvTest(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2])
	name = 'upsAdvTest'

class upsComm(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 8])
	name = 'upsComm'

class upsPhase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9])
	name = 'upsPhase'

class upsPhaseResetValues(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 1])
	name = 'upsPhaseResetValues'

class upsPhaseInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2])
	name = 'upsPhaseInput'

class upsPhaseOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3])
	name = 'upsPhaseOutput'

class upsSyncCtrlGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10])
	name = 'upsSyncCtrlGroup'

class upsSyncCtrlGroupConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1])
	name = 'upsSyncCtrlGroupConfig'

class upsSyncCtrlGroupStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2])
	name = 'upsSyncCtrlGroupStatus'

class upsState(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11])
	name = 'upsState'

class upsBasicState(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 1])
	name = 'upsBasicState'

class upsAdvState(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 2])
	name = 'upsAdvState'

class upsOutletGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12])
	name = 'upsOutletGroups'

class upsOutletGroupStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1])
	name = 'upsOutletGroupStatus'

class upsOutletGroupConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2])
	name = 'upsOutletGroupConfig'

class upsOutletGroupControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3])
	name = 'upsOutletGroupControl'

class upsDiagnostics(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13])
	name = 'upsDiagnostics'

class upsDiagnosticIM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1])
	name = 'upsDiagnosticIM'

class upsDiagnosticPowerModules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2])
	name = 'upsDiagnosticPowerModules'

class upsDiagnosticBatteries(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3])
	name = 'upsDiagnosticBatteries'

class upsDiagnosticSubsystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4])
	name = 'upsDiagnosticSubsystem'

class upsDiagnosticExternalDevices(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5])
	name = 'upsDiagnosticExternalDevices'

class upsDiagSwitchGear(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1])
	name = 'upsDiagSwitchGear'

class upsDiagMCCBBox(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 2])
	name = 'upsDiagMCCBBox'

class upsDiagTransformer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 3])
	name = 'upsDiagTransformer'

class upsDiagnosticComBus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6])
	name = 'upsDiagnosticComBus'

class measureUps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2])
	name = 'measureUps'

class mUpsEnviron(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1])
	name = 'mUpsEnviron'

class mUpsContact(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2])
	name = 'mUpsContact'

class miniSNMPadapter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3])
	name = 'miniSNMPadapter'

class serialPort(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1])
	name = 'serialPort'

class serialPort1(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1, 1])
	name = 'serialPort1'

class serialPort2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1, 2])
	name = 'serialPort2'

class serialPort2Config(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1, 2, 1])
	name = 'serialPort2Config'

class serialPort2Control(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 3, 1, 2, 2])
	name = 'serialPort2Control'

class masterswitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4])
	name = 'masterswitch'

class sPDUIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1])
	name = 'sPDUIdent'

class sPDUMasterControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 2])
	name = 'sPDUMasterControl'

class sPDUMasterConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 3])
	name = 'sPDUMasterConfig'

class sPDUOutletControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4])
	name = 'sPDUOutletControl'

class sPDUOutletConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5])
	name = 'sPDUOutletConfig'

class masterswitchVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5])
	name = 'masterswitchVM'

class sPDUIdentVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1])
	name = 'sPDUIdentVM'

class sPDUMasterControlVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2])
	name = 'sPDUMasterControlVM'

class sPDUMasterConfigVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3])
	name = 'sPDUMasterConfigVM'

class sPDUMasterStatusVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4])
	name = 'sPDUMasterStatusVM'

class sPDUOutletControlVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5])
	name = 'sPDUOutletControlVM'

class sPDUOutletConfigVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6])
	name = 'sPDUOutletConfigVM'

class sPDUOutletStatusVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7])
	name = 'sPDUOutletStatusVM'

class masterswitchMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6])
	name = 'masterswitchMSP'

class sPDUIdentMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1])
	name = 'sPDUIdentMSP'

class sPDUMasterControlMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2])
	name = 'sPDUMasterControlMSP'

class sPDUMasterConfigMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3])
	name = 'sPDUMasterConfigMSP'

class sPDUMasterStatusMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4])
	name = 'sPDUMasterStatusMSP'

class sPDUOutletControlMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5])
	name = 'sPDUOutletControlMSP'

class sPDUOutletConfigMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6])
	name = 'sPDUOutletConfigMSP'

class sPDUOutletConfigMSPall(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1])
	name = 'sPDUOutletConfigMSPall'

class sPDUOutletConfigMSPgs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2])
	name = 'sPDUOutletConfigMSPgs'

class sPDUOutletConfigMSPannun(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3])
	name = 'sPDUOutletConfigMSPannun'

class sPDUOutletConfigMSPmups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4])
	name = 'sPDUOutletConfigMSPmups'

class sPDUOutletStatusMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7])
	name = 'sPDUOutletStatusMSP'

class dcDM3(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7])
	name = 'dcDM3'

class dm3Ident(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1])
	name = 'dm3Ident'

class dm3IdentSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1])
	name = 'dm3IdentSystem'

class dm3Config(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2])
	name = 'dm3Config'

class dm3ConfigSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1])
	name = 'dm3ConfigSystem'

class dm3ConfigLVD(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2])
	name = 'dm3ConfigLVD'

class dm3ConfigBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3])
	name = 'dm3ConfigBattery'

class dm3ConfigPowerModules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4])
	name = 'dm3ConfigPowerModules'

class dm3ConfigRectifier(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1])
	name = 'dm3ConfigRectifier'

class dm3ConfigRectThresh(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1])
	name = 'dm3ConfigRectThresh'

class dm3ConfigRectAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2])
	name = 'dm3ConfigRectAlarms'

class dm3ConfigConverter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2])
	name = 'dm3ConfigConverter'

class dm3ConfigConvThresh(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1])
	name = 'dm3ConfigConvThresh'

class dm3ConfigConvAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2])
	name = 'dm3ConfigConvAlarms'

class dm3ConfigRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5])
	name = 'dm3ConfigRelays'

class dm3ConfigOutputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1])
	name = 'dm3ConfigOutputRelays'

class dm3ConfigInputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2])
	name = 'dm3ConfigInputRelays'

class dm3ConfigDistribution(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6])
	name = 'dm3ConfigDistribution'

class dm3ConfigBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1])
	name = 'dm3ConfigBreakers'

class dm3ConfigFuses(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2])
	name = 'dm3ConfigFuses'

class dm3Status(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3])
	name = 'dm3Status'

class dm3StatusSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1])
	name = 'dm3StatusSystem'

class dm3StatusAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2])
	name = 'dm3StatusAlarms'

class dm3StatusBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3])
	name = 'dm3StatusBattery'

class dm3StatusOEM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4])
	name = 'dm3StatusOEM'

class dm3StatusLVD(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5])
	name = 'dm3StatusLVD'

class dm3StatusPowerModules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6])
	name = 'dm3StatusPowerModules'

class dm3StatusRectifier(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1])
	name = 'dm3StatusRectifier'

class dm3StatusConverter(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2])
	name = 'dm3StatusConverter'

class dm3StatusRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7])
	name = 'dm3StatusRelays'

class dm3StatusOutputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1])
	name = 'dm3StatusOutputRelays'

class dm3StatusInputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2])
	name = 'dm3StatusInputRelays'

class dm3StatusDistribution(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8])
	name = 'dm3StatusDistribution'

class dm3StatusBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1])
	name = 'dm3StatusBreakers'

class dm3StatusFuses(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2])
	name = 'dm3StatusFuses'

class automaticTransferSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8])
	name = 'automaticTransferSwitch'

class atsIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1])
	name = 'atsIdent'

class atsCalibration(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2])
	name = 'atsCalibration'

class atsCalibrationInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1])
	name = 'atsCalibrationInput'

class atsCalibrationPowerSupply(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2])
	name = 'atsCalibrationPowerSupply'

class atsCalibrationOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3])
	name = 'atsCalibrationOutput'

class atsControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 3])
	name = 'atsControl'

class atsConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4])
	name = 'atsConfig'

class atsStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5])
	name = 'atsStatus'

class atsStatusDeviceStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1])
	name = 'atsStatusDeviceStatus'

class atsStatusResetValues(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 2])
	name = 'atsStatusResetValues'

class atsStatusInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3])
	name = 'atsStatusInput'

class atsStatusOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4])
	name = 'atsStatusOutput'

class dc2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9])
	name = 'dc2'

class dcmim2Ident(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 1])
	name = 'dcmim2Ident'

class dcmim2IdentSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 1, 1])
	name = 'dcmim2IdentSystem'

class dcmim2Control(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 2])
	name = 'dcmim2Control'

class dcmim2ControlSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 2, 1])
	name = 'dcmim2ControlSystem'

class dcmim2Config(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3])
	name = 'dcmim2Config'

class dcmim2ConfigSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1])
	name = 'dcmim2ConfigSystem'

class dcmim2ConfigBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2])
	name = 'dcmim2ConfigBattery'

class dcmim2ConfigLVD(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3])
	name = 'dcmim2ConfigLVD'

class dcmim2Status(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4])
	name = 'dcmim2Status'

class dcmim2StatusSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1])
	name = 'dcmim2StatusSystem'

class dcmim2StatusRectifier(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2])
	name = 'dcmim2StatusRectifier'

class dcmim2StatusBattery(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3])
	name = 'dcmim2StatusBattery'

class dcmim2StatusLVD(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4])
	name = 'dcmim2StatusLVD'

class dcmim2StatusAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5])
	name = 'dcmim2StatusAlarms'

class environmentalMonitor(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10])
	name = 'environmentalMonitor'

class external(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1])
	name = 'external'

class emIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 1])
	name = 'emIdent'

class emConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2])
	name = 'emConfig'

class emStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3])
	name = 'emStatus'

class integrated(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2])
	name = 'integrated'

class iemIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 1])
	name = 'iemIdent'

class iemConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2])
	name = 'iemConfig'

class iemStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3])
	name = 'iemStatus'

class envMgtSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3])
	name = 'envMgtSystem'

class emsIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1])
	name = 'emsIdent'

class emsOutputRelayControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2])
	name = 'emsOutputRelayControl'

class emsOutletControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3])
	name = 'emsOutletControl'

class emsSensorControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4])
	name = 'emsSensorControl'

class emsAlarmDeviceControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5])
	name = 'emsAlarmDeviceControl'

class emsConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 6])
	name = 'emsConfig'

class emsProbeConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7])
	name = 'emsProbeConfig'

class emsInputContactConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8])
	name = 'emsInputContactConfig'

class emsOutputRelayConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9])
	name = 'emsOutputRelayConfig'

class emsOutletConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10])
	name = 'emsOutletConfig'

class emsSensorConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11])
	name = 'emsSensorConfig'

class emsStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12])
	name = 'emsStatus'

class emsProbeStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13])
	name = 'emsProbeStatus'

class emsInputContactStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14])
	name = 'emsInputContactStatus'

class emsOutputRelayStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15])
	name = 'emsOutputRelayStatus'

class emsOutletStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16])
	name = 'emsOutletStatus'

class emsAlarmDeviceStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17])
	name = 'emsAlarmDeviceStatus'

class emsSensorStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18])
	name = 'emsSensorStatus'

class modEnvMgr(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4])
	name = 'modEnvMgr'

class memModules(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1])
	name = 'memModules'

class memSensors(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2])
	name = 'memSensors'

class memInputs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3])
	name = 'memInputs'

class memOutputs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4])
	name = 'memOutputs'

class memOutlets(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5])
	name = 'memOutlets'

class memBeacons(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6])
	name = 'memBeacons'

class netlock(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 11])
	name = 'netlock'

class nlIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 11, 1])
	name = 'nlIdent'

class nlStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 11, 2])
	name = 'nlStatus'

class rPDU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12])
	name = 'rPDU'

class rPDUIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1])
	name = 'rPDUIdent'

class rPDULoad(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2])
	name = 'rPDULoad'

class rPDULoadDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1])
	name = 'rPDULoadDevice'

class rPDULoadPhaseConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2])
	name = 'rPDULoadPhaseConfig'

class rPDULoadStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3])
	name = 'rPDULoadStatus'

class rPDULoadBankConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 4])
	name = 'rPDULoadBankConfig'

class rPDUOutlet(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3])
	name = 'rPDUOutlet'

class rPDUOutletDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1])
	name = 'rPDUOutletDevice'

class rPDUOutletPhase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 2])
	name = 'rPDUOutletPhase'

class rPDUOutletControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3])
	name = 'rPDUOutletControl'

class rPDUOutletConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4])
	name = 'rPDUOutletConfig'

class rPDUOutletStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5])
	name = 'rPDUOutletStatus'

class rPDUOutletBank(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 6])
	name = 'rPDUOutletBank'

class rPDUPowerSupply(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4])
	name = 'rPDUPowerSupply'

class rPDUPowerSupplyDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4, 1])
	name = 'rPDUPowerSupplyDevice'

class rPDUStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5])
	name = 'rPDUStatus'

class airConditioners(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13])
	name = 'airConditioners'

class airFM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1])
	name = 'airFM'

class airFMIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1])
	name = 'airFMIdent'

class airFMStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2])
	name = 'airFMStatus'

class airFMGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 3])
	name = 'airFMGroup'

class airPA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2])
	name = 'airPA'

class airPAIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1])
	name = 'airPAIdent'

class airPAStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2])
	name = 'airPAStatus'

class airIR(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3])
	name = 'airIR'

class airIRAlarms(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 1])
	name = 'airIRAlarms'

class airIRRC(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2])
	name = 'airIRRC'

class airIRRCGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1])
	name = 'airIRRCGroup'

class airIRRCGroupStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1])
	name = 'airIRRCGroupStatus'

class airIRRCGroupSetpoints(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 2])
	name = 'airIRRCGroupSetpoints'

class airIRRCGroupConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 3])
	name = 'airIRRCGroupConfig'

class airIRRCUnit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2])
	name = 'airIRRCUnit'

class airIRRCUnitIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1])
	name = 'airIRRCUnitIdent'

class airIRRCUnitStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2])
	name = 'airIRRCUnitStatus'

class airIRRCUnitRunHours(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3])
	name = 'airIRRCUnitRunHours'

class airIRRCUnitServiceIntervals(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 4])
	name = 'airIRRCUnitServiceIntervals'

class airIRRCUnitThresholds(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5])
	name = 'airIRRCUnitThresholds'

class airIRRCUnitConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 6])
	name = 'airIRRCUnitConfig'

class airIRSC(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4])
	name = 'airIRSC'

class airIRSCUnit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1])
	name = 'airIRSCUnit'

class airIRSCUnitIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 1])
	name = 'airIRSCUnitIdent'

class airIRSCUnitStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2])
	name = 'airIRSCUnitStatus'

class airIRSCUnitRunHours(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3])
	name = 'airIRSCUnitRunHours'

class airIRSCUnitServiceIntervals(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 4])
	name = 'airIRSCUnitServiceIntervals'

class airIRSCUnitThresholds(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 5])
	name = 'airIRSCUnitThresholds'

class airIRSCUnitSetpoints(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 6])
	name = 'airIRSCUnitSetpoints'

class airIRSCUnitConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7])
	name = 'airIRSCUnitConfig'

class rARU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14])
	name = 'rARU'

class rARUIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 1])
	name = 'rARUIdent'

class rARUConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2])
	name = 'rARUConfig'

class rARUStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3])
	name = 'rARUStatus'

class rARUFanStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4])
	name = 'rARUFanStatus'

class rARUPower(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 5])
	name = 'rARUPower'

class rARUSensors(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6])
	name = 'rARUSensors'

class xPDU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15])
	name = 'xPDU'

class xPDUIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1])
	name = 'xPDUIdent'

class xPDUDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2])
	name = 'xPDUDevice'

class xPDUACMonitoringPoint(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3])
	name = 'xPDUACMonitoringPoint'

class xPDUMainInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1])
	name = 'xPDUMainInput'

class xPDUBypassInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2])
	name = 'xPDUBypassInput'

class xPDUUPSInput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3])
	name = 'xPDUUPSInput'

class xPDUSystemOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4])
	name = 'xPDUSystemOutput'

class xPDUGroundMonitorPoint(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 5])
	name = 'xPDUGroundMonitorPoint'

class xPDUCircuitBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4])
	name = 'xPDUCircuitBreakers'

class xPDUSystemBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1])
	name = 'xPDUSystemBreakers'

class xPDUBranchBreakers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2])
	name = 'xPDUBranchBreakers'

class xPDUInputContacts(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5])
	name = 'xPDUInputContacts'

class xPDUOutputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6])
	name = 'xPDUOutputRelays'

class xPDUMiscGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 7])
	name = 'xPDUMiscGroup'

class battMan(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16])
	name = 'battMan'

class battManIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 1])
	name = 'battManIdent'

class battManSystemCalib(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 2])
	name = 'battManSystemCalib'

class battManUnitCalib(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 3])
	name = 'battManUnitCalib'

class battManStringCalib(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 4])
	name = 'battManStringCalib'

class battManBatteryCalib(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5])
	name = 'battManBatteryCalib'

class battManConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6])
	name = 'battManConfig'

class battManAlarm(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 7])
	name = 'battManAlarm'

class battManSystemStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8])
	name = 'battManSystemStatus'

class battManStringStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9])
	name = 'battManStringStatus'

class battManBatteryStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10])
	name = 'battManBatteryStatus'

class battManInputContactStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11])
	name = 'battManInputContactStatus'

class battManControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 12])
	name = 'battManControl'

class battManTestResults(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13])
	name = 'battManTestResults'

class xATS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17])
	name = 'xATS'

class xATSIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1])
	name = 'xATSIdent'

class xATSDevice(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 2])
	name = 'xATSDevice'

class xATSSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3])
	name = 'xATSSwitch'

class xATSSwitchStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 1])
	name = 'xATSSwitchStatus'

class xATSSwitchSettings(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2])
	name = 'xATSSwitchSettings'

class xATSSwitchTimers(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3])
	name = 'xATSSwitchTimers'

class xATSSwitchBlockMap(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 4])
	name = 'xATSSwitchBlockMap'

class xATSSwitchStatistics(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 5])
	name = 'xATSSwitchStatistics'

class xATSACMonitoringPoint(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4])
	name = 'xATSACMonitoringPoint'

class xATSSource1(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1])
	name = 'xATSSource1'

class xATSSource2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2])
	name = 'xATSSource2'

class xATSSystemOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3])
	name = 'xATSSystemOutput'

class xATSTesting(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5])
	name = 'xATSTesting'

class xATSTestingStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 1])
	name = 'xATSTestingStatus'

class xATSTestingResults(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 2])
	name = 'xATSTestingResults'

class xATSTestingSchedule(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 3])
	name = 'xATSTestingSchedule'

class xATSTestingSimulatePowerFail(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 4])
	name = 'xATSTestingSimulatePowerFail'

class xATSInputContacts(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 6])
	name = 'xATSInputContacts'

class xATSOutputRelays(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 7])
	name = 'xATSOutputRelays'

class xATSMisc(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 8])
	name = 'xATSMisc'

class generator(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18])
	name = 'generator'

class xATSGenerator(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1])
	name = 'xATSGenerator'

class xATSGeneratorIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 1])
	name = 'xATSGeneratorIdent'

class xATSGeneratorStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 2])
	name = 'xATSGeneratorStatus'

class xATSGeneratorAdvStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 3])
	name = 'xATSGeneratorAdvStatus'

class xATSGeneratorOutput(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4])
	name = 'xATSGeneratorOutput'

class xATSGeneratorSettings(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5])
	name = 'xATSGeneratorSettings'

class xATSGeneratorService(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6])
	name = 'xATSGeneratorService'

class xATSGeneratorFuelSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7])
	name = 'xATSGeneratorFuelSystem'

class consolePortServer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19])
	name = 'consolePortServer'

class cpsAP930x(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1])
	name = 'cpsAP930x'

class cpsAP930xSys(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1])
	name = 'cpsAP930xSys'

class apCPSPower(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 3])
	name = 'apCPSPower'

class apCPSPcmcia(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4])
	name = 'apCPSPcmcia'

class cpsAP930xConf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2])
	name = 'cpsAP930xConf'

class cpsEthItf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 4])
	name = 'cpsEthItf'

class cpsNameService(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 5])
	name = 'cpsNameService'

class cpsDNSserv(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 5, 3])
	name = 'cpsDNSserv'

class cpsSerialPortConf(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6])
	name = 'cpsSerialPortConf'

class cpsSerialGlobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1])
	name = 'cpsSerialGlobal'

class cpsSerialSpec(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2])
	name = 'cpsSerialSpec'

class cpsAP930xInfo(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3])
	name = 'cpsAP930xInfo'

class cpsAP930xAdm(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 4])
	name = 'cpsAP930xAdm'

class accessControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20])
	name = 'accessControl'

class accessPX(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1])
	name = 'accessPX'

class accessPXIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 1])
	name = 'accessPXIdent'

class accessPXConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 2])
	name = 'accessPXConfig'

class accessPXConfigFront(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 3])
	name = 'accessPXConfigFront'

class accessPXStatusFront(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 4])
	name = 'accessPXStatusFront'

class accessPXConfigRear(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 5])
	name = 'accessPXConfigRear'

class accessPXStatusRear(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 6])
	name = 'accessPXStatusRear'

class accessPXConfigBeacon(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 7])
	name = 'accessPXConfigBeacon'

class accessPXStatusBeacon(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 8])
	name = 'accessPXStatusBeacon'

class apcLocalDisplay(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21])
	name = 'apcLocalDisplay'

class apcLocalDisplayIdent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 1])
	name = 'apcLocalDisplayIdent'

class apcLocalDisplayConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 2])
	name = 'apcLocalDisplayConfig'

class software(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2])
	name = 'software'

class powerNetSubAgent(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1])
	name = 'powerNetSubAgent'

class powerNetSoftwareSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 1])
	name = 'powerNetSoftwareSystem'

class powerNetSoftwareConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2])
	name = 'powerNetSoftwareConfig'

class system(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3])
	name = 'system'

class backUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 1])
	name = 'backUPS'

class smartUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2])
	name = 'smartUPS'

class smartUPS250(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 1])
	name = 'smartUPS250'

class smartUPS400(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 2])
	name = 'smartUPS400'

class smartUPS600(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 3])
	name = 'smartUPS600'

class smartUPS900(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 4])
	name = 'smartUPS900'

class smartUPS1250(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 5])
	name = 'smartUPS1250'

class smartUPS2000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 6])
	name = 'smartUPS2000'

class smartUPS450(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 7])
	name = 'smartUPS450'

class smartUPS700(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 8])
	name = 'smartUPS700'

class smartUPS1000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 9])
	name = 'smartUPS1000'

class smartUPS1400(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 10])
	name = 'smartUPS1400'

class smartUPS2200(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 11])
	name = 'smartUPS2200'

class smartUPS3000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 12])
	name = 'smartUPS3000'

class smartUPS5000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 13])
	name = 'smartUPS5000'

class smartUPS7500(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 14])
	name = 'smartUPS7500'

class smartUPS10000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 15])
	name = 'smartUPS10000'

class smartUPS1500(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 16])
	name = 'smartUPS1500'

class smartUPS3000DSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 17])
	name = 'smartUPS3000DSP'

class smartUPS5000DSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 2, 18])
	name = 'smartUPS5000DSP'

class matrixUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 3])
	name = 'matrixUPS'

class matrixUPS3000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 3, 1])
	name = 'matrixUPS3000'

class matrixUPS5000(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 3, 2])
	name = 'matrixUPS5000'

class masterSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4])
	name = 'masterSwitch'

class masterSwitchV1(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 1])
	name = 'masterSwitchV1'

class masterSwitchV2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 2])
	name = 'masterSwitchV2'

class masterSwitchVM(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 3])
	name = 'masterSwitchVM'

class masterSwitchMSP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 4])
	name = 'masterSwitchMSP'

class masterSwitchrPDU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 4, 5])
	name = 'masterSwitchrPDU'

class symmetraUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5])
	name = 'symmetraUPS'

class symmetraUPS4kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5, 1])
	name = 'symmetraUPS4kVA'

class symmetraUPS8kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5, 2])
	name = 'symmetraUPS8kVA'

class symmetraUPS12kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5, 3])
	name = 'symmetraUPS12kVA'

class symmetraUPS16kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 5, 4])
	name = 'symmetraUPS16kVA'

class dp100E(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 6])
	name = 'dp100E'

class dp300E(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 7])
	name = 'dp300E'

class monitors(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8])
	name = 'monitors'

class environmental(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8, 1])
	name = 'environmental'

class environmentalMgtSystem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8, 2])
	name = 'environmentalMgtSystem'

class emu2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8, 3])
	name = 'emu2'

class mem(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 8, 4])
	name = 'mem'

class redundantSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 9])
	name = 'redundantSwitch'

class dcPower(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 10])
	name = 'dcPower'

class dm3(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 10, 1])
	name = 'dm3'

class dcmim2(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 10, 2])
	name = 'dcmim2'

class automaticXferSwitch(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 11])
	name = 'automaticXferSwitch'

class netLock(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 12])
	name = 'netLock'

class symmetra3PhaseUPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13])
	name = 'symmetra3PhaseUPS'

class symmetra3PhaseUPS40kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13, 1])
	name = 'symmetra3PhaseUPS40kVA'

class symmetra3PhaseUPS60kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13, 2])
	name = 'symmetra3PhaseUPS60kVA'

class symmetra3PhaseUPS80kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13, 3])
	name = 'symmetra3PhaseUPS80kVA'

class symmetra3PhaseUPS20kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 13, 4])
	name = 'symmetra3PhaseUPS20kVA'

class networkAir(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 14])
	name = 'networkAir'

class airFMSeries(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 14, 1])
	name = 'airFMSeries'

class rackAirRemovalUnit(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 14, 2])
	name = 'rackAirRemovalUnit'

class airPASeries(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 14, 3])
	name = 'airPASeries'

class infraXurePDU(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 15])
	name = 'infraXurePDU'

class ais5000UPS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 16])
	name = 'ais5000UPS'

class ais5000UPS10kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 16, 1])
	name = 'ais5000UPS10kVA'

class ais5000UPS20kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 16, 2])
	name = 'ais5000UPS20kVA'

class ais5000UPS30kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 16, 3])
	name = 'ais5000UPS30kVA'

class ais5000UPS40kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 16, 4])
	name = 'ais5000UPS40kVA'

class ais5000UPS60kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 16, 5])
	name = 'ais5000UPS60kVA'

class ais5000UPS80kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 16, 6])
	name = 'ais5000UPS80kVA'

class ais5000UPS100kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 16, 7])
	name = 'ais5000UPS100kVA'

class smartUPS3Phase(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 17])
	name = 'smartUPS3Phase'

class smartUPS3Phase10kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 17, 1])
	name = 'smartUPS3Phase10kVA'

class smartUPS3Phase15kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 17, 2])
	name = 'smartUPS3Phase15kVA'

class smartUPS3Phase20kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 17, 3])
	name = 'smartUPS3Phase20kVA'

class smartUPS3Phase30kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 17, 4])
	name = 'smartUPS3Phase30kVA'

class smartUPS3Phase40kVA(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 17, 5])
	name = 'smartUPS3Phase40kVA'

class battManager(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 18])
	name = 'battManager'

class infraXureATS(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 19])
	name = 'infraXureATS'

class conPortServ(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 20])
	name = 'conPortServ'

class conPortServAP930x(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 20, 1])
	name = 'conPortServAP930x'

class gutor(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 21])
	name = 'gutor'

class gutorPEW(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 21, 1])
	name = 'gutorPEW'

class gutorPDW(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 21, 2])
	name = 'gutorPDW'

class gutorWEW(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 21, 3])
	name = 'gutorWEW'

class gutorWDW(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 21, 4])
	name = 'gutorWDW'

class gutorSDC(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 21, 5])
	name = 'gutorSDC'

class accControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 22])
	name = 'accControl'

class accPX(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 3, 22, 1])
	name = 'accPX'

class experimental(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 4])
	name = 'experimental'

class apcmgmt(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2])
	name = 'apcmgmt'

class mconfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1])
	name = 'mconfig'

class mconfigClock(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 6])
	name = 'mconfigClock'

class mcontrol(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 2])
	name = 'mcontrol'

class mtrapargs(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3])
	name = 'mtrapargs'

class mfiletransfer(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4])
	name = 'mfiletransfer'

class mfiletransferStatus(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 1])
	name = 'mfiletransferStatus'

class mfiletransferConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2])
	name = 'mfiletransferConfig'

class mfiletransferConfigSettings(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 1])
	name = 'mfiletransferConfigSettings'

class mfiletransferConfigTFTP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 2])
	name = 'mfiletransferConfigTFTP'

class mfiletransferConfigFTP(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 3])
	name = 'mfiletransferConfigFTP'

class mfiletransferControl(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 3])
	name = 'mfiletransferControl'


# macros
# types 
# scalars 
class upsBasicIdentModel(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsBasicIdentName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvIdentFirmwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsBasicBatteryStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'batteryNormal'), Enum(3, 'batteryLow')]


class upsBasicBatteryTimeOnBattery(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsBasicBatteryLastReplaceDate(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvBatteryCapacity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvBatteryTemperature(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvBatteryRunTimeRemaining(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvBatteryReplaceIndicator(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noBatteryNeedsReplacing'), Enum(2, 'batteryNeedsReplacing')]


class upsAdvBatteryNumOfBattPacks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvBatteryNumOfBadBattPacks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvBatteryNominalVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvBatteryActualVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvBatteryCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvTotalDCCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 2, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsBasicInputPhase(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvInputLineVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvInputMaxLineVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvInputMinLineVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvInputFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvInputLineFailCause(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 3, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTransfer'), Enum(2, 'highLineVoltage'), Enum(3, 'brownout'), Enum(4, 'blackout'), Enum(5, 'smallMomentarySag'), Enum(6, 'deepMomentarySag'), Enum(7, 'smallMomentarySpike'), Enum(8, 'largeMomentarySpike'), Enum(9, 'selfTest'), Enum(10, 'rateOfVoltageChange')]


class upsBasicOutputStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'onLine'), Enum(3, 'onBattery'), Enum(4, 'onSmartBoost'), Enum(5, 'timedSleeping'), Enum(6, 'softwareBypass'), Enum(7, 'off'), Enum(8, 'rebooting'), Enum(9, 'switchedBypass'), Enum(10, 'hardwareFailureBypass'), Enum(11, 'sleepingUntilPowerReturn'), Enum(12, 'onSmartTrim')]


class upsBasicOutputPhase(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvOutputVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvOutputFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvOutputLoad(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvOutputCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvOutputRedundancy(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class upsAdvOutputKVACapacity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 4, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsBasicConfigNumDevices(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigRatedOutputVoltage(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigHighTransferVolt(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigLowTransferVolt(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'timed'), Enum(2, 'atLowBattery'), Enum(3, 'never'), Enum(4, 'mute')]


class upsAdvConfigAlarmTimer(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigMinReturnCapacity(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigSensitivity(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'auto'), Enum(2, 'low'), Enum(3, 'medium'), Enum(4, 'high')]


class upsAdvConfigLowBatteryRunTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigReturnDelay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigShutoffDelay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigUpsSleepTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigSetEEPROMDefaults(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noSetEEPROMDefaults'), Enum(2, 'setEEPROMDefaults')]


class upsAdvConfigBattExhaustThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigPassword(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvConfigBattCabAmpHour(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigPositionSelector(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'rack'), Enum(3, 'tower')]


class upsAdvConfigOutputFreqRange(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'freqRangeAUTO'), Enum(3, 'freqRange60Var1'), Enum(4, 'freqRange60Var3'), Enum(5, 'freqRange50Var1'), Enum(6, 'freqRange50Var3'), Enum(7, 'freqRange60Var10'), Enum(8, 'freqRange50Var10'), Enum(9, 'freqRange60Var1dot0'), Enum(10, 'freqRange50Var1dot0')]


class upsAdvConfigUPSFail(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'gotoBypass'), Enum(3, 'dropLoad')]


class upsAdvConfigAlarmRedundancy(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigAlarmLoadOver(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigAlarmRuntimeUnder(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigVoutReporting(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 24])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'voutAUTO'), Enum(3, 'vout208'), Enum(4, 'vout240')]


class upsAdvConfigNumExternalBatteries(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 25])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAdvConfigSimpleSignalShutdowns(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 26])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'disabled'), Enum(3, 'enabled')]


class upsAdvConfigMaxShutdownTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 27])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsAsiUpsControlServerRequestShutdown(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 28])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'serverShutdownOff'), Enum(2, 'serverShutdownReboot')]


class upsAdvConfigMinReturnRuntime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 29])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigBasicSignalLowBatteryDuration(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 30])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class upsAdvConfigBypassPhaseLockRequired(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 31])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'disabled'), Enum(3, 'enabled')]


class upsBasicControlConserveBattery(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTurnOffUps'), Enum(2, 'turnOffUpsToConserveBattery')]


class upsAdvControlUpsOff(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTurnUpsOff'), Enum(2, 'turnUpsOff'), Enum(3, 'turnUpsOffGracefully'), Enum(4, 'turnUpsSyncGroupOff'), Enum(5, 'turnUpsSyncGroupOffAfterDelay'), Enum(6, 'turnUpsSyncGroupOffGracefully')]


class upsAdvControlRebootUps(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noRebootUps'), Enum(2, 'rebootUps'), Enum(3, 'rebootUpsGracefully'), Enum(4, 'rebootSyncGroupUps'), Enum(5, 'rebootSyncGroupUpsGracefully')]


class upsAdvControlUpsSleep(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noPutUpsToSleep'), Enum(2, 'putUpsToSleep'), Enum(3, 'putUpsToSleepGracefully'), Enum(4, 'putUpsSyncGroupToSleep'), Enum(5, 'putUpsSyncGroupToSleepGracefully')]


class upsAdvControlSimulatePowerFail(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noSimulatePowerFailure'), Enum(2, 'simulatePowerFailure')]


class upsAdvControlFlashAndBeep(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noFlashAndBeep'), Enum(2, 'flashAndBeep'), Enum(3, 'flashAndBeepSyncGroup')]


class upsAdvControlTurnOnUPS(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTurnOnUPS'), Enum(2, 'turnOnUPS'), Enum(3, 'turnOnUPSSyncGroup')]


class upsAdvControlBypassSwitch(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 6, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noBypassSwitch'), Enum(2, 'switchToBypass'), Enum(3, 'switchOutOfBypass')]


class upsAdvTestDiagnosticSchedule(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'biweekly'), Enum(3, 'weekly'), Enum(4, 'atTurnOn'), Enum(5, 'never')]


class upsAdvTestDiagnostics(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTestDiagnostics'), Enum(2, 'testDiagnostics')]


class upsAdvTestDiagnosticsResults(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'failed'), Enum(3, 'invalidTest'), Enum(4, 'testInProgress')]


class upsAdvTestLastDiagnosticsDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvTestRuntimeCalibration(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noPerformCalibration'), Enum(2, 'performCalibration'), Enum(3, 'cancelCurrentCalibration')]


class upsAdvTestCalibrationResults(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'invalidCalibration'), Enum(3, 'calibrationInProgress')]


class upsAdvTestCalibrationDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 7, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsCommStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 8, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'noComm')]


class upsPhaseResetMaxMinValues(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'reset')]


class upsPhaseNumInputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseNumOutputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGMembershipGroupNumber(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGActiveMembershipStatus(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledSCG'), Enum(2, 'disabledSCG')]


class upsSCGPowerSynchronizationDelayTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGReturnBatteryCapacityOffset(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGMultiCastIP(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class upsSCGNumOfGroupMembers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsBasicStateOutputState(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvStateAbnormalConditions(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvStateSymmetra3PhaseSpecificFaults(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsAdvStateDP300ESpecificFaults(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 11, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsOutletGroupStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupControlTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagIMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagPMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagBatteryTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysFrameTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysIntBypSwitchTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysBattMonitorTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalSwitchGearTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDisplayInterfaceCardTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDCCircuitBreakerTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysSystemPowerSupplyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysXRCommunicationCardTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalPowerFrameBoardTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysChargerTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSwitchGearStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'fail'), Enum(5, 'lostComm'), Enum(6, 'overtemp')]


class upsDiagSwitchGearInputSwitchStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagSwitchGearOutputSwitchStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagSwitchGearBypassSwitchStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagMCCBBoxStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagTransformerStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 5, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'fail'), Enum(5, 'lostComm'), Enum(6, 'overtemp'), Enum(7, 'opened'), Enum(8, 'closed')]


class upsDiagComBusInternalMIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class upsDiagComBusInternalRIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class upsDiagComBusMIMtoRIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class upsDiagComBusExternalMIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class upsDiagComBusExternalRIMStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'lostComm'), Enum(5, 'rxFailure'), Enum(6, 'txFailure')]


class mUpsEnvironAmbientTemperature(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mUpsEnvironRelativeHumidity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mUpsEnvironAmbientTemperature2(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mUpsEnvironRelativeHumidity2(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mUpsContactNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlSwitch(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'turnAllOnNow'), Enum(2, 'turnAllOnSequence'), Enum(3, 'turnAllOffNow'), Enum(4, 'rebootAllNow'), Enum(5, 'rebootAllSequence'), Enum(6, 'noCommand'), Enum(7, 'turnAllOffSequence')]


class sPDUMasterState(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterPending(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterConfigPowerOn(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigReboot(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigPDUName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentVMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterControlVMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentMSPTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterControlMSPTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigMSPTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusMSPTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysDescriptionTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysModel(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysCntrlRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysFWVersion(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysDescriptionTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysHighTempThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysHighTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigSysLowTempThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysLowTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigSysHardwareTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigSysRemoteAccess(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'accessEnabled'), Enum(2, 'accessDisabled')]


class dm3ConfigLVDTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattFloatVolt(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattMaxRecharge(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattDischargeThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattDischargeAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattHighVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattHighVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattLowVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattLowVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattHighTempThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattHighTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattLowTempThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattLowTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattAmpHour(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigCompMethod(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tempcompOn'), Enum(2, 'tempcompOff')]


class dm3ConfigCompTempCoeff(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigHighKneeTemp(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigLowKneeTemp(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBattHwCurrentAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBattHwTempAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 3, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectHighVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigRectLowVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigRectFailSafe(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigRectFailComm(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigRectHighVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectLowVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectConfigAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRect1ofNAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRect2ofNAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectDiagAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectImbalanceAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigRectCurrLimitAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectStandbyAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectFanFailAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectFailAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigRectHwVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConvHighVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvLowVoltThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvFailSafe(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvSetPoint(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvFailMax(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvFailMin(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvFailComm(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigConvHighVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConvLowVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConvConfigAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConv1ofNAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConv2ofNAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigConvDiagAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvImbalanceAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvCurrLimitAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvStandbyAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvFanFailAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvFailAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigConvHwVoltAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 4, 2, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor'), Enum(10, 'alarmNofN')]


class dm3ConfigOutRlyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigInRlyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBreakersTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigFusesTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSystemTemp(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSystemStart(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusSysRemoteAccess(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'accessEnabled'), Enum(2, 'accessDisabled')]


class dm3StatusSysSecurityLevel(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysTempSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusSysAlarmState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmMinor'), Enum(2, 'alarmMajor'), Enum(3, 'alarmBoth'), Enum(4, 'alarmNone')]


class dm3StatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class dm3StatusAlarmsTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBattCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBattTemp(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBattCurrentSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusBattTempSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusOEMrectOffset(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMrectGain(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMconvOffset(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMconvGain(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMshuntOffset(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOEMshuntGain(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusLVDTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysRectVoltSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusSysRectAvailable(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusSysRectType(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysRectVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysRectCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysConvVoltSanity(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'saneYES'), Enum(2, 'saneNO')]


class dm3StatusSysConvAvailable(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusSysConvType(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysConvVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusSysConvCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOutRlyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusInRlyTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBreakersTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusFusesTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentFirmwareDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsIdentNominalLineVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsIdentNominalLineFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationNumInputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationNumInputPhases(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationPowerSupplyVoltages(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationNumOutputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationNumOutputPhases(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsControlResetATS(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'reset')]


class atsControlClearAllAlarms(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'clear')]


class atsConfigProductName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsConfigPreferredSource(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sourceA'), Enum(2, 'sourceB'), Enum(3, 'none')]


class atsConfigFrontPanelLockout(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableFrontPanel'), Enum(2, 'enableFrontPanel')]


class atsConfigVoltageSensitivity(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'high'), Enum(2, 'low')]


class atsConfigTransferVoltageRange(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'wide'), Enum(2, 'medium'), Enum(3, 'narrow')]


class atsConfigCurrentLimit(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsConfigResetValues(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'reset')]


class atsStatusCommStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsNeverDiscovered'), Enum(2, 'atsCommEstablished'), Enum(3, 'atsCommLost')]


class atsStatusSelectedSource(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sourceA'), Enum(2, 'sourceB')]


class atsStatusRedundancyState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsRedundancyLost'), Enum(2, 'atsFullyRedundant')]


class atsStatusOverCurrentState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsOverCurrent'), Enum(2, 'atsCurrentOK')]


class atsStatus5VPowerSupply(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsPowerSupplyFailure'), Enum(2, 'atsPowerSupplyOK')]


class atsStatus24VPowerSupply(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'atsPowerSupplyFailure'), Enum(2, 'atsPowerSupplyOK')]


class atsStatusResetMaxMinValues(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'reset')]


class atsNumInputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsNumOutputs(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2IdentSysFWVersion(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ControlRunFunctBatteryTest(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'battTestOff'), Enum(2, 'battTestOn')]


class dcmim2ControlRunCapacityBatteryTest(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'battTestOff'), Enum(2, 'battTestOn')]


class dcmim2ConfigSysHighTempTrip(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigSysHighTempReset(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigSysLowTempTrip(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigSysLowTempReset(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattFloatVolt(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattMaxRecharge(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattMfgCapacity(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattType(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattFunctTestDuration(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattFunctTestThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattCapacityTestPercent(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattCapacityTestEndThresh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigBattCapacityTestCurrent(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysRectCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysLoadCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysBusVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysAmbientTemp(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusSysUpTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dcmim2StatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class dcmim2StatusRectTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattFloatVolt(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattTemp(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattMfgCapacity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattTestCapacity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusBattFunctTestResult(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'functTestNotPerformed'), Enum(2, 'functTestInProcess'), Enum(3, 'functTestInterrupted'), Enum(4, 'functTestPass'), Enum(5, 'functTestFail')]


class dcmim2StatusBattCapacityTestResult(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'capacityTestNotPerformed'), Enum(2, 'capacityTestInProcess'), Enum(3, 'capacityTestInterrupted'), Enum(4, 'capacityTestPass'), Enum(5, 'capacityTestFail')]


class dcmim2StatusLVDTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusAlarmsTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emIdentFirmwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigProbesNumProbes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigContactsNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusCommStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noComm'), Enum(2, 'comm'), Enum(3, 'commLost')]


class emStatusProbesNumProbes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusContactsNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemIdentHardwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemConfigProbesNumProbes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigContactsNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusProbesNumProbes(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusContactsNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusRelaysNumRelays(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsIdentEMSName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentProductNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsConfigName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsConfigCheckLogLight(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lightDisabled'), Enum(2, 'lightOnInformational'), Enum(3, 'lightOnWarning'), Enum(4, 'lightOnSevere')]


class emsStatusEMSName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsStatusCommStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noComm'), Enum(2, 'comm'), Enum(3, 'commLost')]


class emsStatusProbeCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusInputContactCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusOutputRelayCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusOutletCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusSensorCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusAlinkAruDeviceCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusAlinkProbeDeviceCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusAlarmDeviceCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsStatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class emsStatusCheckLogLight(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lightOff'), Enum(2, 'lightOn')]


class emsStatusHardwareStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 12, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memModulesStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memModulesConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsStatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class memSensorsStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memInputsStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memInputsConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutputStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutputConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutletStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutletConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memBeaconStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memBeaconConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUIdentDeviceRating(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentDeviceNumOutlets(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentDeviceNumPhases(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentDeviceNumBreakers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentDeviceBreakerRating(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentDeviceOrientation(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'orientHorizontal'), Enum(2, 'orientVertical')]


class rPDUIdentDeviceOutletLayout(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'seqPhaseToNeutral'), Enum(2, 'seqPhaseToPhase'), Enum(3, 'seqPhToNeu21PhToPh'), Enum(4, 'seqPhToPhGrouped')]


class rPDUIdentDeviceDisplayOrientation(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'displayNormal'), Enum(2, 'displayReverse')]


class rPDUIdentDeviceLinetoLineVoltage(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentDevicePowerWatts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentDevicePowerFactor(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUIdentDevicePowerVA(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevMaxPhaseLoad(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevNumPhases(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevMaxBankLoad(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevNumBanks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevBankTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevMaxOutletTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletDevCommand(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCommandAll'), Enum(2, 'immediateAllOn'), Enum(3, 'immediateAllOff'), Enum(4, 'immediateAllReboot'), Enum(5, 'delayedAllOn'), Enum(6, 'delayedAllOff'), Enum(7, 'delayedAllReboot'), Enum(8, 'cancelAllPendingCommands')]


class rPDUOutletDevColdstartDelay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletDevNumCntrlOutlets(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletDevNumTotalOutlets(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletDevMonitoredOutlets(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigMonitoredTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUPowerSupply1Status(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powerSupplyOneOk'), Enum(2, 'powerSupplyOneFailed')]


class rPDUPowerSupply2Status(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powerSupplyTwoOk'), Enum(2, 'powerSupplyTwoFailed'), Enum(3, 'powerSupplyTwoNotPresent')]


class rPDUPowerSupplyAlarm(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'allAvailablePowerSuppliesOK'), Enum(2, 'powerSupplyOneFailed'), Enum(3, 'powerSupplyTwoFailed'), Enum(4, 'powerSupplyOneandTwoFailed')]


class rPDUStatusBankTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUStatusPhaseTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUStatusOutletTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMIdentName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemOn(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusOn'), Enum(2, 'statusOff')]


class airFMStatusSystemAverageRetTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemAverageRetTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemAverageRetHum(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemActionTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemActionTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemActionHum(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteHighTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteHighTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteAvgTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteAvgTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteAvgHum(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteLowTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemRemoteLowTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusSystemCoolingEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class airFMStatusSystemReheatingEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class airFMStatusSystemHumidifyEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class airFMStatusSystemDehumidifyEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class airFMStatusModuleTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMGroupSysStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusOnLine'), Enum(2, 'statusIdle'), Enum(3, 'statusLoadShare'), Enum(4, 'statusOffLine'), Enum(5, 'statusFailed'), Enum(6, 'statusDisabled'), Enum(7, 'statusUndefined')]


class airFMGroupSysRuntime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMGroupSysRole(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'rolePrimary'), Enum(2, 'roleBackup')]


class airPAIdentName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPAModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPADateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPASerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPAFirmwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPAHardwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airPASystemPower(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powerON'), Enum(2, 'powerOFF')]


class airPAOperatingMode(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeOFF'), Enum(2, 'modeVENTING'), Enum(3, 'modeCOOLING')]


class airPASetpointTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPASetpointTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPABlowerSpeed(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'speedLOW'), Enum(2, 'speedHIGH')]


class airPACompressor(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusON'), Enum(2, 'statusOFF')]


class airPACondenserFan(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusON'), Enum(2, 'statusOFF')]


class airPACondensatePump(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusON'), Enum(2, 'statusOFF')]


class airPASupplyTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPASupplyTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPAReturnTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPAReturnTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPARemoteTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPARemoteTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airPARemoteHumidity(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 2, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRAlarmConditionsTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupStatusCoolOutput(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupStatusCoolDemand(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupStatusAirFlowUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupStatusAirFlowMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupStatusMaxRackInletTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupStatusMaxRackInletTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupStatusMinRackInletTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupStatusMinRackInletTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupSetpointsCoolUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupSetpointsCoolMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupSetpointsSupplyAirUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupSetpointsSupplyAirMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupSetpointsFanSpeedPreference(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'low'), Enum(2, 'med-low'), Enum(3, 'med'), Enum(4, 'med-high'), Enum(5, 'high')]


class airIRRCGroupConfigNumberofCoolingUnits(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupConfigConfigurationType(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'racs'), Enum(2, 'hacs'), Enum(3, 'in-row')]


class airIRRCGroupConfigPctGlycol(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupConfigCoolGainP(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupConfigCoolResetRateI(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCGroupConfigCoolDerivativeD(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 1, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitIdentID(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitIdentName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRRCUnitIdentLocation(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRRCUnitIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRRCUnitIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRRCUnitIdentFirmwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRRCUnitIdentHardwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRRCUnitIdentManufactureDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRRCUnitStatusOperateMode(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'standby'), Enum(2, 'on'), Enum(3, 'idle')]


class airIRRCUnitStatusCoolOutput(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusCoolDemand(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusAirFlowUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusAirFlowMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusRackInletTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusRackInletTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusSupplyAirTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusSupplyAirTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusReturnAirTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusReturnAirTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusContainmtDPUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusContainmtDPMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusFilterDPUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusFilterDPMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusFanSpeed(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusInputState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class airIRRCUnitStatusOutputState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class airIRRCUnitStatusActivePowerSource(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sourceA'), Enum(2, 'sourceB')]


class airIRRCUnitStatusFluidValvePosition(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusFluidFlowUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusFluidFlowMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusEnteringFluidTemperatureUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusEnteringFluidTemperatureMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusLeavingFluidTemperatureUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 25])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitStatusLeavingFluidTemperatureMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 2, 26])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursAirFilter(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFan1(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFan2(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFan3(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFan4(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFan5(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFan6(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFan7(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFan8(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFanPowerSupplyLeft(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursFanPowerSupplyRight(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitRunHoursCondensatePump(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitServiceIntervalsAirFilter(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitServiceIntervalsAirFilterAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class airIRRCUnitThresholdsRackInletHighTempUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitThresholdsRackInletHighTempMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitThresholdsSupplyAirHighTempUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitThresholdsSupplyAirHighTempMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitThresholdsReturnAirHighTempUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitThresholdsReturnAirHighTempMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitThresholdsEnteringFluidHighTempUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitThresholdsEnteringFluidHighTempMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 5, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitConfigCoolCapacity(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'automatic'), Enum(2, 'maximum')]


class airIRRCUnitConfigStartupDelay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRRCUnitConfigIdleOnLeakDetect(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class airIRRCUnitConfigPowerSource(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sourceA'), Enum(2, 'sourceB'), Enum(3, 'sourceAandB')]


class airIRRCUnitConfigInputNormalState(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class airIRRCUnitConfigOutputNormalState(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 6, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class airIRRCUnitConfigOutputSource(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 2, 2, 6, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'anyAlarm'), Enum(2, 'criticalAlarm')]


class airIRSCUnitIdentName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRSCUnitIdentLocation(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRSCUnitIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRSCUnitIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRSCUnitIdentFirmwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRSCUnitIdentHardwareRevision(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRSCUnitIdentManufactureDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airIRSCUnitStatusOperateMode(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'standby'), Enum(2, 'on'), Enum(3, 'idle')]


class airIRSCUnitStatusCoolOutput(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusCoolDemand(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusAirFlowUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusAirFlowMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusRackInletTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusRackInletTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusSupplyAirTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusSupplyAirTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusReturnAirTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusReturnAirTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusSuctionTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusSuctionTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusSuperheatTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusSuperheatTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusContainmtDPUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusContainmtDPMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusFilterDPUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusFilterDPMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusSuctionPressureUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusSuctionPressureMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusDischargePressureUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusDischargePressureMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusEvaporatorFanSpeed(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 24])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusCondenserFanSpeed(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 25])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusInputState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 26])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class airIRSCUnitStatusOutputState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 27])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class airIRSCUnitStatusCondOutletTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 28])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusCondOutletTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 29])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusCondInletTempUS(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 30])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusCondInletTempMetric(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 31])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitStatusCompressor(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 2, 32])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'on')]


class airIRSCUnitRunHoursAirFilter(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursEvaporatorFan1(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursEvaporatorFan2(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursEvaporatorFan3(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursCondenserFan1(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursCondenserFan2(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursCondenserFan3(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursFanPowerSupplyLeft(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursFanPowerSupplyRight(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursCondensatePump(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitRunHoursCompressor(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitServiceIntervalsAirFilter(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitServiceIntervalsAirFilterAlarm(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class airIRSCUnitThresholdsRackInletHighTempUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitThresholdsRackInletHighTempMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitThresholdsSupplyAirHighTempUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitThresholdsSupplyAirHighTempMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 5, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitThresholdsReturnAirHighTempUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 5, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitThresholdsReturnAirHighTempMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 5, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitSetptsCoolSetpointUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitSetptsCoolSetpointMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitSetptsCoolDeadbandUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitSetptsCoolDeadbandMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitSetptsFanSpeedPreference(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'low'), Enum(2, 'med-low'), Enum(3, 'med'), Enum(4, 'med-high'), Enum(5, 'high')]


class airIRSCUnitSetptsSupplyAirSetpointUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 6, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitSetptsSupplyAirSetpointMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 6, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitConfigConfigurationType(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'racs'), Enum(2, 'spot'), Enum(3, 'in-row')]


class airIRSCUnitConfigCapacityControlType(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'discrete'), Enum(2, 'proportional')]


class airIRSCUnitConfigStartupDelay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitConfigIdleOnLeakDetect(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class airIRSCUnitConfigInputNormalState(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class airIRSCUnitConfigOutputNormalState(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class airIRSCUnitConfigOutputSource(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'anyAlarm'), Enum(2, 'criticalAlarm')]


class airIRSCUnitConfigAltitudeUS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitConfigAltitudeMetric(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRSCUnitConfigOpControl(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 4, 1, 7, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'standby'), Enum(2, 'on')]


class rARUStatusAruDeviceCount(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusSysTempUnits(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class rARUSensorsStatusTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsConfigTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUIdentProductName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentFirmwareAppRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentFirmwareAppOSRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentFirmwareControllerRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUDeviceNominalMainInputVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUDeviceServiceType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'delta'), Enum(2, 'wye')]


class xPDUDeviceNominalOutputVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUDeviceMainInputBreakerRating(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUDevicePanelBreakerRating(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUDeviceTransformerPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceLoadTieBreakerPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceLoadTestPortPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceFusesPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceFansPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceBypassInputPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceCrossTieOutputPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceEarthGroundMonitorPresent(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present')]


class xPDUDeviceInfraXureType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'typeB'), Enum(2, 'typeC')]


class xPDUMainInputOverVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUMainInputUnderVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUMainInputVoltageTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputOverVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputUnderVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputVoltageTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUUPSInputVoltageTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputNeutralCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputTotalPower(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputTotalApparentPower(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputTotalPowerFactor(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputFrequencyTolerance(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'freqToleranceOff'), Enum(2, 'freqTolerancePointTwo'), Enum(3, 'freqTolerancePointFive'), Enum(4, 'freqToleranceOne'), Enum(5, 'freqToleranceOnePointFive'), Enum(6, 'freqToleranceTwo'), Enum(7, 'freqToleranceThree'), Enum(8, 'freqToleranceFour'), Enum(9, 'freqToleranceFive'), Enum(10, 'freqToleranceNine')]


class xPDUSystemOutputMaxKWPower(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputOverVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputUnderVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputOverCurrentThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputOverCurrentNeutralThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputUnderCurrentThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUGroundCurrent(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUGroundCurrentThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemBreakerTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUNumOfBranchBreakers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUInputContactNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUInputContactTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUOutputRelaysNumRelays(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUOutputRelaysTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUEPOMode(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'armed'), Enum(2, 'disarmed'), Enum(3, 'unknown')]


class xPDUTransformTempStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'overtemp'), Enum(3, 'noTransformerPresent'), Enum(4, 'unknown')]


class xPDUCoolingFanStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 7, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'failed'), Enum(3, 'noCoolingFansPresent'), Enum(4, 'unknown')]


class battManIdentProductName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManOhmicValueCorrectionFactor(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManUnitCalibTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManStringCalibTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1BatteryCalibTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2BatteryCalibTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigApplication(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'silcon'), Enum(2, 'other')]


class battManConfigBatteryChemistry(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'leadAcid'), Enum(2, 'nickel-Cadmium')]


class battManConfigBatteryAHCapacity(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigNumberofStrings(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigBatteriesperString(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigCellsperBattery(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMinCellVoltage(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMaxCellVoltage(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMaxPilotTempF(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMaxPilotTempC(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMaxAmbientTempF(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMaxAmbientTempC(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMinAmbientTempF(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMinAmbientTempC(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMaxRippleCurrent(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMaxCurrentAcceptanceDeviation(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigMonitorWireLength(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'fiftyFeetOrLess'), Enum(2, 'moreThanFiftyFeet')]


class battManConfigDischargeVoltageAlarmLevel(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManConfigAutoAnnunciatorReset(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 6, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class battManAlarmManagementController(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManAlarmBatteries(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManAlarmCharger(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 7, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManAlarmEnvironment(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 7, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManSystemAmbientTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManSystemAmbientTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManSystemPilotTempC(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManSystemPilotTempF(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManSystemAmbientHighTempAlarm(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManSystemAmbientLowTempAlarm(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManSystemPilotBatteryHighTempAlarm(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManSystemPilotProbeDisconnected(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManSystemAmbientProbeDisconnected(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 8, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManStringTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1BatteryTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2BatteryTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManInputContactTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManRemoteAnnunciatorReset(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 12, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noOperation'), Enum(2, 'reset')]


class battManResetChargeCurrentDeviationBenchmark(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 12, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noOperation'), Enum(2, 'reset')]


class battManResetLowestDischargeVoltages(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 12, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noOperation'), Enum(2, 'reset')]


class battManString1OhmicValueLastDischargeInfo(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManString1OhmicValueTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1ResponseTestChangeTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2OhmicValueLastDischargeInfo(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManString2OhmicValueTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2ResponseTestChangeTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSIdentProductName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSIdentFirmwareAppRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSIdentFirmwareAppOSRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSIdentFirmwareControllerRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSDeviceServiceType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'threeWire'), Enum(2, 'fourWire')]


class xATSDeviceNominalVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSDeviceNominalFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSDeviceTransferSwitchRating(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSDeviceDCBackUpPresent(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class xATSSwitchStatusSelectedSource(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'source1'), Enum(3, 'source2'), Enum(4, 'fault'), Enum(5, 'unknown')]


class xATSSwitchStatusOperationalMode(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'automatic'), Enum(2, 'notInAutoAbnormal'), Enum(3, 'notInAuto'), Enum(4, 'unknown')]


class xATSSwitchStatusAutomaticOperationSwitch(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled'), Enum(3, 'unknown')]


class xATSSwitchStatusEngineStartSignal(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'run'), Enum(2, 'stop'), Enum(3, 'unknown')]


class xATSSwitchSettingsLowVoltageTransferPoint(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchSettingsHighVoltageTransferPoint(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchSettingsMaxFrequencyDeviation(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchSettingsMinPhaseBalance(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchSettingsNominalRotation(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'abc'), Enum(2, 'cba'), Enum(3, 'any'), Enum(4, 'unknown')]


class xATSSwitchSettingsAllowClosedTransfer(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no'), Enum(3, 'unknown')]


class xATSSwitchSettingsMaxSyncTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchSettingsNeutralTransferTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchSettingsClearLatchedAlarms(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class xATSSwitchSettingsSetToFactoryDefaults(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class xATSSwitchTimersTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchBlockMapTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchStatisticsTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSource1Name(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSSource1Position(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'tripped'), Enum(4, 'unknown')]


class xATSSource1Frequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSource1Quality(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sourceGood'), Enum(2, 'lowVoltage'), Enum(3, 'highVoltage'), Enum(4, 'phaseImbalance'), Enum(5, 'freqOutOfRange'), Enum(6, 'badRotation'), Enum(7, 'unknown')]


class xATSSource1Rotation(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'abc'), Enum(2, 'cba'), Enum(3, 'unknown')]


class xATSSource1TableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSource2Name(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSSource2Position(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'tripped'), Enum(4, 'unknown')]


class xATSSource2Frequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSource2Quality(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sourceGood'), Enum(2, 'lowVoltage'), Enum(3, 'highVoltage'), Enum(4, 'phaseImbalance'), Enum(5, 'freqOutOfRange'), Enum(6, 'badRotation'), Enum(7, 'unknown')]


class xATSSource2Rotation(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'abc'), Enum(2, 'cba'), Enum(3, 'unknown')]


class xATSSource2TableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputTotalPower(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputTotalApparentPower(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputTotalPowerFactor(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputFrequencyTolerance(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'freqToleranceOff'), Enum(2, 'freqTolerancePointTwo'), Enum(3, 'freqTolerancePointFive'), Enum(4, 'freqToleranceOne'), Enum(5, 'freqToleranceOnePointFive'), Enum(6, 'freqToleranceTwo'), Enum(7, 'freqToleranceThree'), Enum(8, 'freqToleranceFour'), Enum(9, 'freqToleranceFive'), Enum(10, 'freqToleranceNine')]


class xATSSystemOutputOverVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputUnderVoltThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputOverCurrentThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputUnderCurrentThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputAlarmDelayThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSTestingStatusSelectTestProcess(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'engineStartTest'), Enum(2, 'systemLoadTest'), Enum(3, 'generatorHoldTest'), Enum(4, 'cancelTest')]


class xATSTestingStatusTestStatus(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noTestInProcess'), Enum(2, 'testPending'), Enum(3, 'startingEngine'), Enum(4, 'engineWarmingUp'), Enum(5, 'awaitingTransferToS2'), Enum(6, 'testingWithLoad'), Enum(7, 'awaitingRetransferToS1'), Enum(8, 'testingWithoutLoad'), Enum(9, 'stoppingEngine'), Enum(10, 'holdingOnGenerator')]


class xATSTestingStatusProfileWarmupTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSTestingStatusProfileLoadedTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSTestingStatusProfileUnloadedTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSTestingResultsLastDateOfTest(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSTestingResultsLastResult(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noResultsAvailable'), Enum(2, 'startTestPassed'), Enum(3, 'loadTestPassed'), Enum(4, 'startSignalFailure'), Enum(5, 'failedGenNotInAuto'), Enum(6, 'failedGenEmerStop'), Enum(7, 'failedGenShutdown'), Enum(8, 'failedGenDidNotStart'), Enum(9, 'failedS2NeverGood'), Enum(10, 'genFailedDuringWarmup'), Enum(11, 'failureOnXferToS1'), Enum(12, 'genFailedLoaded'), Enum(13, 'failureOnRexferToS2'), Enum(14, 'failedOnCooldown'), Enum(15, 'genFailedToStop'), Enum(16, 'failedAtsInternalFault'), Enum(17, 'failedAtsNotInAuto'), Enum(18, 'canceledManualTest'), Enum(19, 'canceledScheduledTest')]


class xATSTestingResultsTestLastTestTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSTestingResultsLastCrankDuration(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSTestingResultsLastWarmupDuration(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSTestingResultsLastLoadedDuration(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSTestingResultsLastUnloadedDuration(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSTestingScheduleFrequency(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'never'), Enum(2, 'daily'), Enum(3, 'weekly'), Enum(4, 'monthly')]


class xATSTestingScheduleTestDay(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSTestingScheduleTestTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSTestingScheduleTestWithLoadInterval(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'applyLoadEveryTest'), Enum(2, 'neverApplyLoad'), Enum(3, 'applyLoadMonthly'), Enum(4, 'applyLoadMonthlyDetailed')]


class xATSTestingScheduleTestWithLoadSelectMonth(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSTestingScheduleNextTestDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSTestingSimulatePowerFailTest(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'cancelSimulation'), Enum(2, 'fiveSecondsSimulation'), Enum(3, 'tenSecondsSimulation'), Enum(4, 'thirtySecondsSimulation'), Enum(5, 'oneMinuteSimulation'), Enum(6, 'threeMinutesSimulation'), Enum(7, 'fiveMinutesSimulation'), Enum(8, 'tenMinutesSimulation')]


class xATSTestingSimulatePowerFailTimeRemaining(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 5, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSInputContactNumContacts(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSInputContactTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSOutputRelayNumRelays(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSOutputRelayTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSGeneratorIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSGeneratorIdentDateofManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSGeneratorIdentVoltageConfiguration(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorIdentMaxPowerRating(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorIdentAlternatorFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorStatusGeneratorName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSGeneratorStatusOperational(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'nocomm'), Enum(2, 'off'), Enum(3, 'ready'), Enum(4, 'starting'), Enum(5, 'idle'), Enum(6, 'running'), Enum(7, 'normalStop'), Enum(8, 'emergencyStop'), Enum(9, 'notInAuto'), Enum(10, 'shutdown'), Enum(11, 'unknown')]


class xATSGeneratorStatusModeSwitchPosition(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'manual'), Enum(3, 'automatic'), Enum(4, 'unknown')]


class xATSGeneratorStatusRemoteStart(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stop'), Enum(2, 'run'), Enum(3, 'unknown')]


class xATSGeneratorAdvStatusBatteryVoltage(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorAdvStatusOilPressure(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorAdvStatusCoolantTemperature(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorAdvStatusEngineRPM(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorAdvStatusOilLevel(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'low'), Enum(3, 'unknown')]


class xATSGeneratorAdvStatusCoolantLevel(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'low'), Enum(3, 'unknown')]


class xATSGeneratorOutputFrequency(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputTotalPower(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputTotalApparentPower(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputTotalPowerFactor(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorSettingsVoltageAdjust(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorSettingsFrequencyAdjust(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorSettingsStartDelay(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorSettingsStopDelay(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorSettingsCrankCycleEnable(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled'), Enum(3, 'unknown')]


class xATSGeneratorSettingsCrankTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorSettingsCrankRestTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorSettingsNumberCrank(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorSettingsMetricUnit(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 5, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class xATSGeneratorServiceTotalRunHoursLifetime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorServiceEngineStartsLifetime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorServiceTotalkWhLifetime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorServiceTotalRunHoursSinceMaintenance(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorServiceEngineStartsSinceMaintenance(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorServiceTotalkWhMaintenance(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorServiceResetRecord(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class xATSGeneratorServiceRecordResetDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSGeneratorServiceNextServiceDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSGeneratorServiceRunHoursUntilServiceDate(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorServiceRunHoursThreshold(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'runThreshold100Hours'), Enum(3, 'runThreshold150Hours'), Enum(4, 'runThreshold200Hours'), Enum(5, 'runThreshold250Hours'), Enum(6, 'runThreshold300Hours'), Enum(7, 'runThreshold400Hours'), Enum(8, 'runThreshold500Hours')]


class xATSGeneratorServiceCalendarIntervalThreshold(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 6, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'interval1month'), Enum(3, 'interval2month'), Enum(4, 'interval3month'), Enum(5, 'interval6month'), Enum(6, 'intervalyearly')]


class xATSGeneratorFuelSystemType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'diesel'), Enum(2, 'propane'), Enum(3, 'naturalGas'), Enum(4, 'unknown')]


class xATSGeneratorFuelSystemTankSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorFuelSystemFuelLevel(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorFuelSystemRuntimePower(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorFuelSystemEstimatedRunTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorFuelSystemLowRunTimeThreshold(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'oneHour'), Enum(3, 'twoHours'), Enum(4, 'threeHours'), Enum(5, 'fourHours'), Enum(6, 'fiveHours'), Enum(7, 'sixHours'), Enum(8, 'twelveHours'), Enum(9, 'oneDay'), Enum(10, 'twoDays'), Enum(11, 'threeDays'), Enum(12, 'fourDays'), Enum(13, 'fiveDays'), Enum(14, 'sixDays'), Enum(15, 'sevenDays')]


class xATSGeneratorFuelSystemVeryLowRunTimeThreshold(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'oneHour'), Enum(3, 'twoHours'), Enum(4, 'threeHours'), Enum(5, 'fourHours'), Enum(6, 'fiveHours'), Enum(7, 'sixHours'), Enum(8, 'twelveHours'), Enum(9, 'oneDay'), Enum(10, 'twoDays'), Enum(11, 'threeDays'), Enum(12, 'fourDays'), Enum(13, 'fiveDays'), Enum(14, 'sixDays'), Enum(15, 'sevenDays')]


class xATSGeneratorFuelSystemLowFuelLevelThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorFuelSystemVeryLowFuelLevelThreshold(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 7, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSpname(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class apCPSversion(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class apCPSPwNum(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSPw1(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSPw2(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSNPcmcia(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSFlashSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSRAMSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSCPUfreq(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSDevId(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsHostName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsConsoleBanner(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsMotd(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsEthDhcpc(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsEthIPaddr(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsEthIPmask(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsEthMTU(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsEthIPaddr2(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsEthIPmask2(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsResolverOrder(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsMultipleIP(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsDNSpriserv(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 5, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsDNSsecserv(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 5, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsDNSdomain(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 5, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSerialInclude(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSerialNFS(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSerialLockDir(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSerialRlogin(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSerialPppd(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSerialTelnet(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSerialSsh(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSerialLocalLogins(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSerialFacility(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSerialDBFacility(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSSave(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apCPSSerialHUP(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXIdentAlarmStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXIdentProductNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class accessPXIdentHardwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class accessPXIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class accessPXIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class accessPXConfigCardReaderEnableDisableAction(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enable')]


class accessPXConfigAutoRelockTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXConfigCardFormat(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'hidStd26'), Enum(2, 'hid37Bit'), Enum(3, 'hid37BitWithFacility'), Enum(4, 'hidCorp1000')]


class accessPXConfigFrontDoorLockControl(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unlock'), Enum(2, 'lock'), Enum(3, 'notInstalledReadOnly'), Enum(4, 'disconnectedReadOnly')]


class accessPXConfigFrontDoorMaxOpenTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXStatusFrontDoorLock(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unlocked'), Enum(2, 'locked'), Enum(3, 'notInstalled'), Enum(4, 'disconnected')]


class accessPXStatusFrontDoor(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'notInstalled'), Enum(4, 'disconnected')]


class accessPXStatusFrontDoorHandle(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'notInstalled'), Enum(4, 'disconnected')]


class accessPXStatusFrontDoorMaxOpenTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXStatusFrontDoorAlarmStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXConfigRearDoorLockControl(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unlock'), Enum(2, 'lock'), Enum(3, 'notInstalledReadOnly'), Enum(4, 'disconnectedReadOnly')]


class accessPXConfigRearDoorMaxOpenTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXStatusRearDoorLock(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unlocked'), Enum(2, 'locked'), Enum(3, 'notInstalled'), Enum(4, 'disconnected')]


class accessPXStatusRearDoor(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'notInstalled'), Enum(4, 'disconnected')]


class accessPXStatusRearDoorHandle(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'notInstalled'), Enum(4, 'disconnected')]


class accessPXStatusRearDoorMaxOpenTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXStatusRearDoorAlarmStatus(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class accessPXConfigBeaconName(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class accessPXConfigBeaconLocation(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class accessPXConfigBeaconAction(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 7, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'turnOff'), Enum(2, 'turnOn'), Enum(3, 'notInstalledReadOnly'), Enum(4, 'disconnectedReadOnly')]


class accessPXStatusBeaconName(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 8, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class accessPXStatusBeaconLocation(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 8, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class accessPXStatusBeaconCurrentState(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 20, 1, 8, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'on'), Enum(3, 'notInstalled'), Enum(4, 'disconnected')]


class apcLocalDisplayIdentDisplayType(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noDisplayFound'), Enum(2, 'powerviewRM'), Enum(3, 'powerviewWW')]


class apcLocalDisplayIdentModelNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class apcLocalDisplayIdentFirmwareRev(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class apcLocalDisplayIdentOptions(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class apcLocalDisplayIdentDateOfManufacture(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class apcLocalDisplayIdentSerialNumber(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class apcLocalDisplayConfigAlarmBeeper(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'beeperDisabled'), Enum(2, 'beeperEnabled')]


class apcLocalDisplayConfigBeeperVolume(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'beeperDisabled'), Enum(2, 'beeperLow'), Enum(3, 'beeperMedium'), Enum(4, 'beeperHigh')]


class apcLocalDisplayConfigCheckLogIndicator(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'checklogNotPresent'), Enum(2, 'checklogDisabled'), Enum(3, 'checklogInformational'), Enum(4, 'checklogWarning'), Enum(5, 'checklogCritical')]


class apcLocalDisplayConfigKeyClick(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'keyclickDisabled'), Enum(2, 'keyclickEnabled')]


class apcLocalDisplayConfigContrast(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 21, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'contrast1'), Enum(2, 'contrast2'), Enum(3, 'contrast3'), Enum(4, 'contrast4'), Enum(5, 'contrast5'), Enum(6, 'contrast6'), Enum(7, 'contrast7'), Enum(8, 'contrast8')]


class powerNetSoftwareSystemDescription(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class powerNetSoftwareOid(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class powerNetSoftwareSystemUpTime(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class powerNetSoftwareTableSize(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mconfigNumTrapReceivers(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mconfigBOOTPEnabled(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class mconfigTFTPServerIP(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class newCodeAuthentViaTFTP(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'validNewAgentCodeImage'), Enum(3, 'sameAgentCodeImage'), Enum(4, 'invalidAgentCodeImage')]


class mconfigClockDate(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mconfigClockTime(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mcontrolRestartAgent(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'restartCurrentAgent'), Enum(2, 'continueCurrentAgent'), Enum(3, 'loadAndExecuteNewAgent'), Enum(4, 'restartWithoutAgent'), Enum(5, 'resetNetworkAndRestart'), Enum(6, 'resetNetworkLeaveModeAndRestart')]


class mtrapargsInteger(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mtrapargsIpAddress(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mtrapargsString(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mtrapargsGauge(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mtrapargsTimeTicks(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mtrapargsInteger02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mtrapargsInteger03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mtrapargsIpAddress02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mtrapargsIpAddress03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class mtrapargsString02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mtrapargsString03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mtrapargsGauge02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 12])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mtrapargsGauge03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 13])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mtrapargsTimeTicks02(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mtrapargsTimeTicks03(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 15])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mtrapargsString04(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 16])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mtrapargsString05(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 17])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mtrapargsInteger04(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mtrapargsInteger05(ScalarObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 3, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mfiletransferStatusLastTransferResult(ScalarObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lastFileTransferResultSuccessful'), Enum(2, 'lastFileTransferResultNotAvailable'), Enum(3, 'lastFileTransferResultFailureUnknown'), Enum(4, 'lastFileTransferResultFailureServerInaccessible'), Enum(5, 'lastFileTransferResultFailureServerAccessDenied'), Enum(6, 'lastFileTransferResultFailureFileNotFound'), Enum(7, 'lastFileTransferResultFailureFileTypeUnknown'), Enum(8, 'lastFileTransferResultFailureFileCorrupted')]


class mfiletransferConfigSettingsFilename(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferConfigTFTPServerAddress(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferConfigFTPServerAddress(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferConfigFTPServerUser(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferConfigFTPServerPassword(ScalarObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class mfiletransferControlInitiateFileTransfer(ScalarObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'doNotInitiateFileTransfer'), Enum(2, 'initiateFileTransferDownloadViaTFTP'), Enum(3, 'initiateFileTransferDownloadViaFTP')]


# columns
class deviceIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class deviceName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class vaRating(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class acceptThisDevice(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class dipSwitchIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dipSwitchStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'on'), Enum(2, 'off')]


class apcUpsConfigFieldIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 16, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class apcUpsConfigFieldOID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 16, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class apcUpsConfigFieldValueRange(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 16, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsPhaseInputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseNumInputPhases(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputVoltageOrientation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'singlePhase'), Enum(3, 'splitPhase'), Enum(4, 'threePhasePhaseToNeutral'), Enum(5, 'threePhasePhaseToPhase')]


class upsPhaseInputFrequency(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'main'), Enum(3, 'bypass')]


class upsPhaseInputName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsPhaseInputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputPhaseIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMaxVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMinVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMaxCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMinCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMaxPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseInputMinPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseNumOutputPhases(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputVoltageOrientation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'singlePhase'), Enum(3, 'splitPhase'), Enum(4, 'threePhasePhaseToNeutral'), Enum(5, 'threePhasePhaseToPhase')]


class upsPhaseOutputFrequency(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPhaseIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMaxPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsPhaseOutputMinPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGStatusTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsSCGMemberIP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class upsSCGACInputStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'acInGood'), Enum(2, 'acInBad')]


class upsSCGACOutputStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'acOutOn'), Enum(2, 'acOutOff')]


class upsOutletGroupStatusIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupStatusName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsOutletGroupStatusGroupState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'upsOutletGroupStatusOn'), Enum(2, 'upsOutletGroupStatusOff'), Enum(3, 'upsOutletGroupStatusUnknown')]


class upsOutletGroupStatusCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'upsOutletGroupCommandPending'), Enum(2, 'upsOutletGroupNoCommandPending')]


class upsOutletGroupConfigIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupConfigName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsOutletGroupConfigPowerOnDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupConfigPowerOffDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupConfigRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupControlIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsOutletGroupControlName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsOutletGroupControlCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'upsOutletGroupImmediateOn'), Enum(2, 'upsOutletGroupImmediateOff'), Enum(3, 'upsOutletGroupImmediateReboot'), Enum(4, 'upsOutletGroupDelayedOn'), Enum(5, 'upsOutletGroupDelayedOff'), Enum(6, 'upsOutletGroupDelayedReboot'), Enum(7, 'upsOutletGroupCancelPendingCommand'), Enum(8, 'upsOutletGroupControlUnknown')]


class upsDiagIMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagIMType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'imUnknown'), Enum(2, 'imMIM'), Enum(3, 'imRIM')]


class upsDiagIMStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagIMFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagIMSlaveFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagIMHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagIMSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagIMManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagPMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagPMStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagPMFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagPMHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagPMSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagPMManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagBatteryFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagBatteryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagBatteryStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'ok'), Enum(4, 'failed'), Enum(5, 'highTemperature'), Enum(6, 'replaceImmediately'), Enum(7, 'lowCapacity')]


class upsDiagBatterySerialNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagBatteryFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagBatteryManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagBatteryType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysFrameType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'frameTypeMain'), Enum(4, 'frameTypeXR'), Enum(5, 'frameTypeLXR')]


class upsDiagSubSysFrameFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysFrameHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysFrameSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysFrameManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysIntBypSwitchFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysIntBypSwitchIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysIntBypSwitchStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysIntBypSwitchFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysIntBypSwitchHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysIntBypSwitchSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysIntBypSwitchManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysBattMonitorFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysBattMonitorIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysBattMonitorStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysBattMonitorFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysBattMonitorHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysBattMonitorSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysBattMonitorManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysExternalSwitchGearFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalSwitchGearIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalSwitchGearStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysExternalSwitchGearFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysExternalSwitchGearHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysExternalSwitchGearSerialNum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysExternalSwitchGearManufactureDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class upsDiagSubSysDisplayInterfaceCardFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDisplayInterfaceCardIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDisplayInterfaceCardStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysDCCircuitBreakerFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDCCircuitBreakerIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysDCCircuitBreakerStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'opened'), Enum(4, 'closed')]


class upsDiagSubSysSystemPowerSupplyFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 14, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysSystemPowerSupplyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 14, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysSystemPowerSupplyStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 14, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysXRCommunicationCardFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 16, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysXRCommunicationCardIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 16, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysXRCommunicationCardStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 16, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysExternalPowerFrameBoardFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 18, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalPowerFrameBoardIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 18, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysExternalPowerFrameBoardStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 18, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class upsDiagSubSysChargerFrameIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 20, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysChargerIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 20, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class upsDiagSubSysChargerStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 20, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'notInstalled'), Enum(3, 'offOk'), Enum(4, 'onOk'), Enum(5, 'offFail'), Enum(6, 'onFail'), Enum(7, 'lostComm')]


class contactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class normalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'open'), Enum(3, 'closed')]


class description(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class monitoringStatus(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'enabled'), Enum(3, 'disabled')]


class currentStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'noFault'), Enum(3, 'fault')]


class sPDUOutletControlIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commandPending'), Enum(2, 'noCommandPending'), Enum(3, 'commandPendingUnknown')]


class sPDUOutletCtl(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletOn'), Enum(2, 'outletOff'), Enum(3, 'outletReboot'), Enum(4, 'outletUnknown'), Enum(5, 'outletOnWithDelay'), Enum(6, 'outletOffWithDelay'), Enum(7, 'outletRebootWithDelay')]


class sPDUOutletCtlName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletPowerOnTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletPowerOffTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentNameVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentHardwareRevVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentFirmwareRevVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentDateOfManufactureVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentModelNumberVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentSerialNumberVM(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterControlVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlVMCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCommandAllVM'), Enum(2, 'immediateAllOnVM'), Enum(3, 'immediateAllOffVM'), Enum(4, 'immediateAllRebootVM'), Enum(5, 'delayedAllOnVM'), Enum(6, 'delayedAllOffVM'), Enum(7, 'sequencedAllRebootVM'), Enum(8, 'delayedAllRebootVM'), Enum(9, 'delayedSequenceAllRebootVM'), Enum(10, 'cancelAllPendingCommandsVM'), Enum(11, 'audioAlarmMute')]


class sPDUMasterConfigVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterConfigVMColdstartDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMAudioAlarmActivated(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'audioAlarmActiveNever'), Enum(2, 'audioAlarmActiveOnOverload'), Enum(3, 'audioAlarmActiveOnOverloadImminent')]


class sPDUMasterConfigVMHighLoadWarningThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMLowLoadWarningThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigVMOverloadRestriction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alwaysAllowTurnON'), Enum(2, 'restrictOnWarning'), Enum(3, 'restrictOnOverload')]


class sPDUMasterStatusVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterStatusVMCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commandPendingMasterTrueVM'), Enum(2, 'commandPendingMasterFalseVM')]


class sPDUMasterStatusVMOverloadCondition(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'overloadConditionTrueVM'), Enum(2, 'overloadConditionFalseVM')]


class sPDUMasterStatusVMLowLoadCondition(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'lowLoadConditionTrueVM'), Enum(2, 'lowLoadConditionFalseVM')]


class sPDUMasterStatusVMCurrentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMMaxLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMOutletCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusVMRebootDuration(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlVMOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlVMOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlVMOutletCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateOnVM'), Enum(2, 'immediateOffVM'), Enum(3, 'immediateRebootVM'), Enum(4, 'delayedOnVM'), Enum(5, 'delayedOffVM'), Enum(6, 'delayedRebootVM'), Enum(7, 'cancelPendingCommandVM')]


class sPDUOutletConfigVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigVMOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigVMOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigVMPowerOnTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigVMPowerOffTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigVMRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusVMIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusVMName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletStatusVMOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusVMOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletStatusVMOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusVMOn'), Enum(2, 'outletStatusVMOff')]


class sPDUOutletStatusVMCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusVMCommandPending'), Enum(2, 'outletStatusVMNoCommandPending')]


class sPDUIdentMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUIdentNameMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentHardwareRevMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentFirmwareRevMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentDateOfManufactureMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentModelNumberMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUIdentSerialNumberMSP(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterControlMSPName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterControlMSPCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCommandAllMSP'), Enum(2, 'immediateAllOnMSP'), Enum(3, 'sequencedAllOnMSP'), Enum(4, 'immediateAllOffMSP'), Enum(5, 'gracefulAllRebootMSP'), Enum(6, 'immediateAllRebootMSP'), Enum(7, 'gracefulAllShutdownMSP'), Enum(8, 'overrideAllBatCapThreshMSP'), Enum(9, 'cancelAllPendingCommandsMSP'), Enum(10, 'restoreFactoryDefaultsMSP')]


class sPDUMasterConfigMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigMSPName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterConfigMSPPowerOnTimeDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterConfigMSPManualButton(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'manualButtonDisabled'), Enum(2, 'manualButtonEnabled')]


class sPDUMasterStatusMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUMasterStatusMSPName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUMasterStatusMSPOutletCount(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlMSPName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlMSPOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletControlMSPOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletControlMSPOutletCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateOnMSP'), Enum(2, 'delayedOnMSP'), Enum(3, 'immediateOffMSP'), Enum(4, 'gracefulRebootMSP'), Enum(5, 'immediateRebootMSP'), Enum(6, 'gracefulshutdownMSP'), Enum(7, 'overrideBatCapThreshMSP'), Enum(8, 'cancelPendingCommandMSP')]


class sPDUOutletConfigMSPallIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPallName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPallOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPallOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPallOutletCtrlMode(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeGracefulShutdown'), Enum(2, 'modeAnnunciator')]


class sPDUOutletConfigMSPgsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPgsOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPgsOutletCtrlMode(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeGracefulShutdown'), Enum(2, 'modeAnnunciator')]


class sPDUOutletConfigMSPgsDeviceConfirm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'deviceConfirmNo'), Enum(2, 'deviceConfirmYes')]


class sPDUOutletConfigMSPgsLowBattWarning(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsLowBattMult(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsRestartDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsPowerOnDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsPowerOffDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsBattCapThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPgsRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPannunIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPannunName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPannunOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPannunOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPannunOutletCtrlMode(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeGracefulShutdown'), Enum(2, 'modeAnnunciator')]


class sPDUOutletConfigMSPannunInitialState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'initialStateOff'), Enum(2, 'initialStateOn')]


class sPDUOutletConfigMSPannunAlarmActionDly(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPmupsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPmupsName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPmupsOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletConfigMSPmupsOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletConfigMSPmupsZone1(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsZone2(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsZone3(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsZone4(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP1LowHum(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP1HiHum(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP1LowTemp(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP1HiTemp(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP2LowHum(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP2HiHum(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP2LowTemp(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletConfigMSPmupsP2HiTemp(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disableAlarm'), Enum(2, 'enableAlarm')]


class sPDUOutletStatusMSPIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusMSPName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletStatusMSPOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class sPDUOutletStatusMSPOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class sPDUOutletStatusMSPOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusMSPOn'), Enum(2, 'outletStatusMSPOff')]


class sPDUOutletStatusMSPCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusMSPCommandPending'), Enum(2, 'outletStatusMSPNoCommandPending')]


class sPDUOutletStatusMSPOutletCtrlMode(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'modeGracefulShutdown'), Enum(2, 'modeAnnunciator')]


class dm3IdentSysDescriptionIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3IdentSysDescriptionText(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigSysDescriptionIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigSysDescriptionText(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigLVDIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigLVDName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigLVDEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabledYes'), Enum(2, 'enabledNo')]


class dm3ConfigLVDTripThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigLVDResetThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigLVDOpenAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigLVDHWAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigOutRlyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigOutRlyName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigOutRlyDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigOutRlyAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigInRlyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigInRlyName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigInRlyDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigInRlyAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigBreakersIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigBreakersName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigBreakersAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3ConfigFusesIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3ConfigFusesName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3ConfigFusesAlarm(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmIgnore'), Enum(2, 'alarmRelay1'), Enum(3, 'alarmRelay2'), Enum(4, 'alarmRelay3'), Enum(5, 'alarmRelay4'), Enum(6, 'alarmRelay5'), Enum(7, 'alarmRelay6'), Enum(8, 'alarmMinor'), Enum(9, 'alarmMajor')]


class dm3StatusAlarmsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusAlarmsText(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusLVDIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusLVDName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusLVDState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpened')]


class dm3StatusLVDHwFault(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusFault'), Enum(2, 'statusNofault')]


class dm3StatusRectIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectDesc(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusRectCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectCurrentLimit(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectStandby(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectFanFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectDevType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectPhyAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectCfg(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectPcbRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectFwVer(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusRectPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectDiagPass(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusRectState(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvDesc(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusConvCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvCurrentLimit(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvStandby(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvFanFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvDevType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvPhyAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvCfg(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvPcbRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvFwVer(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusConvPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvDiagPass(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dm3StatusConvState(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOutRlyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusOutRlyName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusOutRlyStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusOn'), Enum(2, 'statusOff')]


class dm3StatusInRlyIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusInRlyName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusInRlyStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusOn'), Enum(2, 'statusOff')]


class dm3StatusBreakersIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusBreakersName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusBreakersStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpen')]


class dm3StatusFusesIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dm3StatusFusesName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dm3StatusFusesStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpen')]


class atsCalibrationInputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationInputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsLineVoltageCalibrationFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationPowerSupplyVoltageTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationPowerSupplyVoltage(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powerSupply24V'), Enum(2, 'powerSupply12V'), Enum(3, 'powerSupply')]


class atsPowerSupplyVoltageCalibrationFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationOutputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsCalibrationOutputPhasesTableIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'neutral')]


class atsOutputCurrentCalibrationFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsNumInputPhases(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputVoltageOrientation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'singlePhase'), Enum(3, 'splitPhase'), Enum(4, 'threePhasePhaseToNeutral'), Enum(5, 'threePhasePhaseToPhase')]


class atsInputFrequency(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputType(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'main'), Enum(3, 'bypass')]


class atsInputName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class atsInputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputPhaseIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMaxVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMinVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMaxCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMinCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMaxPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsInputMinPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsNumOutputPhases(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputVoltageOrientation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'singlePhase'), Enum(3, 'splitPhase'), Enum(4, 'threePhasePhaseToNeutral'), Enum(5, 'threePhasePhaseToPhase')]


class atsOutputFrequency(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPhaseTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'neutral')]


class atsOutputVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinPercentLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMaxPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class atsOutputMinPercentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDTrip(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDReset(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2ConfigLVDState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpened')]


class dcmim2StatusRectIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusRectDevType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusRectID(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusRectPhyAddr(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusRectFail(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusTrue'), Enum(2, 'statusFalse')]


class dcmim2StatusRectCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusLVDIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusLVDState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'statusClosed'), Enum(2, 'statusOpened')]


class dcmim2StatusAlarmsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dcmim2StatusAlarmsText(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigProbeNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigProbeHighTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeLowTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeTempUnits(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class emConfigProbeHighHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeLowHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeHighTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeLowTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeHighHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeLowHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeMaxTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeMinTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeMaxHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeMinHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeMaxTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeMinTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeMaxHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeMinHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigProbeTempHysteresis(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeHumidHysteresis(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigProbeLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emConfigContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emConfigContactEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class emConfigContactSeverity(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'critical'), Enum(2, 'warning'), Enum(3, 'informational')]


class emConfigContactNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class emConfigContactLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emStatusProbeNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusProbeName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emStatusProbeStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disconnected'), Enum(2, 'connected')]


class emStatusProbeCurrentTemp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusProbeTempUnits(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class emStatusProbeCurrentHumid(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusProbeHighTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'highTempViolation'), Enum(3, 'disabled')]


class emStatusProbeLowTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'lowTempViolation'), Enum(3, 'disabled')]


class emStatusProbeHighHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'highHumidViolation'), Enum(3, 'disabled')]


class emStatusProbeLowHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'lowHumidViolation'), Enum(3, 'disabled')]


class emStatusProbeMaxTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'maxTempViolation'), Enum(3, 'disabled')]


class emStatusProbeMinTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'minTempViolation'), Enum(3, 'disabled')]


class emStatusProbeMaxHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'maxHumidViolation'), Enum(3, 'disabled')]


class emStatusProbeMinHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'minHumidViolation'), Enum(3, 'disabled')]


class emStatusContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emStatusContactName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emStatusContactStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noFault'), Enum(2, 'fault'), Enum(3, 'disabled')]


class iemConfigProbeNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemConfigProbeHighTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeLowTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeTempUnits(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class iemConfigProbeHighHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeLowHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeHighTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeLowTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeHighHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeLowHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeMaxTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeMinTempThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeMaxHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeMinHumidThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeMaxTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeMinTempEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeMaxHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeMinHumidEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigProbeTempHysteresis(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeHumidHysteresis(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigProbeLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemConfigContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemConfigContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemConfigContactEnable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class iemConfigContactSeverity(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'critical'), Enum(2, 'warning'), Enum(3, 'informational')]


class iemConfigContactNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class iemConfigContactLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemStatusProbeNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusProbeName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemStatusProbeStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disconnected'), Enum(2, 'connected')]


class iemStatusProbeCurrentTemp(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusProbeTempUnits(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'celsius'), Enum(2, 'fahrenheit')]


class iemStatusProbeCurrentHumid(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusProbeHighTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'highTempViolation'), Enum(3, 'disabled')]


class iemStatusProbeLowTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'lowTempViolation'), Enum(3, 'disabled')]


class iemStatusProbeHighHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'highHumidViolation'), Enum(3, 'disabled')]


class iemStatusProbeLowHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'lowHumidViolation'), Enum(3, 'disabled')]


class iemStatusProbeMaxTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'maxTempViolation'), Enum(3, 'disabled')]


class iemStatusProbeMinTempViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'minTempViolation'), Enum(3, 'disabled')]


class iemStatusProbeMaxHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'maxHumidViolation'), Enum(3, 'disabled')]


class iemStatusProbeMinHumidViolation(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noViolation'), Enum(2, 'minHumidViolation'), Enum(3, 'disabled')]


class iemStatusContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusContactName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemStatusContactStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noFault'), Enum(2, 'fault'), Enum(3, 'disabled')]


class iemStatusRelayNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class iemStatusRelayName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class iemStatusRelayStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'faultState'), Enum(2, 'normalState')]


class emsOutputRelayControlOutputRelayIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutputRelayControlOutputRelayName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutputRelayControlOutputRelayCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateCloseEMS'), Enum(2, 'immediateOpenEMS')]


class emsOutletControlOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutletControlOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutletControlOutletCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateOnEMS'), Enum(2, 'immediateOffEMS')]


class emsSensorControlSensorIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsSensorControlSensorSystemName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorControlSensorUserName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorControlSensorCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noCommandEMS'), Enum(2, 'resetCommandEMS')]


class emsAlarmDeviceControlDeviceIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsAlarmDeviceControlDeviceName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsAlarmDeviceControlDeviceCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmDeviceOnEMS'), Enum(2, 'alarmDeviceOffEMS'), Enum(3, 'alarmDeviceNotInstalledEMS')]


class emsProbeConfigProbeIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsProbeConfigProbeHighTempThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeLowTempThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeHighHumidityThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeLowHumidityThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeMaxTempThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeMinTempThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeDeltaTemp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeMaxHumidityThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeMinHumidityThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeDeltaHumidity(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeSTIncTempVariance(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeSTIncTempTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeSTDecTempVariance(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeSTDecTempTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeLTIncTempVariance(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeLTIncTempTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeLTDecTempVariance(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeConfigProbeLTDecTempTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsInputContactConfigInputContactIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsInputContactConfigInputContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsInputContactConfigInputContactNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsOutputRelayConfigOutputRelayIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutputRelayConfigOutputRelayName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutputRelayConfigOutputRelayNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsOutletConfigOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutletConfigOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutletConfigOutletNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyOnEMS'), Enum(2, 'normallyOffEMS')]


class emsSensorConfigSensorIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsSensorConfigSensorSystemName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorConfigSensorUserName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorConfigSensorNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsSensorConfigSensorAlarmDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsProbeStatusProbeTemperature(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeHighTempThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeLowTempThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeHumidity(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeHighHumidityThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeLowHumidityThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeSerialNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsProbeStatusProbeCommStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commsNeverDiscovered'), Enum(2, 'commsEstablished'), Enum(3, 'commsLost')]


class emsProbeStatusProbeAlarmStatus(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeMaxTempThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeMinTempThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeMaxHumidityThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsProbeStatusProbeMinHumidityThresh(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsInputContactStatusInputContactIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsInputContactStatusInputContactName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsInputContactStatusInputContactState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'contactClosedEMS'), Enum(2, 'contactOpenEMS')]


class emsInputContactStatusInputContactNormalState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsOutputRelayStatusOutputRelayIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutputRelayStatusOutputRelayName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutputRelayStatusOutputRelayState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'relayClosedEMS'), Enum(2, 'relayOpenEMS')]


class emsOutputRelayStatusOutputRelayNormalState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsOutletStatusOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsOutletStatusOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsOutletStatusOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletOnEMS'), Enum(2, 'outletOffEMS')]


class emsOutletStatusOutletNormalState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyOnEMS'), Enum(2, 'normallyOffEMS')]


class emsAlarmDeviceStatusDeviceIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsAlarmDeviceStatusDeviceName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsAlarmDeviceStatusDeviceState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alarmDeviceOnEMS'), Enum(2, 'alarmDeviceOffEMS'), Enum(3, 'alarmDeviceNotInstalledEMS')]


class emsSensorStatusSensorIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class emsSensorStatusSensorSystemName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorStatusSensorName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class emsSensorStatusSensorState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sensorFaultedEMS'), Enum(2, 'sensorOKEMS'), Enum(3, 'sensorNotInstalledEMS')]


class emsSensorStatusSensorNormalState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normallyClosedEMS'), Enum(2, 'normallyOpenEMS')]


class emsSensorStatusSensorAlarmDelay(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memModulesStatusModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memModulesStatusModuleName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memModulesStatusModuleLocation(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memModulesStatusModelNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memModulesStatusSerialNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memModulesStatusFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memModulesStatusHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memModulesConfigModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memModulesConfigModuleName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memModulesConfigModuleLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memSensorsStatusModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsStatusSensorNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsStatusSensorName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memSensorsStatusSensorLocation(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memSensorsTemperature(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsHumidity(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsCommStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notInstalled'), Enum(2, 'commsOK'), Enum(3, 'commsLost')]


class memSensorsAlarmStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'memNormal'), Enum(2, 'memWarning'), Enum(3, 'memCritical')]


class memSensorsConfigModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsConfigSensorNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memSensorsLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memSensorsAlarmGeneration(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class memSensorsTempMaxThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempHighThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempLowThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempMinThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempThreshHysteresis(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempShortDecRateThreshValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempShortDecRateThreshTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempShortIncRateThreshValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempShortIncRateThreshTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempLongDecRateThreshValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempLongDecRateThreshTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempLongIncRateThreshValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsTempLongIncRateThreshTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsHumidityMaxThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsHumidityHighThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsHumidityLowThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsHumidityMinThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memSensorsHumidityThreshHysteresis(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memInputsStatusModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memInputsStatusInputNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memInputsStatusInputName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputsStatusInputLocation(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputsStatusCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inputClosedHighMEM'), Enum(2, 'inputOpenLowMEM'), Enum(3, 'inputDisabled'), Enum(4, 'inputStateNotApplicable')]


class memInputsStatusCurrentAnalogValue(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputsStatusAlarmStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'memNormal'), Enum(2, 'memWarning'), Enum(3, 'memCritical')]


class memInputsConfigModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memInputsConfigInputNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memInputName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputType(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noConnection'), Enum(2, 'dryContact'), Enum(3, 'digital'), Enum(4, 'analogmAmps'), Enum(5, 'analogVolts')]


class memInputAlarmGeneration(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class memInputNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inputClosedHighMEM'), Enum(2, 'inputOpenLowMEM'), Enum(3, 'inputDisabled'), Enum(4, 'inputStateNotApplicable')]


class memInputAbnormalSeverity(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inputSeverityinformational'), Enum(2, 'inputSeveritywarning'), Enum(3, 'inputSeveritysevere'), Enum(4, 'inputSeverityNotApplicable')]


class memInputNumberCalibrationPoints(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memInputAnalogCalibrationPoint1(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint2(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint3(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint4(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint5(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint1Value(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint2Value(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint3Value(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint4Value(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogCalibrationPoint5Value(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogMeasurementUnits(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogMaxThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogHighThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogLowThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogMinThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memInputAnalogThreshHysteresis(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutputStatusModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutputStatusOutputNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutputStatusOutputName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutputStatusOutputLocation(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutputStatusCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'memOutputClosed'), Enum(2, 'memOutputOpen')]


class memOutputConfigModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutputConfigOutputNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutputName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutputLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutputNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'memOutputClosed'), Enum(2, 'memOutputOpen')]


class memOutputAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'memActionClose'), Enum(2, 'memActionOpen')]


class memOutletStatusModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutletStatusOutletNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutletStatusOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutletStatusOutletLocation(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutletStatusCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'on')]


class memOutletConfigModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutletConfigOutletNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutletLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memOutletNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'on')]


class memOutletAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'turnOff'), Enum(2, 'turnOn')]


class memBeaconStatusModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memBeaconStatusBeaconNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memBeaconStatusBeaconName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memBeaconStatusBeaconLocation(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memBeaconStatusCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'off'), Enum(2, 'on')]


class memBeaconConfigModuleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memBeaconConfigBeaconNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class memBeaconConfigName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memBeaconConfigLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class memBeaconAction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'turnOff'), Enum(2, 'turnOn')]


class rPDULoadDevBankIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevBankNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevBankMaxLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevOutletNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadDevMaxOutletLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadPhaseConfigIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class rPDULoadPhaseConfigLowLoadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadPhaseConfigNearOverloadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadPhaseConfigOverloadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadPhaseConfigAlarm(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noLoadAlarm'), Enum(2, 'underCurrentAlarm'), Enum(3, 'nearOverCurrentAlarm'), Enum(4, 'overCurrentAlarm')]


class rPDULoadStatusIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadStatusLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class rPDULoadStatusLoadState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phaseLoadNormal'), Enum(2, 'phaseLoadLow'), Enum(3, 'phaseLoadNearOverload'), Enum(4, 'phaseLoadOverload')]


class rPDULoadStatusPhaseNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadStatusBankNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadBankConfigIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadBankConfigLowLoadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadBankConfigNearOverloadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadBankConfigOverloadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDULoadBankConfigAlarm(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'noLoadAlarm'), Enum(2, 'underCurrentAlarm'), Enum(3, 'nearOverCurrentAlarm'), Enum(4, 'overCurrentAlarm')]


class rPDUOutletPhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class rPDUOutletPhaseOverloadRestriction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alwaysAllowTurnON'), Enum(2, 'restrictOnNearOverload'), Enum(3, 'restrictOnOverload')]


class rPDUOutletControlIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletControlOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUOutletControlOutletPhase(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'phase1-2'), Enum(5, 'phase2-3'), Enum(6, 'phase3-1')]


class rPDUOutletControlOutletCommand(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'immediateOn'), Enum(2, 'immediateOff'), Enum(3, 'immediateReboot'), Enum(4, 'delayedOn'), Enum(5, 'delayedOff'), Enum(6, 'delayedReboot'), Enum(7, 'cancelPendingCommand')]


class rPDUOutletControlOutletBank(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigOutletName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUOutletConfigOutletPhase(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'phase1-2'), Enum(5, 'phase2-3'), Enum(6, 'phase3-1')]


class rPDUOutletConfigPowerOnTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigPowerOffTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigRebootDuration(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigOutletBank(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigMonitoredIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigMonitoredName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUOutletConfigMonitoredNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigMonitoredLowLoadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigMonitoredNearOverloadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletConfigMonitoredOverloadThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletStatusIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletStatusOutletName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rPDUOutletStatusOutletPhase(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3'), Enum(4, 'phase1-2'), Enum(5, 'phase2-3'), Enum(6, 'phase3-1')]


class rPDUOutletStatusOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusOn'), Enum(2, 'outletStatusOff')]


class rPDUOutletStatusCommandPending(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletStatusCommandPending'), Enum(2, 'outletStatusNoCommandPending')]


class rPDUOutletStatusOutletBank(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletStatusLoad(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class rPDUOutletBankIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 6, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUOutletBankOverloadRestriction(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'alwaysAllowTurnON'), Enum(2, 'restrictOnNearOverload'), Enum(3, 'restrictOnOverload')]


class rPDUStatusBankIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUStatusBankNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUStatusBankState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'bankLoadNormal'), Enum(2, 'bankLoadLow'), Enum(3, 'bankLoadNearOverload'), Enum(4, 'bankLoadOverload')]


class rPDUStatusPhaseIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUStatusPhaseNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUStatusPhaseState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phaseLoadNormal'), Enum(2, 'phaseLoadLow'), Enum(3, 'phaseLoadNearOverload'), Enum(4, 'phaseLoadOverload')]


class rPDUStatusOutletIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUStatusOutletNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rPDUStatusOutletState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'outletLoadNormal'), Enum(2, 'outletLoadLow'), Enum(3, 'outletLoadNearOverload'), Enum(4, 'outletLoadOverload')]


class airFMIdentModuleIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMIdentModuleModelNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentModuleDateOfMfg(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentModuleSerialNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentModuleFirmwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMIdentModuleHardwareRev(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class airFMStatusModuleIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleOutputCapacity(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleSupplyTempC(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleSupplyTempF(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleSupplyHum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleReturnTempC(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleReturnTempF(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airFMStatusModuleReturnHum(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRAlarmConditionsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIREventCode(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class airIRAlarmDescription(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUIdentAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUIdentName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUConfigAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUConfigAruName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUConfigAruRemoteSetpoint(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aruOff'), Enum(2, 'aru85F-29C'), Enum(3, 'aru90F-32C'), Enum(4, 'aru95F-35C'), Enum(5, 'aru100F-38C'), Enum(6, 'aru7kW-1200cfm'), Enum(7, 'aru5kW-800cfm'), Enum(8, 'aru3kW-500cfm'), Enum(9, 'aru2kW-300cfm'), Enum(10, 'aru400cfm'), Enum(11, 'aru600cfm'), Enum(12, 'aru700cfm'), Enum(13, 'aru900cfm'), Enum(14, 'aru1000cfm'), Enum(15, 'aru1400cfm'), Enum(16, 'aru1600cfm'), Enum(17, 'aru1800cfm'), Enum(18, 'aru2000cfm')]


class rARUConfigAruTempOvrdEnableDisable(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class rARUConfigAruTempOvrdSetpoint(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUConfigAruMasterControl(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aruOn'), Enum(2, 'aruOff')]


class rARUStatusAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUStatusAruRemoteSetpoint(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aruOff'), Enum(2, 'aru85F-29C'), Enum(3, 'aru90F-32C'), Enum(4, 'aru95F-35C'), Enum(5, 'aru100F-38C'), Enum(6, 'aru7kW-1200cfm'), Enum(7, 'aru5kW-800cfm'), Enum(8, 'aru3kW-500cfm'), Enum(9, 'aru2kW-300cfm'), Enum(10, 'aru400cfm'), Enum(11, 'aru600cfm'), Enum(12, 'aru700cfm'), Enum(13, 'aru900cfm'), Enum(14, 'aru1000cfm'), Enum(15, 'aru1400cfm'), Enum(16, 'aru1600cfm'), Enum(17, 'aru1800cfm'), Enum(18, 'aru2000cfm')]


class rARUStatusAruManualSetpoint(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aruOff'), Enum(2, 'aru85F-29C'), Enum(3, 'aru90F-32C'), Enum(4, 'aru95F-35C'), Enum(5, 'aru100F-38C'), Enum(6, 'aru7kW'), Enum(7, 'aru5kW'), Enum(8, 'aru3kW'), Enum(9, 'aru2kW'), Enum(10, 'aruRem')]


class rARUStatusAruTemp1(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruTemp2(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruTemp3(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruTempOvrdEnableDisable(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'enabled')]


class rARUStatusAruTempOvrdSetpoint(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUStatusAruAlarmState(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUStatusAruCommStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'commsNeverDiscovered'), Enum(2, 'commsEstablished'), Enum(3, 'commsLost')]


class rARUStatusAruTempOvrdStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'active')]


class rARUStatusAruMasterControl(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'aruOn'), Enum(2, 'aruOff')]


class rARUStatusAruTotalAirflow(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUFanStatusAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUFanStatusNominalFanSpeed(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUFanStatusSelectedFanLevel(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUFanStatusReplacementThreshold(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'disabled'), Enum(2, 'khr20'), Enum(3, 'khr25'), Enum(4, 'khr30'), Enum(5, 'khr35'), Enum(6, 'khr40'), Enum(7, 'khr50')]


class rARUFanStatusFanIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUFanStatusFanOperatingStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'off'), Enum(3, 'onOk'), Enum(4, 'onDegraded'), Enum(5, 'offFailed')]


class rARUFanStatusFanRpmSpeed(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUFanStatusFanFlowRate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUFanStatusFanInServiceDate(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUFanStatusFanRunhourCounter(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUFanStatusFanRunhourReset(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class rARUPowerStatusAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUPowerStatusPrimaryAcPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class rARUPowerStatusAuxiliaryAcPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class rARUPowerStatusRedundantAcConfig(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 5, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'singleCord'), Enum(2, 'dualCord')]


class rARUSensorsStatusAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsStatusSensorNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTemperature(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsConfigAruIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsConfigSensorNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUSensorsLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class rARUSensorsTempMaxThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempHighThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempLowThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempMinThresh(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempThreshHysteresis(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempShortDecRateThreshValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempShortDecRateThreshTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempShortIncRateThreshValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempShortIncRateThreshTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempLongDecRateThreshValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempLongDecRateThreshTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempLongIncRateThreshValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class rARUSensorsTempLongIncRateThreshTime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUMainInputVoltagePhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xPDUMainInputVoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUMainInputVoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputVoltagePhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xPDUBypassInputVoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBypassInputVoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUUPSInputVoltagePhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xPDUUPSInputVoltageLtoNPresent(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notPresent'), Enum(2, 'present'), Enum(3, 'unknown')]


class xPDUSystemOutputPhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xPDUSystemOutputVoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputVoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputPhaseCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputApparentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemOutputPowerFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemBreakerTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUSystemBreakerDescription(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUSystemBreakerPosition(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'unknown')]


class xPDUBranchBreakerTableIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerRating(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerRDPFeed(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'remoteDistribution'), Enum(2, 'noRemoteDistribution')]


class xPDUBranchBreakerTieIndicator(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'breakerUnTied'), Enum(2, 'breakerTied')]


class xPDUBranchBreakerCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerOverCurrentThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerUnderCurrentThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerMaxCurrentThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerMinCurrentThreshold(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUBranchBreakerName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUBranchBreakerLocation(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUInputContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUInputContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUInputContactNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xPDUInputContactCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'unknown')]


class xPDUOutputRelayNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xPDUOutputRelayName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xPDUOutputRelayNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xPDUOutputRelayCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed'), Enum(3, 'unknown')]


class battManUnitCalibIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManUnitSerialNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManBatteryVoltageZeroCalib(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManBatteryVoltageSpanCalib(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManStringCalibIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManDCCurrentZeroCalib(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManACCurrentZeroCalib(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManProbeRange(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'amps1000'), Enum(2, 'amps500'), Enum(3, 'amps100'), Enum(4, 'amps200'), Enum(5, 'amps2000')]


class battManString1BatteryCalibIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1BatteryInterTierOhmicValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2BatteryCalibIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2BatteryInterTierOhmicValue(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManStringIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManStringCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManStringRippleCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManStringChargerHighVoltageAlarm(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManStringChargerLowVoltageAlarm(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManStringCurrentProbeDisconnected(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManStringOnBattery(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString1BatteryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1BatteryVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1BatteryLowestVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1BatteryCellShorted(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString1BatteryOpenFuseOrConnection(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString1BatteryLowCapacity(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString1BatteryHighOhmicValue(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString1BatteryThermalRunaway(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString1BatteryDryout(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString2BatteryIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2BatteryVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2BatteryLowestVoltage(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2BatteryCellShorted(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString2BatteryOpenFuseOrConnection(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString2BatteryLowCapacity(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString2BatteryHighOhmicValue(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString2BatteryThermalRunaway(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManString2BatteryDryout(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManInputContactIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManInputContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class battManInputContactAlarmState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'alarm')]


class battManInputContactState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class battManInputContactNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class battManInputContactAlarmDelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1OhmicValueIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1OhmicValueData(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1ResponseTestChangeIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString1ResponseTestChangeData(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2OhmicValueIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2OhmicValueData(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2ResponseTestChangeIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class battManString2ResponseTestChangeData(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchTimersIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchTimersName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSSwitchTimersAbort(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class xATSSwitchTimersStatus(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inactive'), Enum(2, 'active')]


class xATSSwitchTimersRemainingTime(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchTimersDelaySetting(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchBlockMapIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchBlockMapName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSSwitchBlockMapStatus(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchBlockMapSetting(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchStatisticsIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 5, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSwitchStatisticsName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 5, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSSwitchStatisticsValue(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 5, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSSwitchStatisticsReset(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 5, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class xATSSource1Index(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xATSSource1VoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSource1VoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSource2Index(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xATSSource2VoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSource2VoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputPhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xATSSystemOutputVoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputVoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputPhaseCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputApparentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 12, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSSystemOutputPowerFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 12, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSInputContactNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 6, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSInputContactName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 6, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSInputContactNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 6, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xATSInputContactCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 6, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xATSOutputRelayNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 7, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSOutputRelayName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 7, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class xATSOutputRelayNormalState(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 7, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xATSOutputRelayCurrentState(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 7, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'open'), Enum(2, 'closed')]


class xATSGeneratorOutputPhaseIndex(ColumnObject):
	status = 3
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'phase1'), Enum(2, 'phase2'), Enum(3, 'phase3')]


class xATSGeneratorOutputVoltageLtoL(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputVoltageLtoN(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputPhaseCurrent(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputApparentPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class xATSGeneratorOutputPowerFactor(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsCardIdentIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsCardIdentProd(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardIdentMan(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardIdentFunc(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardIdentPCI(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardConfIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsCardConfPower(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardConfType(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardConfInter(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardConfFunc(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardConfCardv(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardConfPort1(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardConfPort2(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardStatusIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsCardStatusCard(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsCardStatusFunc(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsGroupIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsGroupName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsGroupUsers(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortTty(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortName(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortSpeed(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortDataSize(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortStopBits(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortParity(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortFlowCtrl(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortDTRdelay(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortDCDCtrl(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortLogUtmp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortLogWtmp(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortLogform(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortAuthtype(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortAuthSrv1(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsSPortAccSrv1(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsSPortAuthTmo(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortAuthRetr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortAuthSrv2(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsSPortAccSrv2(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsSPortAuthSecret(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortAuthRadP(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortAuthAcc(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortProtocol(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortRemoteIP(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortSocketPort(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortRemHost(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsSPortBanner(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortPrompt(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortTermType(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortAutomUsr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortNetMask(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 32])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class cpsSPortPppMtu(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 33])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortPppMru(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 34])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortPppOptions(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 35])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortPppFoption(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 36])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortModemChat(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 37])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortSttyCmd(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 38])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortSockTx(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 39])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortSockPoll(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 40])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortSockIdle(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 41])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortDBsize(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 42])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortDBtime(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 43])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortDBmode(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 44])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortDBsyslog(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 45])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortDBmenu(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 46])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortDBalarm(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 47])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortSSHbreak(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 48])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortSniffSess(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 49])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortSniffAdm(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 50])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortSniffEsc(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 51])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortSniffMsess(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 52])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortTelnetMode(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 53])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortSysBufSess(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 54])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortLFSuppress(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 55])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsSPortAutoInput(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 56])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortAutoOutput(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 57])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsSPortBreakInterval(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1, 58])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortTty(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsISPortName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class cpsISPortSpeed(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortTxBytes(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortRXBytes(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortErrFrame(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortErrParity(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortErrBreaks(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortErrOverrun(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortSigDTR(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortSigCD(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortSigDSR(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortSigRTS(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortSigCTS(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class cpsISPortSigRI(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class moduleNumber(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class moduleName(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class moduleVersion(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class moduleDate(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class trapIndex(ColumnObject):
	access = 4
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class receiverAddr(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class communityString(ColumnObject):
	access = 5
	status = 3
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class severity(ColumnObject):
	status = 5
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'information'), Enum(2, 'warning'), Enum(3, 'severe')]


class acceptThisReceiver(ColumnObject):
	status = 3
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'yes'), Enum(2, 'no')]


class receiveTrapType(ColumnObject):
	status = 5
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'powernet'), Enum(2, 'ietf'), Enum(3, 'both')]


# rows 
class upsBasicConfigDeviceEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([deviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 1, 2, 1])
	access = 2
	columns = {'deviceIndex': deviceIndex, 'deviceName': deviceName, 'vaRating': vaRating, 'acceptThisDevice': acceptThisDevice}


class upsAdvConfigDipSwitchEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dipSwitchIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 13, 1])
	access = 2
	columns = {'dipSwitchIndex': dipSwitchIndex, 'dipSwitchStatus': dipSwitchStatus}


class apcUpsConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([apcUpsConfigFieldIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 5, 2, 16, 1])
	access = 2
	columns = {'apcUpsConfigFieldIndex': apcUpsConfigFieldIndex, 'apcUpsConfigFieldOID': apcUpsConfigFieldOID, 'apcUpsConfigFieldValueRange': apcUpsConfigFieldValueRange}


class upsPhaseInputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsPhaseInputTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 2, 1])
	access = 2
	columns = {'upsPhaseInputTableIndex': upsPhaseInputTableIndex, 'upsPhaseNumInputPhases': upsPhaseNumInputPhases, 'upsPhaseInputVoltageOrientation': upsPhaseInputVoltageOrientation, 'upsPhaseInputFrequency': upsPhaseInputFrequency, 'upsPhaseInputType': upsPhaseInputType, 'upsPhaseInputName': upsPhaseInputName}


class upsPhaseInputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsPhaseInputPhaseTableIndex, upsPhaseInputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 2, 3, 1])
	access = 2
	columns = {'upsPhaseInputPhaseTableIndex': upsPhaseInputPhaseTableIndex, 'upsPhaseInputPhaseIndex': upsPhaseInputPhaseIndex, 'upsPhaseInputVoltage': upsPhaseInputVoltage, 'upsPhaseInputMaxVoltage': upsPhaseInputMaxVoltage, 'upsPhaseInputMinVoltage': upsPhaseInputMinVoltage, 'upsPhaseInputCurrent': upsPhaseInputCurrent, 'upsPhaseInputMaxCurrent': upsPhaseInputMaxCurrent, 'upsPhaseInputMinCurrent': upsPhaseInputMinCurrent, 'upsPhaseInputPower': upsPhaseInputPower, 'upsPhaseInputMaxPower': upsPhaseInputMaxPower, 'upsPhaseInputMinPower': upsPhaseInputMinPower}


class upsPhaseOutputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsPhaseOutputTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 2, 1])
	access = 2
	columns = {'upsPhaseOutputTableIndex': upsPhaseOutputTableIndex, 'upsPhaseNumOutputPhases': upsPhaseNumOutputPhases, 'upsPhaseOutputVoltageOrientation': upsPhaseOutputVoltageOrientation, 'upsPhaseOutputFrequency': upsPhaseOutputFrequency}


class upsPhaseOutputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsPhaseOutputPhaseTableIndex, upsPhaseOutputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 9, 3, 3, 1])
	access = 2
	columns = {'upsPhaseOutputPhaseTableIndex': upsPhaseOutputPhaseTableIndex, 'upsPhaseOutputPhaseIndex': upsPhaseOutputPhaseIndex, 'upsPhaseOutputVoltage': upsPhaseOutputVoltage, 'upsPhaseOutputCurrent': upsPhaseOutputCurrent, 'upsPhaseOutputMaxCurrent': upsPhaseOutputMaxCurrent, 'upsPhaseOutputMinCurrent': upsPhaseOutputMinCurrent, 'upsPhaseOutputLoad': upsPhaseOutputLoad, 'upsPhaseOutputMaxLoad': upsPhaseOutputMaxLoad, 'upsPhaseOutputMinLoad': upsPhaseOutputMinLoad, 'upsPhaseOutputPercentLoad': upsPhaseOutputPercentLoad, 'upsPhaseOutputMaxPercentLoad': upsPhaseOutputMaxPercentLoad, 'upsPhaseOutputMinPercentLoad': upsPhaseOutputMinPercentLoad, 'upsPhaseOutputPower': upsPhaseOutputPower, 'upsPhaseOutputMaxPower': upsPhaseOutputMaxPower, 'upsPhaseOutputMinPower': upsPhaseOutputMinPower, 'upsPhaseOutputPercentPower': upsPhaseOutputPercentPower, 'upsPhaseOutputMaxPercentPower': upsPhaseOutputMaxPercentPower, 'upsPhaseOutputMinPercentPower': upsPhaseOutputMinPercentPower}


class upsSCGStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsSCGStatusTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 10, 2, 2, 1])
	access = 2
	columns = {'upsSCGStatusTableIndex': upsSCGStatusTableIndex, 'upsSCGMemberIP': upsSCGMemberIP, 'upsSCGACInputStatus': upsSCGACInputStatus, 'upsSCGACOutputStatus': upsSCGACOutputStatus}


class upsOutletGroupStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsOutletGroupStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 1, 2, 1])
	access = 2
	columns = {'upsOutletGroupStatusIndex': upsOutletGroupStatusIndex, 'upsOutletGroupStatusName': upsOutletGroupStatusName, 'upsOutletGroupStatusGroupState': upsOutletGroupStatusGroupState, 'upsOutletGroupStatusCommandPending': upsOutletGroupStatusCommandPending}


class upsOutletGroupConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsOutletGroupConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 2, 2, 1])
	access = 2
	columns = {'upsOutletGroupConfigIndex': upsOutletGroupConfigIndex, 'upsOutletGroupConfigName': upsOutletGroupConfigName, 'upsOutletGroupConfigPowerOnDelay': upsOutletGroupConfigPowerOnDelay, 'upsOutletGroupConfigPowerOffDelay': upsOutletGroupConfigPowerOffDelay, 'upsOutletGroupConfigRebootDuration': upsOutletGroupConfigRebootDuration}


class upsOutletGroupControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsOutletGroupControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 12, 3, 2, 1])
	access = 2
	columns = {'upsOutletGroupControlIndex': upsOutletGroupControlIndex, 'upsOutletGroupControlName': upsOutletGroupControlName, 'upsOutletGroupControlCommand': upsOutletGroupControlCommand}


class upsDiagIMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagIMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 1, 2, 1])
	access = 2
	columns = {'upsDiagIMIndex': upsDiagIMIndex, 'upsDiagIMType': upsDiagIMType, 'upsDiagIMStatus': upsDiagIMStatus, 'upsDiagIMFirmwareRev': upsDiagIMFirmwareRev, 'upsDiagIMSlaveFirmwareRev': upsDiagIMSlaveFirmwareRev, 'upsDiagIMHardwareRev': upsDiagIMHardwareRev, 'upsDiagIMSerialNum': upsDiagIMSerialNum, 'upsDiagIMManufactureDate': upsDiagIMManufactureDate}


class upsDiagPMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagPMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 2, 2, 1])
	access = 2
	columns = {'upsDiagPMIndex': upsDiagPMIndex, 'upsDiagPMStatus': upsDiagPMStatus, 'upsDiagPMFirmwareRev': upsDiagPMFirmwareRev, 'upsDiagPMHardwareRev': upsDiagPMHardwareRev, 'upsDiagPMSerialNum': upsDiagPMSerialNum, 'upsDiagPMManufactureDate': upsDiagPMManufactureDate}


class upsDiagBatteryEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagBatteryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 3, 2, 1])
	access = 2
	columns = {'upsDiagBatteryFrameIndex': upsDiagBatteryFrameIndex, 'upsDiagBatteryIndex': upsDiagBatteryIndex, 'upsDiagBatteryStatus': upsDiagBatteryStatus, 'upsDiagBatterySerialNumber': upsDiagBatterySerialNumber, 'upsDiagBatteryFirmwareRev': upsDiagBatteryFirmwareRev, 'upsDiagBatteryManufactureDate': upsDiagBatteryManufactureDate, 'upsDiagBatteryType': upsDiagBatteryType}


class upsDiagSubSysFrameEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysFrameIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 2, 1])
	access = 2
	columns = {'upsDiagSubSysFrameIndex': upsDiagSubSysFrameIndex, 'upsDiagSubSysFrameType': upsDiagSubSysFrameType, 'upsDiagSubSysFrameFirmwareRev': upsDiagSubSysFrameFirmwareRev, 'upsDiagSubSysFrameHardwareRev': upsDiagSubSysFrameHardwareRev, 'upsDiagSubSysFrameSerialNum': upsDiagSubSysFrameSerialNum, 'upsDiagSubSysFrameManufactureDate': upsDiagSubSysFrameManufactureDate}


class upsDiagSubSysIntBypSwitchEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysIntBypSwitchIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 4, 1])
	access = 2
	columns = {'upsDiagSubSysIntBypSwitchFrameIndex': upsDiagSubSysIntBypSwitchFrameIndex, 'upsDiagSubSysIntBypSwitchIndex': upsDiagSubSysIntBypSwitchIndex, 'upsDiagSubSysIntBypSwitchStatus': upsDiagSubSysIntBypSwitchStatus, 'upsDiagSubSysIntBypSwitchFirmwareRev': upsDiagSubSysIntBypSwitchFirmwareRev, 'upsDiagSubSysIntBypSwitchHardwareRev': upsDiagSubSysIntBypSwitchHardwareRev, 'upsDiagSubSysIntBypSwitchSerialNum': upsDiagSubSysIntBypSwitchSerialNum, 'upsDiagSubSysIntBypSwitchManufactureDate': upsDiagSubSysIntBypSwitchManufactureDate}


class upsDiagSubSysBattMonitorEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysBattMonitorIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 6, 1])
	access = 2
	columns = {'upsDiagSubSysBattMonitorFrameIndex': upsDiagSubSysBattMonitorFrameIndex, 'upsDiagSubSysBattMonitorIndex': upsDiagSubSysBattMonitorIndex, 'upsDiagSubSysBattMonitorStatus': upsDiagSubSysBattMonitorStatus, 'upsDiagSubSysBattMonitorFirmwareRev': upsDiagSubSysBattMonitorFirmwareRev, 'upsDiagSubSysBattMonitorHardwareRev': upsDiagSubSysBattMonitorHardwareRev, 'upsDiagSubSysBattMonitorSerialNum': upsDiagSubSysBattMonitorSerialNum, 'upsDiagSubSysBattMonitorManufactureDate': upsDiagSubSysBattMonitorManufactureDate}


class upsDiagSubSysExternalSwitchGearEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysExternalSwitchGearIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 8, 1])
	access = 2
	columns = {'upsDiagSubSysExternalSwitchGearFrameIndex': upsDiagSubSysExternalSwitchGearFrameIndex, 'upsDiagSubSysExternalSwitchGearIndex': upsDiagSubSysExternalSwitchGearIndex, 'upsDiagSubSysExternalSwitchGearStatus': upsDiagSubSysExternalSwitchGearStatus, 'upsDiagSubSysExternalSwitchGearFirmwareRev': upsDiagSubSysExternalSwitchGearFirmwareRev, 'upsDiagSubSysExternalSwitchGearHardwareRev': upsDiagSubSysExternalSwitchGearHardwareRev, 'upsDiagSubSysExternalSwitchGearSerialNum': upsDiagSubSysExternalSwitchGearSerialNum, 'upsDiagSubSysExternalSwitchGearManufactureDate': upsDiagSubSysExternalSwitchGearManufactureDate}


class upsDiagSubSysDisplayInterfaceCardEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysDisplayInterfaceCardIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 10, 1])
	access = 2
	columns = {'upsDiagSubSysDisplayInterfaceCardFrameIndex': upsDiagSubSysDisplayInterfaceCardFrameIndex, 'upsDiagSubSysDisplayInterfaceCardIndex': upsDiagSubSysDisplayInterfaceCardIndex, 'upsDiagSubSysDisplayInterfaceCardStatus': upsDiagSubSysDisplayInterfaceCardStatus}


class upsDiagSubSysDCCircuitBreakerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysDCCircuitBreakerIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 12, 1])
	access = 2
	columns = {'upsDiagSubSysDCCircuitBreakerFrameIndex': upsDiagSubSysDCCircuitBreakerFrameIndex, 'upsDiagSubSysDCCircuitBreakerIndex': upsDiagSubSysDCCircuitBreakerIndex, 'upsDiagSubSysDCCircuitBreakerStatus': upsDiagSubSysDCCircuitBreakerStatus}


class upsDiagSubSysSystemPowerSupplyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysSystemPowerSupplyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 14, 1])
	access = 2
	columns = {'upsDiagSubSysSystemPowerSupplyFrameIndex': upsDiagSubSysSystemPowerSupplyFrameIndex, 'upsDiagSubSysSystemPowerSupplyIndex': upsDiagSubSysSystemPowerSupplyIndex, 'upsDiagSubSysSystemPowerSupplyStatus': upsDiagSubSysSystemPowerSupplyStatus}


class upsDiagSubSysXRCommunicationCardEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysXRCommunicationCardIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 16, 1])
	access = 2
	columns = {'upsDiagSubSysXRCommunicationCardFrameIndex': upsDiagSubSysXRCommunicationCardFrameIndex, 'upsDiagSubSysXRCommunicationCardIndex': upsDiagSubSysXRCommunicationCardIndex, 'upsDiagSubSysXRCommunicationCardStatus': upsDiagSubSysXRCommunicationCardStatus}


class upsDiagSubSysExternalPowerFrameBoardEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysExternalPowerFrameBoardIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 18, 1])
	access = 2
	columns = {'upsDiagSubSysExternalPowerFrameBoardFrameIndex': upsDiagSubSysExternalPowerFrameBoardFrameIndex, 'upsDiagSubSysExternalPowerFrameBoardIndex': upsDiagSubSysExternalPowerFrameBoardIndex, 'upsDiagSubSysExternalPowerFrameBoardStatus': upsDiagSubSysExternalPowerFrameBoardStatus}


class upsDiagSubSysChargerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([upsDiagSubSysChargerIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 1, 13, 4, 20, 1])
	access = 2
	columns = {'upsDiagSubSysChargerFrameIndex': upsDiagSubSysChargerFrameIndex, 'upsDiagSubSysChargerIndex': upsDiagSubSysChargerIndex, 'upsDiagSubSysChargerStatus': upsDiagSubSysChargerStatus}


class mUpsContactEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([contactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 2, 2, 2, 1])
	access = 2
	columns = {'contactNumber': contactNumber, 'normalState': normalState, 'description': description, 'monitoringStatus': monitoringStatus, 'currentStatus': currentStatus}


class sPDUOutletControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 4, 2, 1])
	access = 2
	columns = {'sPDUOutletControlIndex': sPDUOutletControlIndex, 'sPDUOutletPending': sPDUOutletPending, 'sPDUOutletCtl': sPDUOutletCtl, 'sPDUOutletCtlName': sPDUOutletCtlName}


class sPDUOutletConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 4, 5, 2, 1])
	access = 2
	columns = {'sPDUOutletConfigIndex': sPDUOutletConfigIndex, 'sPDUOutletPowerOnTime': sPDUOutletPowerOnTime, 'sPDUOutletName': sPDUOutletName, 'sPDUOutletPowerOffTime': sPDUOutletPowerOffTime, 'sPDUOutletRebootDuration': sPDUOutletRebootDuration}


class sPDUIdentVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUIdentVMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 1, 2, 1])
	access = 2
	columns = {'sPDUIdentVMIndex': sPDUIdentVMIndex, 'sPDUIdentNameVM': sPDUIdentNameVM, 'sPDUIdentHardwareRevVM': sPDUIdentHardwareRevVM, 'sPDUIdentFirmwareRevVM': sPDUIdentFirmwareRevVM, 'sPDUIdentDateOfManufactureVM': sPDUIdentDateOfManufactureVM, 'sPDUIdentModelNumberVM': sPDUIdentModelNumberVM, 'sPDUIdentSerialNumberVM': sPDUIdentSerialNumberVM}


class sPDUMasterControlVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterControlVMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 2, 2, 1])
	access = 2
	columns = {'sPDUMasterControlVMIndex': sPDUMasterControlVMIndex, 'sPDUMasterControlVMName': sPDUMasterControlVMName, 'sPDUMasterControlVMCommand': sPDUMasterControlVMCommand}


class sPDUMasterConfigVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterConfigVMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 3, 2, 1])
	access = 2
	columns = {'sPDUMasterConfigVMIndex': sPDUMasterConfigVMIndex, 'sPDUMasterConfigVMName': sPDUMasterConfigVMName, 'sPDUMasterConfigVMColdstartDelay': sPDUMasterConfigVMColdstartDelay, 'sPDUMasterConfigVMAudioAlarmActivated': sPDUMasterConfigVMAudioAlarmActivated, 'sPDUMasterConfigVMHighLoadWarningThreshold': sPDUMasterConfigVMHighLoadWarningThreshold, 'sPDUMasterConfigVMLowLoadWarningThreshold': sPDUMasterConfigVMLowLoadWarningThreshold, 'sPDUMasterConfigVMOverloadRestriction': sPDUMasterConfigVMOverloadRestriction}


class sPDUMasterStatusVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterStatusVMIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 4, 2, 1])
	access = 2
	columns = {'sPDUMasterStatusVMIndex': sPDUMasterStatusVMIndex, 'sPDUMasterStatusVMName': sPDUMasterStatusVMName, 'sPDUMasterStatusVMCommandPending': sPDUMasterStatusVMCommandPending, 'sPDUMasterStatusVMOverloadCondition': sPDUMasterStatusVMOverloadCondition, 'sPDUMasterStatusVMLowLoadCondition': sPDUMasterStatusVMLowLoadCondition, 'sPDUMasterStatusVMCurrentLoad': sPDUMasterStatusVMCurrentLoad, 'sPDUMasterStatusVMMaxLoad': sPDUMasterStatusVMMaxLoad, 'sPDUMasterStatusVMOutletCount': sPDUMasterStatusVMOutletCount, 'sPDUMasterStatusVMRebootDuration': sPDUMasterStatusVMRebootDuration}


class sPDUOutletControlVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletControlVMIndex, sPDUOutletControlVMOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 5, 1, 1])
	access = 2
	columns = {'sPDUOutletControlVMIndex': sPDUOutletControlVMIndex, 'sPDUOutletControlVMName': sPDUOutletControlVMName, 'sPDUOutletControlVMOutletIndex': sPDUOutletControlVMOutletIndex, 'sPDUOutletControlVMOutletName': sPDUOutletControlVMOutletName, 'sPDUOutletControlVMOutletCommand': sPDUOutletControlVMOutletCommand}


class sPDUOutletConfigVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigVMIndex, sPDUOutletConfigVMOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 6, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigVMIndex': sPDUOutletConfigVMIndex, 'sPDUOutletConfigVMName': sPDUOutletConfigVMName, 'sPDUOutletConfigVMOutletIndex': sPDUOutletConfigVMOutletIndex, 'sPDUOutletConfigVMOutletName': sPDUOutletConfigVMOutletName, 'sPDUOutletConfigVMPowerOnTime': sPDUOutletConfigVMPowerOnTime, 'sPDUOutletConfigVMPowerOffTime': sPDUOutletConfigVMPowerOffTime, 'sPDUOutletConfigVMRebootDuration': sPDUOutletConfigVMRebootDuration}


class sPDUOutletStatusVMEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletStatusVMIndex, sPDUOutletStatusVMOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 5, 7, 1, 1])
	access = 2
	columns = {'sPDUOutletStatusVMIndex': sPDUOutletStatusVMIndex, 'sPDUOutletStatusVMName': sPDUOutletStatusVMName, 'sPDUOutletStatusVMOutletIndex': sPDUOutletStatusVMOutletIndex, 'sPDUOutletStatusVMOutletName': sPDUOutletStatusVMOutletName, 'sPDUOutletStatusVMOutletState': sPDUOutletStatusVMOutletState, 'sPDUOutletStatusVMCommandPending': sPDUOutletStatusVMCommandPending}


class sPDUIdentMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUIdentMSPIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 1, 2, 1])
	access = 2
	columns = {'sPDUIdentMSPIndex': sPDUIdentMSPIndex, 'sPDUIdentNameMSP': sPDUIdentNameMSP, 'sPDUIdentHardwareRevMSP': sPDUIdentHardwareRevMSP, 'sPDUIdentFirmwareRevMSP': sPDUIdentFirmwareRevMSP, 'sPDUIdentDateOfManufactureMSP': sPDUIdentDateOfManufactureMSP, 'sPDUIdentModelNumberMSP': sPDUIdentModelNumberMSP, 'sPDUIdentSerialNumberMSP': sPDUIdentSerialNumberMSP}


class sPDUMasterControlMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterControlMSPIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 2, 2, 1])
	access = 2
	columns = {'sPDUMasterControlMSPIndex': sPDUMasterControlMSPIndex, 'sPDUMasterControlMSPName': sPDUMasterControlMSPName, 'sPDUMasterControlMSPCommand': sPDUMasterControlMSPCommand}


class sPDUMasterConfigMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterConfigMSPIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 3, 2, 1])
	access = 2
	columns = {'sPDUMasterConfigMSPIndex': sPDUMasterConfigMSPIndex, 'sPDUMasterConfigMSPName': sPDUMasterConfigMSPName, 'sPDUMasterConfigMSPPowerOnTimeDelay': sPDUMasterConfigMSPPowerOnTimeDelay, 'sPDUMasterConfigMSPManualButton': sPDUMasterConfigMSPManualButton}


class sPDUMasterStatusMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUMasterStatusMSPIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 4, 2, 1])
	access = 2
	columns = {'sPDUMasterStatusMSPIndex': sPDUMasterStatusMSPIndex, 'sPDUMasterStatusMSPName': sPDUMasterStatusMSPName, 'sPDUMasterStatusMSPOutletCount': sPDUMasterStatusMSPOutletCount}


class sPDUOutletControlMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletControlMSPIndex, sPDUOutletControlMSPOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 5, 1, 1])
	access = 2
	columns = {'sPDUOutletControlMSPIndex': sPDUOutletControlMSPIndex, 'sPDUOutletControlMSPName': sPDUOutletControlMSPName, 'sPDUOutletControlMSPOutletIndex': sPDUOutletControlMSPOutletIndex, 'sPDUOutletControlMSPOutletName': sPDUOutletControlMSPOutletName, 'sPDUOutletControlMSPOutletCommand': sPDUOutletControlMSPOutletCommand}


class sPDUOutletConfigMSPallEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigMSPallIndex, sPDUOutletConfigMSPallOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 1, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigMSPallIndex': sPDUOutletConfigMSPallIndex, 'sPDUOutletConfigMSPallName': sPDUOutletConfigMSPallName, 'sPDUOutletConfigMSPallOutletIndex': sPDUOutletConfigMSPallOutletIndex, 'sPDUOutletConfigMSPallOutletName': sPDUOutletConfigMSPallOutletName, 'sPDUOutletConfigMSPallOutletCtrlMode': sPDUOutletConfigMSPallOutletCtrlMode}


class sPDUOutletConfigMSPgsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigMSPgsIndex, sPDUOutletConfigMSPgsOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 2, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigMSPgsIndex': sPDUOutletConfigMSPgsIndex, 'sPDUOutletConfigMSPgsName': sPDUOutletConfigMSPgsName, 'sPDUOutletConfigMSPgsOutletIndex': sPDUOutletConfigMSPgsOutletIndex, 'sPDUOutletConfigMSPgsOutletName': sPDUOutletConfigMSPgsOutletName, 'sPDUOutletConfigMSPgsOutletCtrlMode': sPDUOutletConfigMSPgsOutletCtrlMode, 'sPDUOutletConfigMSPgsDeviceConfirm': sPDUOutletConfigMSPgsDeviceConfirm, 'sPDUOutletConfigMSPgsLowBattWarning': sPDUOutletConfigMSPgsLowBattWarning, 'sPDUOutletConfigMSPgsLowBattMult': sPDUOutletConfigMSPgsLowBattMult, 'sPDUOutletConfigMSPgsRestartDelay': sPDUOutletConfigMSPgsRestartDelay, 'sPDUOutletConfigMSPgsPowerOnDelay': sPDUOutletConfigMSPgsPowerOnDelay, 'sPDUOutletConfigMSPgsPowerOffDelay': sPDUOutletConfigMSPgsPowerOffDelay, 'sPDUOutletConfigMSPgsBattCapThresh': sPDUOutletConfigMSPgsBattCapThresh, 'sPDUOutletConfigMSPgsRebootDuration': sPDUOutletConfigMSPgsRebootDuration}


class sPDUOutletConfigMSPannunEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigMSPannunIndex, sPDUOutletConfigMSPannunOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 3, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigMSPannunIndex': sPDUOutletConfigMSPannunIndex, 'sPDUOutletConfigMSPannunName': sPDUOutletConfigMSPannunName, 'sPDUOutletConfigMSPannunOutletIndex': sPDUOutletConfigMSPannunOutletIndex, 'sPDUOutletConfigMSPannunOutletName': sPDUOutletConfigMSPannunOutletName, 'sPDUOutletConfigMSPannunOutletCtrlMode': sPDUOutletConfigMSPannunOutletCtrlMode, 'sPDUOutletConfigMSPannunInitialState': sPDUOutletConfigMSPannunInitialState, 'sPDUOutletConfigMSPannunAlarmActionDly': sPDUOutletConfigMSPannunAlarmActionDly}


class sPDUOutletConfigMSPmupsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletConfigMSPmupsIndex, sPDUOutletConfigMSPmupsOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 6, 4, 1, 1])
	access = 2
	columns = {'sPDUOutletConfigMSPmupsIndex': sPDUOutletConfigMSPmupsIndex, 'sPDUOutletConfigMSPmupsName': sPDUOutletConfigMSPmupsName, 'sPDUOutletConfigMSPmupsOutletIndex': sPDUOutletConfigMSPmupsOutletIndex, 'sPDUOutletConfigMSPmupsOutletName': sPDUOutletConfigMSPmupsOutletName, 'sPDUOutletConfigMSPmupsZone1': sPDUOutletConfigMSPmupsZone1, 'sPDUOutletConfigMSPmupsZone2': sPDUOutletConfigMSPmupsZone2, 'sPDUOutletConfigMSPmupsZone3': sPDUOutletConfigMSPmupsZone3, 'sPDUOutletConfigMSPmupsZone4': sPDUOutletConfigMSPmupsZone4, 'sPDUOutletConfigMSPmupsP1LowHum': sPDUOutletConfigMSPmupsP1LowHum, 'sPDUOutletConfigMSPmupsP1HiHum': sPDUOutletConfigMSPmupsP1HiHum, 'sPDUOutletConfigMSPmupsP1LowTemp': sPDUOutletConfigMSPmupsP1LowTemp, 'sPDUOutletConfigMSPmupsP1HiTemp': sPDUOutletConfigMSPmupsP1HiTemp, 'sPDUOutletConfigMSPmupsP2LowHum': sPDUOutletConfigMSPmupsP2LowHum, 'sPDUOutletConfigMSPmupsP2HiHum': sPDUOutletConfigMSPmupsP2HiHum, 'sPDUOutletConfigMSPmupsP2LowTemp': sPDUOutletConfigMSPmupsP2LowTemp, 'sPDUOutletConfigMSPmupsP2HiTemp': sPDUOutletConfigMSPmupsP2HiTemp}


class sPDUOutletStatusMSPEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([sPDUOutletStatusMSPIndex, sPDUOutletStatusMSPOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 6, 7, 1, 1])
	access = 2
	columns = {'sPDUOutletStatusMSPIndex': sPDUOutletStatusMSPIndex, 'sPDUOutletStatusMSPName': sPDUOutletStatusMSPName, 'sPDUOutletStatusMSPOutletIndex': sPDUOutletStatusMSPOutletIndex, 'sPDUOutletStatusMSPOutletName': sPDUOutletStatusMSPOutletName, 'sPDUOutletStatusMSPOutletState': sPDUOutletStatusMSPOutletState, 'sPDUOutletStatusMSPCommandPending': sPDUOutletStatusMSPCommandPending, 'sPDUOutletStatusMSPOutletCtrlMode': sPDUOutletStatusMSPOutletCtrlMode}


class dm3IdentSysDescriptionEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3IdentSysDescriptionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 1, 1, 2, 1])
	access = 2
	columns = {'dm3IdentSysDescriptionIndex': dm3IdentSysDescriptionIndex, 'dm3IdentSysDescriptionText': dm3IdentSysDescriptionText}


class dm3ConfigSysDescriptionEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigSysDescriptionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 1, 2, 1])
	access = 2
	columns = {'dm3ConfigSysDescriptionIndex': dm3ConfigSysDescriptionIndex, 'dm3ConfigSysDescriptionText': dm3ConfigSysDescriptionText}


class dm3ConfigLVDEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigLVDIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 2, 2, 1])
	access = 2
	columns = {'dm3ConfigLVDIndex': dm3ConfigLVDIndex, 'dm3ConfigLVDName': dm3ConfigLVDName, 'dm3ConfigLVDEnable': dm3ConfigLVDEnable, 'dm3ConfigLVDTripThresh': dm3ConfigLVDTripThresh, 'dm3ConfigLVDResetThresh': dm3ConfigLVDResetThresh, 'dm3ConfigLVDOpenAlarm': dm3ConfigLVDOpenAlarm, 'dm3ConfigLVDHWAlarm': dm3ConfigLVDHWAlarm}


class dm3ConfigOutRlyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigOutRlyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 1, 2, 1])
	access = 2
	columns = {'dm3ConfigOutRlyIndex': dm3ConfigOutRlyIndex, 'dm3ConfigOutRlyName': dm3ConfigOutRlyName, 'dm3ConfigOutRlyDelay': dm3ConfigOutRlyDelay, 'dm3ConfigOutRlyAlarm': dm3ConfigOutRlyAlarm}


class dm3ConfigInRlyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigInRlyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 5, 2, 2, 1])
	access = 2
	columns = {'dm3ConfigInRlyIndex': dm3ConfigInRlyIndex, 'dm3ConfigInRlyName': dm3ConfigInRlyName, 'dm3ConfigInRlyDelay': dm3ConfigInRlyDelay, 'dm3ConfigInRlyAlarm': dm3ConfigInRlyAlarm}


class dm3ConfigBreakersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigBreakersIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 1, 2, 1])
	access = 2
	columns = {'dm3ConfigBreakersIndex': dm3ConfigBreakersIndex, 'dm3ConfigBreakersName': dm3ConfigBreakersName, 'dm3ConfigBreakersAlarm': dm3ConfigBreakersAlarm}


class dm3ConfigFusesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3ConfigFusesIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 2, 6, 2, 2, 1])
	access = 2
	columns = {'dm3ConfigFusesIndex': dm3ConfigFusesIndex, 'dm3ConfigFusesName': dm3ConfigFusesName, 'dm3ConfigFusesAlarm': dm3ConfigFusesAlarm}


class dm3StatusAlarmsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusAlarmsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 2, 2, 1])
	access = 2
	columns = {'dm3StatusAlarmsIndex': dm3StatusAlarmsIndex, 'dm3StatusAlarmsText': dm3StatusAlarmsText}


class dm3StatusLVDEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusLVDIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 5, 2, 1])
	access = 2
	columns = {'dm3StatusLVDIndex': dm3StatusLVDIndex, 'dm3StatusLVDName': dm3StatusLVDName, 'dm3StatusLVDState': dm3StatusLVDState, 'dm3StatusLVDHwFault': dm3StatusLVDHwFault}


class dm3StatusRectEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusRectIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 1, 2, 1])
	access = 2
	columns = {'dm3StatusRectIndex': dm3StatusRectIndex, 'dm3StatusRectID': dm3StatusRectID, 'dm3StatusRectDesc': dm3StatusRectDesc, 'dm3StatusRectCurrent': dm3StatusRectCurrent, 'dm3StatusRectCurrentLimit': dm3StatusRectCurrentLimit, 'dm3StatusRectStandby': dm3StatusRectStandby, 'dm3StatusRectFanFail': dm3StatusRectFanFail, 'dm3StatusRectFail': dm3StatusRectFail, 'dm3StatusRectDevType': dm3StatusRectDevType, 'dm3StatusRectPhyAddr': dm3StatusRectPhyAddr, 'dm3StatusRectCfg': dm3StatusRectCfg, 'dm3StatusRectPcbRev': dm3StatusRectPcbRev, 'dm3StatusRectFwVer': dm3StatusRectFwVer, 'dm3StatusRectPresent': dm3StatusRectPresent, 'dm3StatusRectDiagPass': dm3StatusRectDiagPass, 'dm3StatusRectState': dm3StatusRectState}


class dm3StatusConvEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusConvIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 6, 2, 2, 1])
	access = 2
	columns = {'dm3StatusConvIndex': dm3StatusConvIndex, 'dm3StatusConvID': dm3StatusConvID, 'dm3StatusConvDesc': dm3StatusConvDesc, 'dm3StatusConvCurrent': dm3StatusConvCurrent, 'dm3StatusConvCurrentLimit': dm3StatusConvCurrentLimit, 'dm3StatusConvStandby': dm3StatusConvStandby, 'dm3StatusConvFanFail': dm3StatusConvFanFail, 'dm3StatusConvFail': dm3StatusConvFail, 'dm3StatusConvDevType': dm3StatusConvDevType, 'dm3StatusConvPhyAddr': dm3StatusConvPhyAddr, 'dm3StatusConvCfg': dm3StatusConvCfg, 'dm3StatusConvPcbRev': dm3StatusConvPcbRev, 'dm3StatusConvFwVer': dm3StatusConvFwVer, 'dm3StatusConvPresent': dm3StatusConvPresent, 'dm3StatusConvDiagPass': dm3StatusConvDiagPass, 'dm3StatusConvState': dm3StatusConvState}


class dm3StatusOutRlyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusOutRlyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 1, 2, 1])
	access = 2
	columns = {'dm3StatusOutRlyIndex': dm3StatusOutRlyIndex, 'dm3StatusOutRlyName': dm3StatusOutRlyName, 'dm3StatusOutRlyStatus': dm3StatusOutRlyStatus}


class dm3StatusInRlyEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusInRlyIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 7, 2, 2, 1])
	access = 2
	columns = {'dm3StatusInRlyIndex': dm3StatusInRlyIndex, 'dm3StatusInRlyName': dm3StatusInRlyName, 'dm3StatusInRlyStatus': dm3StatusInRlyStatus}


class dm3StatusBreakersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusBreakersIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 1, 2, 1])
	access = 2
	columns = {'dm3StatusBreakersIndex': dm3StatusBreakersIndex, 'dm3StatusBreakersName': dm3StatusBreakersName, 'dm3StatusBreakersStatus': dm3StatusBreakersStatus}


class dm3StatusFusesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dm3StatusFusesIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 7, 3, 8, 2, 2, 1])
	access = 2
	columns = {'dm3StatusFusesIndex': dm3StatusFusesIndex, 'dm3StatusFusesName': dm3StatusFusesName, 'dm3StatusFusesStatus': dm3StatusFusesStatus}


class atsCalibrationInputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsCalibrationInputTableIndex, atsCalibrationInputPhaseTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 1, 3, 1])
	access = 2
	columns = {'atsCalibrationInputTableIndex': atsCalibrationInputTableIndex, 'atsCalibrationInputPhaseTableIndex': atsCalibrationInputPhaseTableIndex, 'atsLineVoltageCalibrationFactor': atsLineVoltageCalibrationFactor}


class atsCalibrationPowerSupplyVoltageEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsCalibrationPowerSupplyVoltageTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 2, 2, 1])
	access = 2
	columns = {'atsCalibrationPowerSupplyVoltageTableIndex': atsCalibrationPowerSupplyVoltageTableIndex, 'atsCalibrationPowerSupplyVoltage': atsCalibrationPowerSupplyVoltage, 'atsPowerSupplyVoltageCalibrationFactor': atsPowerSupplyVoltageCalibrationFactor}


class atsCalibrationOutputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsCalibrationOutputTableIndex, atsCalibrationOutputPhasesTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 2, 3, 3, 1])
	access = 2
	columns = {'atsCalibrationOutputTableIndex': atsCalibrationOutputTableIndex, 'atsCalibrationOutputPhasesTableIndex': atsCalibrationOutputPhasesTableIndex, 'atsOutputCurrentCalibrationFactor': atsOutputCurrentCalibrationFactor}


class atsInputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsInputTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 2, 1])
	access = 2
	columns = {'atsInputTableIndex': atsInputTableIndex, 'atsNumInputPhases': atsNumInputPhases, 'atsInputVoltageOrientation': atsInputVoltageOrientation, 'atsInputFrequency': atsInputFrequency, 'atsInputType': atsInputType, 'atsInputName': atsInputName}


class atsInputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsInputPhaseTableIndex, atsInputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 3, 3, 1])
	access = 2
	columns = {'atsInputPhaseTableIndex': atsInputPhaseTableIndex, 'atsInputPhaseIndex': atsInputPhaseIndex, 'atsInputVoltage': atsInputVoltage, 'atsInputMaxVoltage': atsInputMaxVoltage, 'atsInputMinVoltage': atsInputMinVoltage, 'atsInputCurrent': atsInputCurrent, 'atsInputMaxCurrent': atsInputMaxCurrent, 'atsInputMinCurrent': atsInputMinCurrent, 'atsInputPower': atsInputPower, 'atsInputMaxPower': atsInputMaxPower, 'atsInputMinPower': atsInputMinPower}


class atsOutputEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsOutputTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 2, 1])
	access = 2
	columns = {'atsOutputTableIndex': atsOutputTableIndex, 'atsNumOutputPhases': atsNumOutputPhases, 'atsOutputVoltageOrientation': atsOutputVoltageOrientation, 'atsOutputFrequency': atsOutputFrequency}


class atsOutputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([atsOutputPhaseTableIndex, atsOutputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 8, 5, 4, 3, 1])
	access = 2
	columns = {'atsOutputPhaseTableIndex': atsOutputPhaseTableIndex, 'atsOutputPhaseIndex': atsOutputPhaseIndex, 'atsOutputVoltage': atsOutputVoltage, 'atsOutputCurrent': atsOutputCurrent, 'atsOutputMaxCurrent': atsOutputMaxCurrent, 'atsOutputMinCurrent': atsOutputMinCurrent, 'atsOutputLoad': atsOutputLoad, 'atsOutputMaxLoad': atsOutputMaxLoad, 'atsOutputMinLoad': atsOutputMinLoad, 'atsOutputPercentLoad': atsOutputPercentLoad, 'atsOutputMaxPercentLoad': atsOutputMaxPercentLoad, 'atsOutputMinPercentLoad': atsOutputMinPercentLoad, 'atsOutputPower': atsOutputPower, 'atsOutputMaxPower': atsOutputMaxPower, 'atsOutputMinPower': atsOutputMinPower, 'atsOutputPercentPower': atsOutputPercentPower, 'atsOutputMaxPercentPower': atsOutputMaxPercentPower, 'atsOutputMinPercentPower': atsOutputMinPercentPower}


class dcmim2ConfigLVDEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dcmim2ConfigLVDIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 3, 3, 2, 1])
	access = 2
	columns = {'dcmim2ConfigLVDIndex': dcmim2ConfigLVDIndex, 'dcmim2ConfigLVDTrip': dcmim2ConfigLVDTrip, 'dcmim2ConfigLVDReset': dcmim2ConfigLVDReset, 'dcmim2ConfigLVDState': dcmim2ConfigLVDState}


class dcmim2StatusRectEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dcmim2StatusRectIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 2, 2, 1])
	access = 2
	columns = {'dcmim2StatusRectIndex': dcmim2StatusRectIndex, 'dcmim2StatusRectDevType': dcmim2StatusRectDevType, 'dcmim2StatusRectID': dcmim2StatusRectID, 'dcmim2StatusRectPhyAddr': dcmim2StatusRectPhyAddr, 'dcmim2StatusRectFail': dcmim2StatusRectFail, 'dcmim2StatusRectCurrent': dcmim2StatusRectCurrent}


class dcmim2StatusLVDEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dcmim2StatusLVDIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 4, 2, 1])
	access = 2
	columns = {'dcmim2StatusLVDIndex': dcmim2StatusLVDIndex, 'dcmim2StatusLVDState': dcmim2StatusLVDState}


class dcmim2StatusAlarmsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([dcmim2StatusAlarmsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 9, 4, 5, 2, 1])
	access = 2
	columns = {'dcmim2StatusAlarmsIndex': dcmim2StatusAlarmsIndex, 'dcmim2StatusAlarmsText': dcmim2StatusAlarmsText}


class emConfigProbesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emConfigProbeNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 2, 1])
	access = 2
	columns = {'emConfigProbeNumber': emConfigProbeNumber, 'emConfigProbeName': emConfigProbeName, 'emConfigProbeHighTempThreshold': emConfigProbeHighTempThreshold, 'emConfigProbeLowTempThreshold': emConfigProbeLowTempThreshold, 'emConfigProbeTempUnits': emConfigProbeTempUnits, 'emConfigProbeHighHumidThreshold': emConfigProbeHighHumidThreshold, 'emConfigProbeLowHumidThreshold': emConfigProbeLowHumidThreshold, 'emConfigProbeHighTempEnable': emConfigProbeHighTempEnable, 'emConfigProbeLowTempEnable': emConfigProbeLowTempEnable, 'emConfigProbeHighHumidEnable': emConfigProbeHighHumidEnable, 'emConfigProbeLowHumidEnable': emConfigProbeLowHumidEnable, 'emConfigProbeMaxTempThreshold': emConfigProbeMaxTempThreshold, 'emConfigProbeMinTempThreshold': emConfigProbeMinTempThreshold, 'emConfigProbeMaxHumidThreshold': emConfigProbeMaxHumidThreshold, 'emConfigProbeMinHumidThreshold': emConfigProbeMinHumidThreshold, 'emConfigProbeMaxTempEnable': emConfigProbeMaxTempEnable, 'emConfigProbeMinTempEnable': emConfigProbeMinTempEnable, 'emConfigProbeMaxHumidEnable': emConfigProbeMaxHumidEnable, 'emConfigProbeMinHumidEnable': emConfigProbeMinHumidEnable, 'emConfigProbeTempHysteresis': emConfigProbeTempHysteresis, 'emConfigProbeHumidHysteresis': emConfigProbeHumidHysteresis, 'emConfigProbeLocation': emConfigProbeLocation}


class emConfigContactsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emConfigContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 2, 4, 1])
	access = 2
	columns = {'emConfigContactNumber': emConfigContactNumber, 'emConfigContactName': emConfigContactName, 'emConfigContactEnable': emConfigContactEnable, 'emConfigContactSeverity': emConfigContactSeverity, 'emConfigContactNormalState': emConfigContactNormalState, 'emConfigContactLocation': emConfigContactLocation}


class emStatusProbesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emStatusProbeNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 3, 1])
	access = 2
	columns = {'emStatusProbeNumber': emStatusProbeNumber, 'emStatusProbeName': emStatusProbeName, 'emStatusProbeStatus': emStatusProbeStatus, 'emStatusProbeCurrentTemp': emStatusProbeCurrentTemp, 'emStatusProbeTempUnits': emStatusProbeTempUnits, 'emStatusProbeCurrentHumid': emStatusProbeCurrentHumid, 'emStatusProbeHighTempViolation': emStatusProbeHighTempViolation, 'emStatusProbeLowTempViolation': emStatusProbeLowTempViolation, 'emStatusProbeHighHumidViolation': emStatusProbeHighHumidViolation, 'emStatusProbeLowHumidViolation': emStatusProbeLowHumidViolation, 'emStatusProbeMaxTempViolation': emStatusProbeMaxTempViolation, 'emStatusProbeMinTempViolation': emStatusProbeMinTempViolation, 'emStatusProbeMaxHumidViolation': emStatusProbeMaxHumidViolation, 'emStatusProbeMinHumidViolation': emStatusProbeMinHumidViolation}


class emStatusContactsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emStatusContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 1, 3, 5, 1])
	access = 2
	columns = {'emStatusContactNumber': emStatusContactNumber, 'emStatusContactName': emStatusContactName, 'emStatusContactStatus': emStatusContactStatus}


class iemConfigProbesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemConfigProbeNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 2, 1])
	access = 2
	columns = {'iemConfigProbeNumber': iemConfigProbeNumber, 'iemConfigProbeName': iemConfigProbeName, 'iemConfigProbeHighTempThreshold': iemConfigProbeHighTempThreshold, 'iemConfigProbeLowTempThreshold': iemConfigProbeLowTempThreshold, 'iemConfigProbeTempUnits': iemConfigProbeTempUnits, 'iemConfigProbeHighHumidThreshold': iemConfigProbeHighHumidThreshold, 'iemConfigProbeLowHumidThreshold': iemConfigProbeLowHumidThreshold, 'iemConfigProbeHighTempEnable': iemConfigProbeHighTempEnable, 'iemConfigProbeLowTempEnable': iemConfigProbeLowTempEnable, 'iemConfigProbeHighHumidEnable': iemConfigProbeHighHumidEnable, 'iemConfigProbeLowHumidEnable': iemConfigProbeLowHumidEnable, 'iemConfigProbeMaxTempThreshold': iemConfigProbeMaxTempThreshold, 'iemConfigProbeMinTempThreshold': iemConfigProbeMinTempThreshold, 'iemConfigProbeMaxHumidThreshold': iemConfigProbeMaxHumidThreshold, 'iemConfigProbeMinHumidThreshold': iemConfigProbeMinHumidThreshold, 'iemConfigProbeMaxTempEnable': iemConfigProbeMaxTempEnable, 'iemConfigProbeMinTempEnable': iemConfigProbeMinTempEnable, 'iemConfigProbeMaxHumidEnable': iemConfigProbeMaxHumidEnable, 'iemConfigProbeMinHumidEnable': iemConfigProbeMinHumidEnable, 'iemConfigProbeTempHysteresis': iemConfigProbeTempHysteresis, 'iemConfigProbeHumidHysteresis': iemConfigProbeHumidHysteresis, 'iemConfigProbeLocation': iemConfigProbeLocation}


class iemConfigContactsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemConfigContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 2, 4, 1])
	access = 2
	columns = {'iemConfigContactNumber': iemConfigContactNumber, 'iemConfigContactName': iemConfigContactName, 'iemConfigContactEnable': iemConfigContactEnable, 'iemConfigContactSeverity': iemConfigContactSeverity, 'iemConfigContactNormalState': iemConfigContactNormalState, 'iemConfigContactLocation': iemConfigContactLocation}


class iemStatusProbesEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemStatusProbeNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 2, 1])
	access = 2
	columns = {'iemStatusProbeNumber': iemStatusProbeNumber, 'iemStatusProbeName': iemStatusProbeName, 'iemStatusProbeStatus': iemStatusProbeStatus, 'iemStatusProbeCurrentTemp': iemStatusProbeCurrentTemp, 'iemStatusProbeTempUnits': iemStatusProbeTempUnits, 'iemStatusProbeCurrentHumid': iemStatusProbeCurrentHumid, 'iemStatusProbeHighTempViolation': iemStatusProbeHighTempViolation, 'iemStatusProbeLowTempViolation': iemStatusProbeLowTempViolation, 'iemStatusProbeHighHumidViolation': iemStatusProbeHighHumidViolation, 'iemStatusProbeLowHumidViolation': iemStatusProbeLowHumidViolation, 'iemStatusProbeMaxTempViolation': iemStatusProbeMaxTempViolation, 'iemStatusProbeMinTempViolation': iemStatusProbeMinTempViolation, 'iemStatusProbeMaxHumidViolation': iemStatusProbeMaxHumidViolation, 'iemStatusProbeMinHumidViolation': iemStatusProbeMinHumidViolation}


class iemStatusContactsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemStatusContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 4, 1])
	access = 2
	columns = {'iemStatusContactNumber': iemStatusContactNumber, 'iemStatusContactName': iemStatusContactName, 'iemStatusContactStatus': iemStatusContactStatus}


class iemStatusRelaysEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([iemStatusRelayNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 2, 3, 7, 1])
	access = 2
	columns = {'iemStatusRelayNumber': iemStatusRelayNumber, 'iemStatusRelayName': iemStatusRelayName, 'iemStatusRelayStatus': iemStatusRelayStatus}


class emsOutputRelayControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutputRelayControlOutputRelayIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 2, 1, 1])
	access = 2
	columns = {'emsOutputRelayControlOutputRelayIndex': emsOutputRelayControlOutputRelayIndex, 'emsOutputRelayControlOutputRelayName': emsOutputRelayControlOutputRelayName, 'emsOutputRelayControlOutputRelayCommand': emsOutputRelayControlOutputRelayCommand}


class emsOutletControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutletControlOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 3, 1, 1])
	access = 2
	columns = {'emsOutletControlOutletIndex': emsOutletControlOutletIndex, 'emsOutletControlOutletName': emsOutletControlOutletName, 'emsOutletControlOutletCommand': emsOutletControlOutletCommand}


class emsSensorControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsSensorControlSensorIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 4, 1, 1])
	access = 2
	columns = {'emsSensorControlSensorIndex': emsSensorControlSensorIndex, 'emsSensorControlSensorSystemName': emsSensorControlSensorSystemName, 'emsSensorControlSensorUserName': emsSensorControlSensorUserName, 'emsSensorControlSensorCommand': emsSensorControlSensorCommand}


class emsAlarmDeviceControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsAlarmDeviceControlDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 5, 1, 1])
	access = 2
	columns = {'emsAlarmDeviceControlDeviceIndex': emsAlarmDeviceControlDeviceIndex, 'emsAlarmDeviceControlDeviceName': emsAlarmDeviceControlDeviceName, 'emsAlarmDeviceControlDeviceCommand': emsAlarmDeviceControlDeviceCommand}


class emsProbeConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsProbeConfigProbeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 7, 1, 1])
	access = 2
	columns = {'emsProbeConfigProbeIndex': emsProbeConfigProbeIndex, 'emsProbeConfigProbeName': emsProbeConfigProbeName, 'emsProbeConfigProbeHighTempThresh': emsProbeConfigProbeHighTempThresh, 'emsProbeConfigProbeLowTempThresh': emsProbeConfigProbeLowTempThresh, 'emsProbeConfigProbeHighHumidityThresh': emsProbeConfigProbeHighHumidityThresh, 'emsProbeConfigProbeLowHumidityThresh': emsProbeConfigProbeLowHumidityThresh, 'emsProbeConfigProbeMaxTempThresh': emsProbeConfigProbeMaxTempThresh, 'emsProbeConfigProbeMinTempThresh': emsProbeConfigProbeMinTempThresh, 'emsProbeConfigProbeDeltaTemp': emsProbeConfigProbeDeltaTemp, 'emsProbeConfigProbeMaxHumidityThresh': emsProbeConfigProbeMaxHumidityThresh, 'emsProbeConfigProbeMinHumidityThresh': emsProbeConfigProbeMinHumidityThresh, 'emsProbeConfigProbeDeltaHumidity': emsProbeConfigProbeDeltaHumidity, 'emsProbeConfigProbeSTIncTempVariance': emsProbeConfigProbeSTIncTempVariance, 'emsProbeConfigProbeSTIncTempTime': emsProbeConfigProbeSTIncTempTime, 'emsProbeConfigProbeSTDecTempVariance': emsProbeConfigProbeSTDecTempVariance, 'emsProbeConfigProbeSTDecTempTime': emsProbeConfigProbeSTDecTempTime, 'emsProbeConfigProbeLTIncTempVariance': emsProbeConfigProbeLTIncTempVariance, 'emsProbeConfigProbeLTIncTempTime': emsProbeConfigProbeLTIncTempTime, 'emsProbeConfigProbeLTDecTempVariance': emsProbeConfigProbeLTDecTempVariance, 'emsProbeConfigProbeLTDecTempTime': emsProbeConfigProbeLTDecTempTime}


class emsInputContactConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsInputContactConfigInputContactIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 8, 1, 1])
	access = 2
	columns = {'emsInputContactConfigInputContactIndex': emsInputContactConfigInputContactIndex, 'emsInputContactConfigInputContactName': emsInputContactConfigInputContactName, 'emsInputContactConfigInputContactNormalState': emsInputContactConfigInputContactNormalState}


class emsOutputRelayConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutputRelayConfigOutputRelayIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 9, 1, 1])
	access = 2
	columns = {'emsOutputRelayConfigOutputRelayIndex': emsOutputRelayConfigOutputRelayIndex, 'emsOutputRelayConfigOutputRelayName': emsOutputRelayConfigOutputRelayName, 'emsOutputRelayConfigOutputRelayNormalState': emsOutputRelayConfigOutputRelayNormalState}


class emsOutletConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutletConfigOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 10, 1, 1])
	access = 2
	columns = {'emsOutletConfigOutletIndex': emsOutletConfigOutletIndex, 'emsOutletConfigOutletName': emsOutletConfigOutletName, 'emsOutletConfigOutletNormalState': emsOutletConfigOutletNormalState}


class emsSensorConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsSensorConfigSensorIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 11, 1, 1])
	access = 2
	columns = {'emsSensorConfigSensorIndex': emsSensorConfigSensorIndex, 'emsSensorConfigSensorSystemName': emsSensorConfigSensorSystemName, 'emsSensorConfigSensorUserName': emsSensorConfigSensorUserName, 'emsSensorConfigSensorNormalState': emsSensorConfigSensorNormalState, 'emsSensorConfigSensorAlarmDelay': emsSensorConfigSensorAlarmDelay}


class emsProbeStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsProbeStatusProbeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 13, 1, 1])
	access = 2
	columns = {'emsProbeStatusProbeIndex': emsProbeStatusProbeIndex, 'emsProbeStatusProbeName': emsProbeStatusProbeName, 'emsProbeStatusProbeTemperature': emsProbeStatusProbeTemperature, 'emsProbeStatusProbeHighTempThresh': emsProbeStatusProbeHighTempThresh, 'emsProbeStatusProbeLowTempThresh': emsProbeStatusProbeLowTempThresh, 'emsProbeStatusProbeHumidity': emsProbeStatusProbeHumidity, 'emsProbeStatusProbeHighHumidityThresh': emsProbeStatusProbeHighHumidityThresh, 'emsProbeStatusProbeLowHumidityThresh': emsProbeStatusProbeLowHumidityThresh, 'emsProbeStatusProbeSerialNumber': emsProbeStatusProbeSerialNumber, 'emsProbeStatusProbeCommStatus': emsProbeStatusProbeCommStatus, 'emsProbeStatusProbeAlarmStatus': emsProbeStatusProbeAlarmStatus, 'emsProbeStatusProbeMaxTempThresh': emsProbeStatusProbeMaxTempThresh, 'emsProbeStatusProbeMinTempThresh': emsProbeStatusProbeMinTempThresh, 'emsProbeStatusProbeMaxHumidityThresh': emsProbeStatusProbeMaxHumidityThresh, 'emsProbeStatusProbeMinHumidityThresh': emsProbeStatusProbeMinHumidityThresh}


class emsInputContactStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsInputContactStatusInputContactIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 14, 1, 1])
	access = 2
	columns = {'emsInputContactStatusInputContactIndex': emsInputContactStatusInputContactIndex, 'emsInputContactStatusInputContactName': emsInputContactStatusInputContactName, 'emsInputContactStatusInputContactState': emsInputContactStatusInputContactState, 'emsInputContactStatusInputContactNormalState': emsInputContactStatusInputContactNormalState}


class emsOutputRelayStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutputRelayStatusOutputRelayIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 15, 1, 1])
	access = 2
	columns = {'emsOutputRelayStatusOutputRelayIndex': emsOutputRelayStatusOutputRelayIndex, 'emsOutputRelayStatusOutputRelayName': emsOutputRelayStatusOutputRelayName, 'emsOutputRelayStatusOutputRelayState': emsOutputRelayStatusOutputRelayState, 'emsOutputRelayStatusOutputRelayNormalState': emsOutputRelayStatusOutputRelayNormalState}


class emsOutletStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsOutletStatusOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 16, 1, 1])
	access = 2
	columns = {'emsOutletStatusOutletIndex': emsOutletStatusOutletIndex, 'emsOutletStatusOutletName': emsOutletStatusOutletName, 'emsOutletStatusOutletState': emsOutletStatusOutletState, 'emsOutletStatusOutletNormalState': emsOutletStatusOutletNormalState}


class emsAlarmDeviceStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsAlarmDeviceStatusDeviceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 17, 1, 1])
	access = 2
	columns = {'emsAlarmDeviceStatusDeviceIndex': emsAlarmDeviceStatusDeviceIndex, 'emsAlarmDeviceStatusDeviceName': emsAlarmDeviceStatusDeviceName, 'emsAlarmDeviceStatusDeviceState': emsAlarmDeviceStatusDeviceState}


class emsSensorStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([emsSensorStatusSensorIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 3, 18, 1, 1])
	access = 2
	columns = {'emsSensorStatusSensorIndex': emsSensorStatusSensorIndex, 'emsSensorStatusSensorSystemName': emsSensorStatusSensorSystemName, 'emsSensorStatusSensorName': emsSensorStatusSensorName, 'emsSensorStatusSensorState': emsSensorStatusSensorState, 'emsSensorStatusSensorNormalState': emsSensorStatusSensorNormalState, 'emsSensorStatusSensorAlarmDelay': emsSensorStatusSensorAlarmDelay}


class memModulesStatusTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memModulesStatusModuleNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 2, 1])
	access = 2
	columns = {'memModulesStatusModuleNumber': memModulesStatusModuleNumber, 'memModulesStatusModuleName': memModulesStatusModuleName, 'memModulesStatusModuleLocation': memModulesStatusModuleLocation, 'memModulesStatusModelNumber': memModulesStatusModelNumber, 'memModulesStatusSerialNumber': memModulesStatusSerialNumber, 'memModulesStatusFirmwareRev': memModulesStatusFirmwareRev, 'memModulesStatusHardwareRev': memModulesStatusHardwareRev}


class memModulesConfigTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memModulesConfigModuleNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 1, 4, 1])
	access = 2
	columns = {'memModulesConfigModuleNumber': memModulesConfigModuleNumber, 'memModulesConfigModuleName': memModulesConfigModuleName, 'memModulesConfigModuleLocation': memModulesConfigModuleLocation}


class memSensorsStatusTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memSensorsStatusModuleNumber, memSensorsStatusSensorNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 3, 1])
	access = 2
	columns = {'memSensorsStatusModuleNumber': memSensorsStatusModuleNumber, 'memSensorsStatusSensorNumber': memSensorsStatusSensorNumber, 'memSensorsStatusSensorName': memSensorsStatusSensorName, 'memSensorsStatusSensorLocation': memSensorsStatusSensorLocation, 'memSensorsTemperature': memSensorsTemperature, 'memSensorsHumidity': memSensorsHumidity, 'memSensorsCommStatus': memSensorsCommStatus, 'memSensorsAlarmStatus': memSensorsAlarmStatus}


class memSensorsConfigTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memSensorsConfigModuleNumber, memSensorsConfigSensorNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 2, 5, 1])
	access = 2
	columns = {'memSensorsConfigModuleNumber': memSensorsConfigModuleNumber, 'memSensorsConfigSensorNumber': memSensorsConfigSensorNumber, 'memSensorsName': memSensorsName, 'memSensorsLocation': memSensorsLocation, 'memSensorsAlarmGeneration': memSensorsAlarmGeneration, 'memSensorsTempMaxThresh': memSensorsTempMaxThresh, 'memSensorsTempHighThresh': memSensorsTempHighThresh, 'memSensorsTempLowThresh': memSensorsTempLowThresh, 'memSensorsTempMinThresh': memSensorsTempMinThresh, 'memSensorsTempThreshHysteresis': memSensorsTempThreshHysteresis, 'memSensorsTempShortDecRateThreshValue': memSensorsTempShortDecRateThreshValue, 'memSensorsTempShortDecRateThreshTime': memSensorsTempShortDecRateThreshTime, 'memSensorsTempShortIncRateThreshValue': memSensorsTempShortIncRateThreshValue, 'memSensorsTempShortIncRateThreshTime': memSensorsTempShortIncRateThreshTime, 'memSensorsTempLongDecRateThreshValue': memSensorsTempLongDecRateThreshValue, 'memSensorsTempLongDecRateThreshTime': memSensorsTempLongDecRateThreshTime, 'memSensorsTempLongIncRateThreshValue': memSensorsTempLongIncRateThreshValue, 'memSensorsTempLongIncRateThreshTime': memSensorsTempLongIncRateThreshTime, 'memSensorsHumidityMaxThresh': memSensorsHumidityMaxThresh, 'memSensorsHumidityHighThresh': memSensorsHumidityHighThresh, 'memSensorsHumidityLowThresh': memSensorsHumidityLowThresh, 'memSensorsHumidityMinThresh': memSensorsHumidityMinThresh, 'memSensorsHumidityThreshHysteresis': memSensorsHumidityThreshHysteresis}


class memInputsStatusTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memInputsStatusModuleNumber, memInputsStatusInputNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 2, 1])
	access = 2
	columns = {'memInputsStatusModuleNumber': memInputsStatusModuleNumber, 'memInputsStatusInputNumber': memInputsStatusInputNumber, 'memInputsStatusInputName': memInputsStatusInputName, 'memInputsStatusInputLocation': memInputsStatusInputLocation, 'memInputsStatusCurrentState': memInputsStatusCurrentState, 'memInputsStatusCurrentAnalogValue': memInputsStatusCurrentAnalogValue, 'memInputsStatusAlarmStatus': memInputsStatusAlarmStatus}


class memInputsConfigTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memInputsConfigModuleNumber, memInputsConfigInputNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 3, 4, 1])
	access = 2
	columns = {'memInputsConfigModuleNumber': memInputsConfigModuleNumber, 'memInputsConfigInputNumber': memInputsConfigInputNumber, 'memInputName': memInputName, 'memInputLocation': memInputLocation, 'memInputType': memInputType, 'memInputAlarmGeneration': memInputAlarmGeneration, 'memInputNormalState': memInputNormalState, 'memInputAbnormalSeverity': memInputAbnormalSeverity, 'memInputNumberCalibrationPoints': memInputNumberCalibrationPoints, 'memInputAnalogCalibrationPoint1': memInputAnalogCalibrationPoint1, 'memInputAnalogCalibrationPoint2': memInputAnalogCalibrationPoint2, 'memInputAnalogCalibrationPoint3': memInputAnalogCalibrationPoint3, 'memInputAnalogCalibrationPoint4': memInputAnalogCalibrationPoint4, 'memInputAnalogCalibrationPoint5': memInputAnalogCalibrationPoint5, 'memInputAnalogCalibrationPoint1Value': memInputAnalogCalibrationPoint1Value, 'memInputAnalogCalibrationPoint2Value': memInputAnalogCalibrationPoint2Value, 'memInputAnalogCalibrationPoint3Value': memInputAnalogCalibrationPoint3Value, 'memInputAnalogCalibrationPoint4Value': memInputAnalogCalibrationPoint4Value, 'memInputAnalogCalibrationPoint5Value': memInputAnalogCalibrationPoint5Value, 'memInputAnalogMeasurementUnits': memInputAnalogMeasurementUnits, 'memInputAnalogMaxThresh': memInputAnalogMaxThresh, 'memInputAnalogHighThresh': memInputAnalogHighThresh, 'memInputAnalogLowThresh': memInputAnalogLowThresh, 'memInputAnalogMinThresh': memInputAnalogMinThresh, 'memInputAnalogThreshHysteresis': memInputAnalogThreshHysteresis}


class memOutputStatusTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memOutputStatusModuleNumber, memOutputStatusOutputNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 2, 1])
	access = 2
	columns = {'memOutputStatusModuleNumber': memOutputStatusModuleNumber, 'memOutputStatusOutputNumber': memOutputStatusOutputNumber, 'memOutputStatusOutputName': memOutputStatusOutputName, 'memOutputStatusOutputLocation': memOutputStatusOutputLocation, 'memOutputStatusCurrentState': memOutputStatusCurrentState}


class memOutputConfigTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memOutputConfigModuleNumber, memOutputConfigOutputNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 4, 4, 1])
	access = 2
	columns = {'memOutputConfigModuleNumber': memOutputConfigModuleNumber, 'memOutputConfigOutputNumber': memOutputConfigOutputNumber, 'memOutputName': memOutputName, 'memOutputLocation': memOutputLocation, 'memOutputNormalState': memOutputNormalState, 'memOutputAction': memOutputAction}


class memOutletStatusTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memOutletStatusModuleNumber, memOutletStatusOutletNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 2, 1])
	access = 2
	columns = {'memOutletStatusModuleNumber': memOutletStatusModuleNumber, 'memOutletStatusOutletNumber': memOutletStatusOutletNumber, 'memOutletStatusOutletName': memOutletStatusOutletName, 'memOutletStatusOutletLocation': memOutletStatusOutletLocation, 'memOutletStatusCurrentState': memOutletStatusCurrentState}


class memOutletConfigTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memOutletConfigModuleNumber, memOutletConfigOutletNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 5, 4, 1])
	access = 2
	columns = {'memOutletConfigModuleNumber': memOutletConfigModuleNumber, 'memOutletConfigOutletNumber': memOutletConfigOutletNumber, 'memOutletName': memOutletName, 'memOutletLocation': memOutletLocation, 'memOutletNormalState': memOutletNormalState, 'memOutletAction': memOutletAction}


class memBeaconStatusTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memBeaconStatusModuleNumber, memBeaconStatusBeaconNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 2, 1])
	access = 2
	columns = {'memBeaconStatusModuleNumber': memBeaconStatusModuleNumber, 'memBeaconStatusBeaconNumber': memBeaconStatusBeaconNumber, 'memBeaconStatusBeaconName': memBeaconStatusBeaconName, 'memBeaconStatusBeaconLocation': memBeaconStatusBeaconLocation, 'memBeaconStatusCurrentState': memBeaconStatusCurrentState}


class memBeaconConfigTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([memBeaconConfigModuleNumber, memBeaconConfigBeaconNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 10, 4, 6, 4, 1])
	access = 2
	columns = {'memBeaconConfigModuleNumber': memBeaconConfigModuleNumber, 'memBeaconConfigBeaconNumber': memBeaconConfigBeaconNumber, 'memBeaconConfigName': memBeaconConfigName, 'memBeaconConfigLocation': memBeaconConfigLocation, 'memBeaconAction': memBeaconAction}


class rPDULoadDevBankEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDULoadDevBankIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 6, 1])
	access = 2
	columns = {'rPDULoadDevBankIndex': rPDULoadDevBankIndex, 'rPDULoadDevBankNumber': rPDULoadDevBankNumber, 'rPDULoadDevBankMaxLoad': rPDULoadDevBankMaxLoad}


class rPDULoadDevMaxOutletEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDULoadDevOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 1, 8, 1])
	access = 2
	columns = {'rPDULoadDevOutletIndex': rPDULoadDevOutletIndex, 'rPDULoadDevOutletNumber': rPDULoadDevOutletNumber, 'rPDULoadDevMaxOutletLoad': rPDULoadDevMaxOutletLoad}


class rPDULoadPhaseConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDULoadPhaseConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 2, 1, 1])
	access = 2
	columns = {'rPDULoadPhaseConfigIndex': rPDULoadPhaseConfigIndex, 'rPDULoadPhaseConfigLowLoadThreshold': rPDULoadPhaseConfigLowLoadThreshold, 'rPDULoadPhaseConfigNearOverloadThreshold': rPDULoadPhaseConfigNearOverloadThreshold, 'rPDULoadPhaseConfigOverloadThreshold': rPDULoadPhaseConfigOverloadThreshold, 'rPDULoadPhaseConfigAlarm': rPDULoadPhaseConfigAlarm}


class rPDULoadStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDULoadStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 3, 1, 1])
	access = 2
	columns = {'rPDULoadStatusIndex': rPDULoadStatusIndex, 'rPDULoadStatusLoad': rPDULoadStatusLoad, 'rPDULoadStatusLoadState': rPDULoadStatusLoadState, 'rPDULoadStatusPhaseNumber': rPDULoadStatusPhaseNumber, 'rPDULoadStatusBankNumber': rPDULoadStatusBankNumber}


class rPDULoadBankConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDULoadBankConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 2, 4, 1, 1])
	access = 2
	columns = {'rPDULoadBankConfigIndex': rPDULoadBankConfigIndex, 'rPDULoadBankConfigLowLoadThreshold': rPDULoadBankConfigLowLoadThreshold, 'rPDULoadBankConfigNearOverloadThreshold': rPDULoadBankConfigNearOverloadThreshold, 'rPDULoadBankConfigOverloadThreshold': rPDULoadBankConfigOverloadThreshold, 'rPDULoadBankConfigAlarm': rPDULoadBankConfigAlarm}


class rPDUOutletPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 2, 1, 1])
	access = 2
	columns = {'rPDUOutletPhaseIndex': rPDUOutletPhaseIndex, 'rPDUOutletPhaseOverloadRestriction': rPDUOutletPhaseOverloadRestriction}


class rPDUOutletControlEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletControlIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 3, 1, 1])
	access = 2
	columns = {'rPDUOutletControlIndex': rPDUOutletControlIndex, 'rPDUOutletControlOutletName': rPDUOutletControlOutletName, 'rPDUOutletControlOutletPhase': rPDUOutletControlOutletPhase, 'rPDUOutletControlOutletCommand': rPDUOutletControlOutletCommand, 'rPDUOutletControlOutletBank': rPDUOutletControlOutletBank}


class rPDUOutletConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletConfigIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 1, 1])
	access = 2
	columns = {'rPDUOutletConfigIndex': rPDUOutletConfigIndex, 'rPDUOutletConfigOutletName': rPDUOutletConfigOutletName, 'rPDUOutletConfigOutletPhase': rPDUOutletConfigOutletPhase, 'rPDUOutletConfigPowerOnTime': rPDUOutletConfigPowerOnTime, 'rPDUOutletConfigPowerOffTime': rPDUOutletConfigPowerOffTime, 'rPDUOutletConfigRebootDuration': rPDUOutletConfigRebootDuration, 'rPDUOutletConfigOutletBank': rPDUOutletConfigOutletBank}


class rPDUOutletConfigMonitoredEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletConfigMonitoredIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 4, 3, 1])
	access = 2
	columns = {'rPDUOutletConfigMonitoredIndex': rPDUOutletConfigMonitoredIndex, 'rPDUOutletConfigMonitoredName': rPDUOutletConfigMonitoredName, 'rPDUOutletConfigMonitoredNumber': rPDUOutletConfigMonitoredNumber, 'rPDUOutletConfigMonitoredLowLoadThreshold': rPDUOutletConfigMonitoredLowLoadThreshold, 'rPDUOutletConfigMonitoredNearOverloadThreshold': rPDUOutletConfigMonitoredNearOverloadThreshold, 'rPDUOutletConfigMonitoredOverloadThreshold': rPDUOutletConfigMonitoredOverloadThreshold}


class rPDUOutletStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 5, 1, 1])
	access = 2
	columns = {'rPDUOutletStatusIndex': rPDUOutletStatusIndex, 'rPDUOutletStatusOutletName': rPDUOutletStatusOutletName, 'rPDUOutletStatusOutletPhase': rPDUOutletStatusOutletPhase, 'rPDUOutletStatusOutletState': rPDUOutletStatusOutletState, 'rPDUOutletStatusCommandPending': rPDUOutletStatusCommandPending, 'rPDUOutletStatusOutletBank': rPDUOutletStatusOutletBank, 'rPDUOutletStatusLoad': rPDUOutletStatusLoad}


class rPDUOutletBankEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUOutletBankIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 3, 6, 1, 1])
	access = 2
	columns = {'rPDUOutletBankIndex': rPDUOutletBankIndex, 'rPDUOutletBankOverloadRestriction': rPDUOutletBankOverloadRestriction}


class rPDUStatusBankEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUStatusBankIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 2, 1])
	access = 2
	columns = {'rPDUStatusBankIndex': rPDUStatusBankIndex, 'rPDUStatusBankNumber': rPDUStatusBankNumber, 'rPDUStatusBankState': rPDUStatusBankState}


class rPDUStatusPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUStatusPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 4, 1])
	access = 2
	columns = {'rPDUStatusPhaseIndex': rPDUStatusPhaseIndex, 'rPDUStatusPhaseNumber': rPDUStatusPhaseNumber, 'rPDUStatusPhaseState': rPDUStatusPhaseState}


class rPDUStatusOutletEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rPDUStatusOutletIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 12, 5, 6, 1])
	access = 2
	columns = {'rPDUStatusOutletIndex': rPDUStatusOutletIndex, 'rPDUStatusOutletNumber': rPDUStatusOutletNumber, 'rPDUStatusOutletState': rPDUStatusOutletState}


class airFMIdentTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([airFMIdentModuleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 1, 3, 1])
	access = 2
	columns = {'airFMIdentModuleIndex': airFMIdentModuleIndex, 'airFMIdentModuleModelNumber': airFMIdentModuleModelNumber, 'airFMIdentModuleDateOfMfg': airFMIdentModuleDateOfMfg, 'airFMIdentModuleSerialNumber': airFMIdentModuleSerialNumber, 'airFMIdentModuleFirmwareRev': airFMIdentModuleFirmwareRev, 'airFMIdentModuleHardwareRev': airFMIdentModuleHardwareRev}


class airFMStatusModuleEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([airFMStatusModuleIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 1, 2, 20, 1])
	access = 2
	columns = {'airFMStatusModuleIndex': airFMStatusModuleIndex, 'airFMStatusModuleOutputCapacity': airFMStatusModuleOutputCapacity, 'airFMStatusModuleSupplyTempC': airFMStatusModuleSupplyTempC, 'airFMStatusModuleSupplyTempF': airFMStatusModuleSupplyTempF, 'airFMStatusModuleSupplyHum': airFMStatusModuleSupplyHum, 'airFMStatusModuleReturnTempC': airFMStatusModuleReturnTempC, 'airFMStatusModuleReturnTempF': airFMStatusModuleReturnTempF, 'airFMStatusModuleReturnHum': airFMStatusModuleReturnHum}


class airIRAlarmConditionsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([airIRAlarmConditionsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 13, 3, 1, 2, 1])
	access = 2
	columns = {'airIRAlarmConditionsIndex': airIRAlarmConditionsIndex, 'airIREventCode': airIREventCode, 'airIRAlarmDescription': airIRAlarmDescription}


class rARUIdentEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUIdentAruIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 1, 1, 1])
	access = 2
	columns = {'rARUIdentAruIndex': rARUIdentAruIndex, 'rARUIdentName': rARUIdentName}


class rARUConfigEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUConfigAruIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 2, 1, 1])
	access = 2
	columns = {'rARUConfigAruIndex': rARUConfigAruIndex, 'rARUConfigAruName': rARUConfigAruName, 'rARUConfigAruRemoteSetpoint': rARUConfigAruRemoteSetpoint, 'rARUConfigAruTempOvrdEnableDisable': rARUConfigAruTempOvrdEnableDisable, 'rARUConfigAruTempOvrdSetpoint': rARUConfigAruTempOvrdSetpoint, 'rARUConfigAruMasterControl': rARUConfigAruMasterControl}


class rARUStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUStatusAruIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 3, 3, 1])
	access = 2
	columns = {'rARUStatusAruIndex': rARUStatusAruIndex, 'rARUStatusAruName': rARUStatusAruName, 'rARUStatusAruRemoteSetpoint': rARUStatusAruRemoteSetpoint, 'rARUStatusAruManualSetpoint': rARUStatusAruManualSetpoint, 'rARUStatusAruTemp1': rARUStatusAruTemp1, 'rARUStatusAruTemp2': rARUStatusAruTemp2, 'rARUStatusAruTemp3': rARUStatusAruTemp3, 'rARUStatusAruTempOvrdEnableDisable': rARUStatusAruTempOvrdEnableDisable, 'rARUStatusAruTempOvrdSetpoint': rARUStatusAruTempOvrdSetpoint, 'rARUStatusAruAlarmState': rARUStatusAruAlarmState, 'rARUStatusAruCommStatus': rARUStatusAruCommStatus, 'rARUStatusAruTempOvrdStatus': rARUStatusAruTempOvrdStatus, 'rARUStatusAruMasterControl': rARUStatusAruMasterControl, 'rARUStatusAruTotalAirflow': rARUStatusAruTotalAirflow}


class rARUFanStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUFanStatusAruIndex, rARUFanStatusFanIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 4, 1, 1])
	access = 2
	columns = {'rARUFanStatusAruIndex': rARUFanStatusAruIndex, 'rARUFanStatusNominalFanSpeed': rARUFanStatusNominalFanSpeed, 'rARUFanStatusSelectedFanLevel': rARUFanStatusSelectedFanLevel, 'rARUFanStatusReplacementThreshold': rARUFanStatusReplacementThreshold, 'rARUFanStatusFanIndex': rARUFanStatusFanIndex, 'rARUFanStatusFanOperatingStatus': rARUFanStatusFanOperatingStatus, 'rARUFanStatusFanRpmSpeed': rARUFanStatusFanRpmSpeed, 'rARUFanStatusFanFlowRate': rARUFanStatusFanFlowRate, 'rARUFanStatusFanInServiceDate': rARUFanStatusFanInServiceDate, 'rARUFanStatusFanRunhourCounter': rARUFanStatusFanRunhourCounter, 'rARUFanStatusFanRunhourReset': rARUFanStatusFanRunhourReset}


class rARUPowerStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUPowerStatusAruIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 5, 1, 1])
	access = 2
	columns = {'rARUPowerStatusAruIndex': rARUPowerStatusAruIndex, 'rARUPowerStatusPrimaryAcPresent': rARUPowerStatusPrimaryAcPresent, 'rARUPowerStatusAuxiliaryAcPresent': rARUPowerStatusAuxiliaryAcPresent, 'rARUPowerStatusRedundantAcConfig': rARUPowerStatusRedundantAcConfig}


class rARUSensorsStatusTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUSensorsStatusAruIndex, rARUSensorsStatusSensorNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 2, 1])
	access = 2
	columns = {'rARUSensorsStatusAruIndex': rARUSensorsStatusAruIndex, 'rARUSensorsStatusSensorNumber': rARUSensorsStatusSensorNumber, 'rARUSensorsTemperature': rARUSensorsTemperature}


class rARUSensorsConfigTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([rARUSensorsConfigAruIndex, rARUSensorsConfigSensorNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 14, 6, 4, 1])
	access = 2
	columns = {'rARUSensorsConfigAruIndex': rARUSensorsConfigAruIndex, 'rARUSensorsConfigSensorNumber': rARUSensorsConfigSensorNumber, 'rARUSensorsName': rARUSensorsName, 'rARUSensorsLocation': rARUSensorsLocation, 'rARUSensorsTempMaxThresh': rARUSensorsTempMaxThresh, 'rARUSensorsTempHighThresh': rARUSensorsTempHighThresh, 'rARUSensorsTempLowThresh': rARUSensorsTempLowThresh, 'rARUSensorsTempMinThresh': rARUSensorsTempMinThresh, 'rARUSensorsTempThreshHysteresis': rARUSensorsTempThreshHysteresis, 'rARUSensorsTempShortDecRateThreshValue': rARUSensorsTempShortDecRateThreshValue, 'rARUSensorsTempShortDecRateThreshTime': rARUSensorsTempShortDecRateThreshTime, 'rARUSensorsTempShortIncRateThreshValue': rARUSensorsTempShortIncRateThreshValue, 'rARUSensorsTempShortIncRateThreshTime': rARUSensorsTempShortIncRateThreshTime, 'rARUSensorsTempLongDecRateThreshValue': rARUSensorsTempLongDecRateThreshValue, 'rARUSensorsTempLongDecRateThreshTime': rARUSensorsTempLongDecRateThreshTime, 'rARUSensorsTempLongIncRateThreshValue': rARUSensorsTempLongIncRateThreshValue, 'rARUSensorsTempLongIncRateThreshTime': rARUSensorsTempLongIncRateThreshTime}


class xPDUMainInputVoltagePhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUMainInputVoltagePhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 1, 4, 1])
	access = 2
	columns = {'xPDUMainInputVoltagePhaseIndex': xPDUMainInputVoltagePhaseIndex, 'xPDUMainInputVoltageLtoL': xPDUMainInputVoltageLtoL, 'xPDUMainInputVoltageLtoN': xPDUMainInputVoltageLtoN}


class xPDUBypassInputVoltagePhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUBypassInputVoltagePhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 2, 4, 1])
	access = 2
	columns = {'xPDUBypassInputVoltagePhaseIndex': xPDUBypassInputVoltagePhaseIndex, 'xPDUBypassInputVoltageLtoL': xPDUBypassInputVoltageLtoL, 'xPDUBypassInputVoltageLtoN': xPDUBypassInputVoltageLtoN}


class xPDUUPSInputVoltagePhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUUPSInputVoltagePhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 3, 2, 1])
	access = 2
	columns = {'xPDUUPSInputVoltagePhaseIndex': xPDUUPSInputVoltagePhaseIndex, 'xPDUUPSInputVoltageLtoNPresent': xPDUUPSInputVoltageLtoNPresent}


class xPDUSystemOutputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUSystemOutputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 3, 4, 14, 1])
	access = 2
	columns = {'xPDUSystemOutputPhaseIndex': xPDUSystemOutputPhaseIndex, 'xPDUSystemOutputVoltageLtoL': xPDUSystemOutputVoltageLtoL, 'xPDUSystemOutputVoltageLtoN': xPDUSystemOutputVoltageLtoN, 'xPDUSystemOutputPhaseCurrent': xPDUSystemOutputPhaseCurrent, 'xPDUSystemOutputPower': xPDUSystemOutputPower, 'xPDUSystemOutputApparentPower': xPDUSystemOutputApparentPower, 'xPDUSystemOutputPowerFactor': xPDUSystemOutputPowerFactor}


class xPDUSystemBreakerTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUSystemBreakerTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 1, 2, 1])
	access = 2
	columns = {'xPDUSystemBreakerTableIndex': xPDUSystemBreakerTableIndex, 'xPDUSystemBreakerDescription': xPDUSystemBreakerDescription, 'xPDUSystemBreakerPosition': xPDUSystemBreakerPosition}


class xPDUBranchBreakerEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUBranchBreakerTableIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 4, 2, 3, 1])
	access = 2
	columns = {'xPDUBranchBreakerTableIndex': xPDUBranchBreakerTableIndex, 'xPDUBranchBreakerRating': xPDUBranchBreakerRating, 'xPDUBranchBreakerRDPFeed': xPDUBranchBreakerRDPFeed, 'xPDUBranchBreakerTieIndicator': xPDUBranchBreakerTieIndicator, 'xPDUBranchBreakerCurrent': xPDUBranchBreakerCurrent, 'xPDUBranchBreakerOverCurrentThreshold': xPDUBranchBreakerOverCurrentThreshold, 'xPDUBranchBreakerUnderCurrentThreshold': xPDUBranchBreakerUnderCurrentThreshold, 'xPDUBranchBreakerMaxCurrentThreshold': xPDUBranchBreakerMaxCurrentThreshold, 'xPDUBranchBreakerMinCurrentThreshold': xPDUBranchBreakerMinCurrentThreshold, 'xPDUBranchBreakerName': xPDUBranchBreakerName, 'xPDUBranchBreakerLocation': xPDUBranchBreakerLocation}


class xPDUInputContactEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUInputContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 5, 3, 1])
	access = 2
	columns = {'xPDUInputContactNumber': xPDUInputContactNumber, 'xPDUInputContactName': xPDUInputContactName, 'xPDUInputContactNormalState': xPDUInputContactNormalState, 'xPDUInputContactCurrentState': xPDUInputContactCurrentState}


class xPDUOutputRelayEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xPDUOutputRelayNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 15, 6, 3, 1])
	access = 2
	columns = {'xPDUOutputRelayNumber': xPDUOutputRelayNumber, 'xPDUOutputRelayName': xPDUOutputRelayName, 'xPDUOutputRelayNormalState': xPDUOutputRelayNormalState, 'xPDUOutputRelayCurrentState': xPDUOutputRelayCurrentState}


class battManUnitCalibTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManUnitCalibIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 3, 2, 1])
	access = 2
	columns = {'battManUnitCalibIndex': battManUnitCalibIndex, 'battManUnitSerialNumber': battManUnitSerialNumber, 'battManBatteryVoltageZeroCalib': battManBatteryVoltageZeroCalib, 'battManBatteryVoltageSpanCalib': battManBatteryVoltageSpanCalib}


class battManStringCalibTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManStringCalibIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 4, 2, 1])
	access = 2
	columns = {'battManStringCalibIndex': battManStringCalibIndex, 'battManDCCurrentZeroCalib': battManDCCurrentZeroCalib, 'battManACCurrentZeroCalib': battManACCurrentZeroCalib, 'battManProbeRange': battManProbeRange}


class battManString1BatteryCalibTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManString1BatteryCalibIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5, 2, 1])
	access = 2
	columns = {'battManString1BatteryCalibIndex': battManString1BatteryCalibIndex, 'battManString1BatteryInterTierOhmicValue': battManString1BatteryInterTierOhmicValue}


class battManString2BatteryCalibTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManString2BatteryCalibIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 5, 4, 1])
	access = 2
	columns = {'battManString2BatteryCalibIndex': battManString2BatteryCalibIndex, 'battManString2BatteryInterTierOhmicValue': battManString2BatteryInterTierOhmicValue}


class battManStringTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManStringIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 9, 2, 1])
	access = 2
	columns = {'battManStringIndex': battManStringIndex, 'battManStringCurrent': battManStringCurrent, 'battManStringRippleCurrent': battManStringRippleCurrent, 'battManStringChargerHighVoltageAlarm': battManStringChargerHighVoltageAlarm, 'battManStringChargerLowVoltageAlarm': battManStringChargerLowVoltageAlarm, 'battManStringCurrentProbeDisconnected': battManStringCurrentProbeDisconnected, 'battManStringOnBattery': battManStringOnBattery}


class battManString1BatteryTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManString1BatteryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 2, 1])
	access = 2
	columns = {'battManString1BatteryIndex': battManString1BatteryIndex, 'battManString1BatteryVoltage': battManString1BatteryVoltage, 'battManString1BatteryLowestVoltage': battManString1BatteryLowestVoltage, 'battManString1BatteryCellShorted': battManString1BatteryCellShorted, 'battManString1BatteryOpenFuseOrConnection': battManString1BatteryOpenFuseOrConnection, 'battManString1BatteryLowCapacity': battManString1BatteryLowCapacity, 'battManString1BatteryHighOhmicValue': battManString1BatteryHighOhmicValue, 'battManString1BatteryThermalRunaway': battManString1BatteryThermalRunaway, 'battManString1BatteryDryout': battManString1BatteryDryout}


class battManString2BatteryTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManString2BatteryIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 10, 4, 1])
	access = 2
	columns = {'battManString2BatteryIndex': battManString2BatteryIndex, 'battManString2BatteryVoltage': battManString2BatteryVoltage, 'battManString2BatteryLowestVoltage': battManString2BatteryLowestVoltage, 'battManString2BatteryCellShorted': battManString2BatteryCellShorted, 'battManString2BatteryOpenFuseOrConnection': battManString2BatteryOpenFuseOrConnection, 'battManString2BatteryLowCapacity': battManString2BatteryLowCapacity, 'battManString2BatteryHighOhmicValue': battManString2BatteryHighOhmicValue, 'battManString2BatteryThermalRunaway': battManString2BatteryThermalRunaway, 'battManString2BatteryDryout': battManString2BatteryDryout}


class battManInputContactTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManInputContactIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 11, 2, 1])
	access = 2
	columns = {'battManInputContactIndex': battManInputContactIndex, 'battManInputContactName': battManInputContactName, 'battManInputContactAlarmState': battManInputContactAlarmState, 'battManInputContactState': battManInputContactState, 'battManInputContactNormalState': battManInputContactNormalState, 'battManInputContactAlarmDelay': battManInputContactAlarmDelay}


class battManString1OhmicValueTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManString1OhmicValueIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 3, 1])
	access = 2
	columns = {'battManString1OhmicValueIndex': battManString1OhmicValueIndex, 'battManString1OhmicValueData': battManString1OhmicValueData}


class battManString1ResponseTestChangeTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManString1ResponseTestChangeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 5, 1])
	access = 2
	columns = {'battManString1ResponseTestChangeIndex': battManString1ResponseTestChangeIndex, 'battManString1ResponseTestChangeData': battManString1ResponseTestChangeData}


class battManString2OhmicValueTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManString2OhmicValueIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 8, 1])
	access = 2
	columns = {'battManString2OhmicValueIndex': battManString2OhmicValueIndex, 'battManString2OhmicValueData': battManString2OhmicValueData}


class battManString2ResponseTestChangeTableEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([battManString2ResponseTestChangeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 16, 13, 10, 1])
	access = 2
	columns = {'battManString2ResponseTestChangeIndex': battManString2ResponseTestChangeIndex, 'battManString2ResponseTestChangeData': battManString2ResponseTestChangeData}


class xATSSwitchTimersEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSSwitchTimersIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 3, 2, 1])
	access = 2
	columns = {'xATSSwitchTimersIndex': xATSSwitchTimersIndex, 'xATSSwitchTimersName': xATSSwitchTimersName, 'xATSSwitchTimersAbort': xATSSwitchTimersAbort, 'xATSSwitchTimersStatus': xATSSwitchTimersStatus, 'xATSSwitchTimersRemainingTime': xATSSwitchTimersRemainingTime, 'xATSSwitchTimersDelaySetting': xATSSwitchTimersDelaySetting}


class xATSSwitchBlockMapEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSSwitchBlockMapIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 4, 2, 1])
	access = 2
	columns = {'xATSSwitchBlockMapIndex': xATSSwitchBlockMapIndex, 'xATSSwitchBlockMapName': xATSSwitchBlockMapName, 'xATSSwitchBlockMapStatus': xATSSwitchBlockMapStatus, 'xATSSwitchBlockMapSetting': xATSSwitchBlockMapSetting}


class xATSSwitchStatisticsEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSSwitchStatisticsIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 3, 5, 2, 1])
	access = 2
	columns = {'xATSSwitchStatisticsIndex': xATSSwitchStatisticsIndex, 'xATSSwitchStatisticsName': xATSSwitchStatisticsName, 'xATSSwitchStatisticsValue': xATSSwitchStatisticsValue, 'xATSSwitchStatisticsReset': xATSSwitchStatisticsReset}


class xATSSource1PhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSSource1Index], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 1, 7, 1])
	access = 2
	columns = {'xATSSource1Index': xATSSource1Index, 'xATSSource1VoltageLtoL': xATSSource1VoltageLtoL, 'xATSSource1VoltageLtoN': xATSSource1VoltageLtoN}


class xATSSource2PhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSSource2Index], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 2, 7, 1])
	access = 2
	columns = {'xATSSource2Index': xATSSource2Index, 'xATSSource2VoltageLtoL': xATSSource2VoltageLtoL, 'xATSSource2VoltageLtoN': xATSSource2VoltageLtoN}


class xATSSystemOutputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSSystemOutputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 4, 3, 12, 1])
	access = 2
	columns = {'xATSSystemOutputPhaseIndex': xATSSystemOutputPhaseIndex, 'xATSSystemOutputVoltageLtoL': xATSSystemOutputVoltageLtoL, 'xATSSystemOutputVoltageLtoN': xATSSystemOutputVoltageLtoN, 'xATSSystemOutputPhaseCurrent': xATSSystemOutputPhaseCurrent, 'xATSSystemOutputPower': xATSSystemOutputPower, 'xATSSystemOutputApparentPower': xATSSystemOutputApparentPower, 'xATSSystemOutputPowerFactor': xATSSystemOutputPowerFactor}


class xATSInputContactEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSInputContactNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 6, 3, 1])
	access = 2
	columns = {'xATSInputContactNumber': xATSInputContactNumber, 'xATSInputContactName': xATSInputContactName, 'xATSInputContactNormalState': xATSInputContactNormalState, 'xATSInputContactCurrentState': xATSInputContactCurrentState}


class xATSOutputRelayEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSOutputRelayNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 17, 7, 3, 1])
	access = 2
	columns = {'xATSOutputRelayNumber': xATSOutputRelayNumber, 'xATSOutputRelayName': xATSOutputRelayName, 'xATSOutputRelayNormalState': xATSOutputRelayNormalState, 'xATSOutputRelayCurrentState': xATSOutputRelayCurrentState}


class xATSGeneratorOutputPhaseEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([xATSGeneratorOutputPhaseIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 18, 1, 4, 6, 1])
	access = 2
	columns = {'xATSGeneratorOutputPhaseIndex': xATSGeneratorOutputPhaseIndex, 'xATSGeneratorOutputVoltageLtoL': xATSGeneratorOutputVoltageLtoL, 'xATSGeneratorOutputVoltageLtoN': xATSGeneratorOutputVoltageLtoN, 'xATSGeneratorOutputPhaseCurrent': xATSGeneratorOutputPhaseCurrent, 'xATSGeneratorOutputPower': xATSGeneratorOutputPower, 'xATSGeneratorOutputApparentPower': xATSGeneratorOutputApparentPower, 'xATSGeneratorOutputPowerFactor': xATSGeneratorOutputPowerFactor}


class cpsCardIdentEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([cpsCardIdentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 2, 1])
	access = 2
	columns = {'cpsCardIdentIndex': cpsCardIdentIndex, 'cpsCardIdentProd': cpsCardIdentProd, 'cpsCardIdentMan': cpsCardIdentMan, 'cpsCardIdentFunc': cpsCardIdentFunc, 'cpsCardIdentPCI': cpsCardIdentPCI}


class cpsCardConfEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([cpsCardConfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 3, 1])
	access = 2
	columns = {'cpsCardConfIndex': cpsCardConfIndex, 'cpsCardConfPower': cpsCardConfPower, 'cpsCardConfType': cpsCardConfType, 'cpsCardConfInter': cpsCardConfInter, 'cpsCardConfFunc': cpsCardConfFunc, 'cpsCardConfCardv': cpsCardConfCardv, 'cpsCardConfPort1': cpsCardConfPort1, 'cpsCardConfPort2': cpsCardConfPort2}


class cpsCardStatusEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([cpsCardStatusIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 1, 4, 4, 1])
	access = 2
	columns = {'cpsCardStatusIndex': cpsCardStatusIndex, 'cpsCardStatusCard': cpsCardStatusCard, 'cpsCardStatusFunc': cpsCardStatusFunc}


class cpsgroupEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([cpsGroupIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 1, 11, 1])
	access = 2
	columns = {'cpsGroupIndex': cpsGroupIndex, 'cpsGroupName': cpsGroupName, 'cpsGroupUsers': cpsGroupUsers}


class cpssportEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([cpsSPortNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 2, 6, 2, 1, 1])
	access = 2
	columns = {'cpsSPortNumber': cpsSPortNumber, 'cpsSPortTty': cpsSPortTty, 'cpsSPortName': cpsSPortName, 'cpsSPortSpeed': cpsSPortSpeed, 'cpsSPortDataSize': cpsSPortDataSize, 'cpsSPortStopBits': cpsSPortStopBits, 'cpsSPortParity': cpsSPortParity, 'cpsSPortFlowCtrl': cpsSPortFlowCtrl, 'cpsSPortDTRdelay': cpsSPortDTRdelay, 'cpsSPortDCDCtrl': cpsSPortDCDCtrl, 'cpsSPortLogUtmp': cpsSPortLogUtmp, 'cpsSPortLogWtmp': cpsSPortLogWtmp, 'cpsSPortLogform': cpsSPortLogform, 'cpsSPortAuthtype': cpsSPortAuthtype, 'cpsSPortAuthSrv1': cpsSPortAuthSrv1, 'cpsSPortAccSrv1': cpsSPortAccSrv1, 'cpsSPortAuthTmo': cpsSPortAuthTmo, 'cpsSPortAuthRetr': cpsSPortAuthRetr, 'cpsSPortAuthSrv2': cpsSPortAuthSrv2, 'cpsSPortAccSrv2': cpsSPortAccSrv2, 'cpsSPortAuthSecret': cpsSPortAuthSecret, 'cpsSPortAuthRadP': cpsSPortAuthRadP, 'cpsSPortAuthAcc': cpsSPortAuthAcc, 'cpsSPortProtocol': cpsSPortProtocol, 'cpsSPortRemoteIP': cpsSPortRemoteIP, 'cpsSPortSocketPort': cpsSPortSocketPort, 'cpsSPortRemHost': cpsSPortRemHost, 'cpsSPortBanner': cpsSPortBanner, 'cpsSPortPrompt': cpsSPortPrompt, 'cpsSPortTermType': cpsSPortTermType, 'cpsSPortAutomUsr': cpsSPortAutomUsr, 'cpsSPortNetMask': cpsSPortNetMask, 'cpsSPortPppMtu': cpsSPortPppMtu, 'cpsSPortPppMru': cpsSPortPppMru, 'cpsSPortPppOptions': cpsSPortPppOptions, 'cpsSPortPppFoption': cpsSPortPppFoption, 'cpsSPortModemChat': cpsSPortModemChat, 'cpsSPortSttyCmd': cpsSPortSttyCmd, 'cpsSPortSockTx': cpsSPortSockTx, 'cpsSPortSockPoll': cpsSPortSockPoll, 'cpsSPortSockIdle': cpsSPortSockIdle, 'cpsSPortDBsize': cpsSPortDBsize, 'cpsSPortDBtime': cpsSPortDBtime, 'cpsSPortDBmode': cpsSPortDBmode, 'cpsSPortDBsyslog': cpsSPortDBsyslog, 'cpsSPortDBmenu': cpsSPortDBmenu, 'cpsSPortDBalarm': cpsSPortDBalarm, 'cpsSPortSSHbreak': cpsSPortSSHbreak, 'cpsSPortSniffSess': cpsSPortSniffSess, 'cpsSPortSniffAdm': cpsSPortSniffAdm, 'cpsSPortSniffEsc': cpsSPortSniffEsc, 'cpsSPortSniffMsess': cpsSPortSniffMsess, 'cpsSPortTelnetMode': cpsSPortTelnetMode, 'cpsSPortSysBufSess': cpsSPortSysBufSess, 'cpsSPortLFSuppress': cpsSPortLFSuppress, 'cpsSPortAutoInput': cpsSPortAutoInput, 'cpsSPortAutoOutput': cpsSPortAutoOutput, 'cpsSPortBreakInterval': cpsSPortBreakInterval}


class cpsisPortEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([cpsISPortNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 1, 19, 1, 3, 1, 1])
	access = 2
	columns = {'cpsISPortNumber': cpsISPortNumber, 'cpsISPortTty': cpsISPortTty, 'cpsISPortName': cpsISPortName, 'cpsISPortSpeed': cpsISPortSpeed, 'cpsISPortTxBytes': cpsISPortTxBytes, 'cpsISPortRXBytes': cpsISPortRXBytes, 'cpsISPortErrFrame': cpsISPortErrFrame, 'cpsISPortErrParity': cpsISPortErrParity, 'cpsISPortErrBreaks': cpsISPortErrBreaks, 'cpsISPortErrOverrun': cpsISPortErrOverrun, 'cpsISPortSigDTR': cpsISPortSigDTR, 'cpsISPortSigCD': cpsISPortSigCD, 'cpsISPortSigDSR': cpsISPortSigDSR, 'cpsISPortSigRTS': cpsISPortSigRTS, 'cpsISPortSigCTS': cpsISPortSigCTS, 'cpsISPortSigRI': cpsISPortSigRI}


class powerNetSoftwareEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([moduleNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 1, 2, 1, 2, 2, 1])
	access = 2
	columns = {'moduleNumber': moduleNumber, 'moduleName': moduleName, 'moduleVersion': moduleVersion, 'moduleDate': moduleDate}


class mconfigTrapReceiverEntry(RowObject):
	status = 3
	index = pycopia.SMI.Objects.IndexObjects([trapIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 2, 1, 2, 1])
	access = 2
	columns = {'trapIndex': trapIndex, 'receiverAddr': receiverAddr, 'communityString': communityString, 'severity': severity, 'acceptThisReceiver': acceptThisReceiver, 'receiveTrapType': receiveTrapType}


# notifications (traps) 
class communicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 1])

class upsOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 2])

class upsDiagnosticsFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 3])

class upsDischarged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 4])

class upsOnBattery(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 5])

class smartBoostOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 6])

class lowBattery(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 7])

class communicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 8])

class powerRestored(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 9])

class upsDiagnosticsPassed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 10])

class returnFromLowBattery(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 11])

class upsTurnedOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 12])

class upsSleeping(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 13])

class upsWokeUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 14])

class upsRebootStarted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 15])

class upsDipSwitchChanged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 16])

class upsBatteryNeedsReplacement(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 17])

class contactFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 18])

class contactFaultResolved(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 19])

class hardwareFailureBypass(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 20])

class softwareBypass(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 21])

class switchedBypass(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 22])

class returnFromBypass(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 23])

class bypassPowerSupplyFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 24])

class baseFanFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 25])

class batteryPackCommLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 26])

class batteryPackCommEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 27])

class calibrationStart(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 28])

class restartAgent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 29])

class upsTurnedOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 30])

class smartAvrReducing(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 31])

class codeAuthenticationDone(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 32])

class upsOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 33])

class smartBoostOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 34])

class smartAvrReducingOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 35])

class upsBatteryReplaced(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 36])

class calibrationEnd(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 37])

class dischargeCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 38])

class gracefullShutdown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 39])

class outletOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 41])

class outletOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 42])

class outletReboot(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 43])

class configChangeSNMP(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 44])

class configChangeOutlet(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 45])

class accessViolationConsole(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 46])

class accessViolationHTTP(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 47])

class passwordChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 48])

class badVoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 49])

class badVoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 50])

class chargerFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 51])

class chargerFailureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 52])

class batteryOverTemperature(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 53])

class batteryOverTemperatureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 54])

class smartRelayFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 55])

class smartRelayFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 56])

class humidityThresholdViolation1(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 57])

class humidityThresholdViolationCleared1(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 58])

class temperatureThresholdViolation1(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 59])

class temperatureThresholdViolationCleared1(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 60])

class humidityThresholdViolation2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 61])

class humidityThresholdViolationCleared2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 62])

class temperatureThresholdViolation2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 63])

class temperatureThresholdViolationCleared2(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 64])

class mupsCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 65])

class mupsCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 66])

class batteryIncrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 67])

class batteryDecrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 68])

class powerModuleIncrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 69])

class powerModuleDecrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 70])

class intelligenceModuleInserted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 71])

class intelligenceModuleRemoved(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 72])

class rintelligenceModuleInserted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 73])

class rintelligenceModuleRemoved(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 74])

class extBatteryFrameIncease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 75])

class extBatteryFrameDecrease(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 76])

class abnormalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 77])

class abnormalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 78])

class deviceStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 79])

class noBatteries(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 80])

class noBatteriesCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 81])

class userAdded(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 82])

class userDeleted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 83])

class userModified(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 84])

class msvmCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 85])

class msvmCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 86])

class msvmOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 87])

class msvmOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 88])

class msvmOutletOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 89])

class msvmOutletOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 90])

class msvmDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 91])

class msvmOutletConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 92])

class msvmLowLoad(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 93])

class msvmLowLoadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 94])

class msvmNearOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 95])

class msvmNearOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 96])

class msvmPowerSupplyStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 97])

class mspCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 98])

class mspCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 99])

class mspOutletOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 100])

class mspOutletOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 101])

class mspDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 102])

class mspOutletConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 103])

class rsSourceSwitched(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 104])

class rsLostRedundancy(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 105])

class rsRedundancyRestored(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 106])

class rsConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 107])

class rsCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 108])

class rsCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 109])

class dcCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 110])

class dcCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 111])

class dcPINChanged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 112])

class dcMajorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 113])

class dcMajorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 114])

class dcMinorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 115])

class dcMinorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 116])

class dcOutputRelayOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 117])

class dcOutputRelayOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 118])

class dcInputRelayOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 119])

class dcInputRelayOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 120])

class logicPowerSuppliesIncreased(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 121])

class logicPowerSuppliesDecreased(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 122])

class externalSwitchGearClosed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 123])

class externalSwitchGearOpened(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 124])

class generalDeviceEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 125])

class atsSourceSwitched(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 126])

class atsLostRedundancy(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 127])

class atsRedundancyRestored(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 128])

class atsConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 129])

class atsCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 130])

class atsCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 131])

class atsOverCurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 132])

class atsOverCurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 133])

class atsPowerSupplyFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 134])

class atsPowerSupplyFailureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 135])

class dcMainsFailAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 136])

class dcMainsFailAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 137])

class dcFanFailAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 138])

class dcFanFailAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 139])

class dcRectifierOvertempAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 140])

class dcRectifierOvertempAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 141])

class dcCurrentLimitAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 142])

class dcCurrentLimitAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 143])

class dcRectifierFailAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 144])

class dcRectifierFailAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 145])

class dcMultRectFailAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 146])

class dcMultRectFailAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 147])

class dcBatteryBreakerAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 148])

class dcBatteryBreakerAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 149])

class dcRectifierOVPAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 150])

class dcRectifierOVPAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 151])

class dcLVDImminentAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 152])

class dcLVDImminentAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 153])

class dcFuseCBAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 154])

class dcFuseCBAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 155])

class dcBatteryTestFail(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 156])

class dcTemperatureAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 157])

class dcTemperatureAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 158])

class dcHumidityAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 159])

class dcHumidityAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 160])

class dcBBCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 161])

class dcBBCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 162])

class iemHighTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 163])

class iemHighTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 164])

class iemLowTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 165])

class iemLowTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 166])

class iemHighHumidThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 167])

class iemHighHumidThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 168])

class iemLowHumidThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 169])

class iemLowHumidThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 170])

class iemProbeDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 171])

class iemProbeConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 172])

class iemContactFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 173])

class iemContactFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 174])

class iemRelayFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 175])

class iemRelayFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 176])

class bmBatManCommEstab(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 177])

class bmBatManCommLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 178])

class bmBatManKneeAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 179])

class bmBatManKneeAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 180])

class bmBatManChargerAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 181])

class bmBatManChargerAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 182])

class bmBatManBatteryAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 183])

class bmBatManBatteryAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 184])

class bmBatManEnvironmentAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 185])

class bmBatManEnvironmentAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 186])

class bmBatManMaintenanceAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 187])

class bmBatManMaintenanceAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 188])

class pduCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 189])

class pduCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 190])

class pduUtilityLineUndervoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 191])

class pduUtilityLineUndervoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 192])

class pduUtilityLineOvervoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 193])

class pduUtilityLineOvervoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 194])

class pduGroundOvercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 195])

class pduGroundOvercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 196])

class pduCircuitPanelInputUndervoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 197])

class pduCircuitPanelInputUndervoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 198])

class pduCircuitPanelInputOvervoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 199])

class pduCircuitPanelInputOvervoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 200])

class pduCircuitPanelInputUndercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 201])

class pduCircuitPanelInputUndercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 202])

class pduCircuitPanelInputOvercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 203])

class pduCircuitPanelInputOvercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 204])

class pduCircuitPanelFrequencyOutOfRange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 205])

class pduCircuitPanelFrequencyOutofRangeCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 206])

class pduCircuitPanelNeutralOvercurrent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 207])

class pduCircuitPanelNeutralOvercurrentCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 208])

class pduSystemOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 209])

class pduOnBatteryMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 210])

class pduMaintenanceBypassMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 211])

class pduAtypicalBypassMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 212])

class pduNoPanelFeedMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 213])

class pduUpsOperationMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 214])

class pduForcedBypassMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 215])

class pduInputTransformerOverTemperature(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 216])

class pduInputTransformerOverTemperatureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 217])

class pduUPSInputVoltageLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 218])

class pduUPSInputVoltageRestored(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 219])

class pduContactFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 220])

class pduContactFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 221])

class rPDUBankPhaseLowLoad(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 222])

class rPDUBankPhaseLowLoadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 223])

class rPDUBankPhaseNearOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 224])

class rPDUBankPhaseNearOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 225])

class rPDUBankPhaseOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 226])

class rPDUBankPhaseOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 227])

class aruDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 228])

class rmPDUCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 229])

class emsCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 230])

class emsCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 231])

class emsProbeConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 232])

class emsProbeDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 233])

class emsSensorConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 234])

class emsSensorDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 235])

class emsSensorFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 236])

class emsSensorFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 237])

class emsBeaconConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 238])

class emsBeaconDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 239])

class emsBeaconOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 240])

class emsBeaconOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 241])

class emsMajorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 242])

class emsMajorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 243])

class emsMinorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 244])

class emsMinorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 245])

class emsOutletStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 246])

class emsOutletStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 247])

class emsInputContactStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 248])

class emsInputContactStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 249])

class emsOutputRelayStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 250])

class emsOutputRelayStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 251])

class emsDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 252])

class envHighTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 253])

class envHighTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 254])

class envLowTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 255])

class envLowTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 256])

class envHighHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 257])

class envHighHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 258])

class envLowHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 259])

class envLowHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 260])

class rPDUCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 266])

class rPDUCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 267])

class rPDUOutletOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 268])

class rPDUOutletOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 269])

class rPDUDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 270])

class rPDUOutletConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 271])

class rPDULowLoad(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 272])

class rPDULowLoadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 273])

class rPDUNearOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 274])

class rPDUNearOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 275])

class rPDUOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 276])

class rPDUOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 277])

class rPDUPowerSupply1Fail(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 278])

class rPDUPowerSupply1Ok(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 279])

class rPDUPowerSupply2Fail(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 280])

class rPDUPowerSupply2Ok(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 281])

class rPDUPhaseConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 282])

class rPDUCancelPendingCommand(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 283])

class aruAlinkCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 284])

class aruAlinkCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 285])

class aruFanFail(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 286])

class aruFanFailCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 287])

class aruSmokeAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 288])

class aruSmokeAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 289])

class aruHighTemperatureAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 290])

class aruHighTemperatureAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 291])

class aruExhaustTemperatureAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 292])

class aruExhaustTemperatureAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 293])

class envAlinkCommunicationEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 294])

class envAlinkCommunicationLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 295])

class emsAlinkPowerOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 296])

class emsAlinkPowerOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 297])

class upsOutletGroupTurnedOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 298])

class upsOutletGroupTurnedOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 299])

class smwCriticalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 300])

class smwCriticalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 301])

class smwWarningCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 302])

class smwWarningConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 303])

class smwInformationalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 304])

class smwInformationalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 305])

class airCriticalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 306])

class airCriticalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 307])

class airWarningCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 308])

class airWarningConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 309])

class airInformationalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 310])

class airInformationalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 311])

class xPDUInputVoltageLowAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 312])

class xPDUInputVoltageLowAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 313])

class xPDUInputVoltageHighAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 314])

class xPDUInputVoltageHighAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 315])

class xPDUBypassVoltageLowAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 316])

class xPDUBypassVoltageLowAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 317])

class xPDUBypassVoltageHighAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 318])

class xPDUBypassVoltageHighAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 319])

class xPDUOutputVoltageLowAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 320])

class xPDUOutputVoltageLowAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 321])

class xPDUOutputVoltageHighAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 322])

class xPDUOutputVoltageHighAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 323])

class xPDUOutputCurrentLowAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 324])

class xPDUOutputCurrentLowAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 325])

class xPDUOutputCurrentHighAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 326])

class xPDUOutputCurrentHighAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 327])

class xPDUOutputFrequencyAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 328])

class xPDUOutputFrequencyAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 329])

class xPDUSystemGroundCurrentAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 330])

class xPDUSystemGroundCurrentAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 331])

class xPDUInputContactStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 332])

class xPDUInputContactStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 333])

class xPDUOutputNeutralCurrentHighAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 334])

class xPDUOutputNeutralCurrentHighAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 335])

class xPDUCoolingFanAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 336])

class xPDUCoolingFanAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 337])

class xPDUTransformerTempAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 338])

class xPDUTransformerTempAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 339])

class xPDUBranchCurrentLowAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 340])

class xPDUBranchCurrentLowAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 341])

class xPDUBranchCurrentHighAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 342])

class xPDUBranchCurrentHighAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 343])

class xPDUInternalCommError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 344])

class emsHardwareStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 345])

class emsHardwareStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 346])

class ceSevereCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 347])

class ceSevereConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 348])

class ceWarningCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 349])

class ceWarningConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 350])

class ceInformationalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 351])

class ceInformationalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 352])

class upsInternalOverTemperature(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 353])

class upsInternalOverTemperatureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 354])

class upsMpuReset(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 355])

class upsOutputSwitchClosed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 356])

class upsOutputSwitchOpened(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 357])

class upsCalibrationStackChanged(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 358])

class envMaxTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 359])

class envMaxTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 360])

class envMinTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 361])

class envMinTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 362])

class envMaxHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 363])

class envMaxHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 364])

class envMinHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 365])

class envMinHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 366])

class envSTIncTempRateViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 367])

class envSTIncTempRateViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 368])

class envSTDecTempRateViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 369])

class envSTDecTempRateViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 370])

class envLTIncTempRateViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 371])

class envLTIncTempRateViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 372])

class envLTDecTempRateViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 373])

class envLTDecTempRateViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 374])

class bmsCriticalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 375])

class bmsCriticalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 376])

class bmsWarningCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 377])

class bmsWarningConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 378])

class bmsInformationalCondition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 379])

class bmsInformationalConditionCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 380])

class xATSOutputVoltageLowAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 381])

class xATSOutputVoltageLowAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 382])

class xATSOutputVoltageHighAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 383])

class xATSOutputVoltageHighAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 384])

class xATSOutputCurrentLowAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 385])

class xATSOutputCurrentLowAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 386])

class xATSOutputCurrentHighAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 387])

class xATSOutputCurrentHighAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 388])

class xATSOutputFrequencyAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 389])

class xATSOutputFrequencyAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 390])

class xATSInternalCommError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 391])

class xATSInternalCommErrorCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 392])

class xATSDataCommMismatchError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 393])

class xATSDataCommMismatchErrorCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 394])

class xATSGenCommLost(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 395])

class xATSGenCommEstablished(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 396])

class xATSNeutralPosition(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 397])

class xATSSwitchTransferEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 398])

class xATSInternalATSFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 399])

class xATSInternalATSFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 400])

class xATSEngineStartAsserted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 401])

class xATSEngineStopAsserted(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 402])

class xATSStartFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 403])

class xATSStopFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 404])

class xATSNotInAutomaticMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 405])

class xATSNotInAutomaticModeCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 406])

class xATSEpoTripped(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 407])

class xATSEpoReset(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 408])

class xATSEpoTestMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 409])

class xATSEpoArmed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 410])

class xATSTestInitiated(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 411])

class xATSTestCanceled(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 412])

class xATSTestFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 413])

class xATSTestPassed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 414])

class xATSInputContactStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 415])

class xATSInputContactStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 416])

class xATSRemoteStartContactMismatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 417])

class xATSRemoteStartContactMismatchCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 418])

class xATSDoorOpenAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 419])

class xATSDoorOpenAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 420])

class xATSDCBackupAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 421])

class xATSDCBackupAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 422])

class xATSGeneratorLowCoolantLevelAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 423])

class xATSGeneratorLowCoolantLevelAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 424])

class xATSGeneratorVeryLowCoolantLevelAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 425])

class xATSGeneratorVeryLowCoolantLevelAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 426])

class xATSGeneratorHighCoolantTempAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 427])

class xATSGeneratorHighCoolantTempAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 428])

class xATSGeneratorVeryHighCoolantTempAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 429])

class xATSGeneratorVeryHighCoolantTempAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 430])

class xATSGeneratorLowCoolantTempAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 431])

class xATSGeneratorLowCoolantTempAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 432])

class xATSGeneratorLowOilLevelAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 433])

class xATSGeneratorLowOilLevelAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 434])

class xATSGeneratorLowBatteryVoltDuringCrankAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 435])

class xATSGeneratorLowBatteryVoltDuringCrankAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 436])

class xATSGeneratorVeryLowBatteryVoltDuringCrankAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 437])

class xATSGeneratorVeryLowBatteryVoltDuringCrankAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 438])

class xATSGeneratorEStop(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 439])

class xATSGeneratorEStopCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 440])

class xATSGeneratorHighBatteryVolt(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 441])

class xATSGeneratorHighBatteryVoltCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 442])

class xATSGeneratorLowBatteryVolt(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 443])

class xATSGeneratorLowBatteryVoltCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 444])

class xATSGeneratorControlSwitchNotAuto(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 445])

class xATSGeneratorControlSwitchNotAutoCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 446])

class xATSGeneratorLowOilPressure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 447])

class xATSGeneratorLowOilPressureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 448])

class xATSGeneratorVeryLowOilPressure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 449])

class xATSGeneratorVeryLowOilPressureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 450])

class xATSGeneratorOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 451])

class xATSGeneratorOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 452])

class xATSGeneratorLowACVEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 453])

class xATSGeneratorLowACVEventCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 454])

class xATSGeneratorHighACVEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 455])

class xATSGeneratorHighACVEventCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 456])

class xATSGeneratorOverspeed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 457])

class xATSGeneratorOverspeedCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 458])

class xATSGeneratorEngineCold(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 459])

class xATSGeneratorEngineColdCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 460])

class xATSGeneratorOutputBreakerOpen(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 461])

class xATSGeneratorOutputBreakerOpenCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 462])

class xATSGeneratorLowFuelLevelAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 463])

class xATSGeneratorLowFuelLevelAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 464])

class xATSGeneratorVeryLowFuelLevelAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 465])

class xATSGeneratorVeryLowFuelLevelAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 466])

class xATSGeneratorLowRunTimeAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 467])

class xATSGeneratorLowRunTimeAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 468])

class xATSGeneratorVeryLowRunTimeAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 469])

class xATSGeneratorVeryLowRunTimeAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 470])

class xATSGeneratorServiceDueAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 471])

class xATSGeneratorServiceDueAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 472])

class xATSGeneratorShutdown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 473])

class xATSGeneratorShutdownCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 474])

class xATSGeneratorBatteryCharger(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 475])

class xATSGeneratorBatteryChargerCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 476])

class xATSGeneratorGenericEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 477])

class xATSGeneratorGenericEventCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 478])

class xPDUInternalCommErrorCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 479])

class xPDUSystemStateAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 480])

class xPDUSystemStateAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 481])

class xPDUEpoTestMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 482])

class xPDUEpoArmed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 483])

class xPDUFuseBlownAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 484])

class xPDUFuseBlownAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 485])

class xPDUBreakerPositionAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 486])

class xPDUBreakerPositionAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 487])

class xPDUBreakerChangeEvent(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 488])

class xPDUDataCommMismatchError(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 489])

class xPDUDataCommMismatchErrorCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 490])

class xPDUSystemInMaintenanceBypassMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 491])

class xPDUSystemInUPSOperationalMode(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 492])

class xATSGeneratorFuelTankRuptureAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 493])

class xATSGeneratorFuelTankRuptureAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 494])

class xATSGeneratorGroundFaultAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 495])

class xATSGeneratorGroundFaultAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 496])

class xATSOutputLoadPoweredByGeneratorAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 497])

class xATSOutputLoadPoweredByGeneratorAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 498])

class xAPCControllerFirmwareUpdateTransferStart(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 499])

class xAPCControllerFirmwareUpdateTransferComplete(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 500])

class xAPCControllerFirmwareUpdateTransferFailed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 501])

class upsPfcInputRelayFailure(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 502])

class upsPfcInputRelayFailureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 503])

class upsInverterOverTemperature(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 504])

class upsInverterOverTemperatureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 505])

class upsBatteryOverVoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 506])

class upsBatteryOverVoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 507])

class upsEepromFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 508])

class upsEepromFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 509])

class aruFanRuntimeAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 510])

class aruFanRuntimeAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 511])

class aruFanPoorPerformanceAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 512])

class aruFanPoorPerformanceAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 513])

class aruRedundantPowerLostAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 514])

class aruRedundantPowerLostAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 515])

class apcDeviceConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 516])

class apcEnvSensorConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 517])

class apcEnvSensorDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 518])

class apcEnvMaxTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 519])

class apcEnvMaxTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 520])

class apcEnvHighTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 521])

class apcEnvHighTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 522])

class apcEnvLowTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 523])

class apcEnvLowTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 524])

class apcEnvMinTempThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 525])

class apcEnvMinTempThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 526])

class apcEnvSTIncTempRateViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 527])

class apcEnvSTIncTempRateViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 528])

class apcEnvSTDecTempRateViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 529])

class apcEnvSTDecTempRateViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 530])

class apcEnvLTIncTempRateViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 531])

class apcEnvLTIncTempRateViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 532])

class apcEnvLTDecTempRateViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 533])

class apcEnvLTDecTempRateViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 534])

class apcEnvMaxHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 535])

class apcEnvMaxHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 536])

class apcEnvHighHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 537])

class apcEnvHighHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 538])

class apcEnvLowHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 539])

class apcEnvLowHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 540])

class apcEnvMinHumidityThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 541])

class apcEnvMinHumidityThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 542])

class apcBeaconConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 543])

class apcBeaconDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 544])

class apcBeaconOn(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 545])

class apcBeaconOff(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 546])

class apcOutletStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 547])

class apcOutletStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 548])

class apcOutputRelayStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 549])

class apcOutputRelayStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 550])

class apcHardwareStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 551])

class apcHardwareStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 552])

class apcCriticalDiscreteInputContactStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 553])

class apcCriticalDiscreteInputContactStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 554])

class apcWarningDiscreteInputContactStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 555])

class apcWarningDiscreteInputContactStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 556])

class apcInformationalDiscreteInputContactStateAbnormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 557])

class apcInformationalDiscreteInputContactStateNormal(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 558])

class apcAnalogInputMaxThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 559])

class apcAnalogInputMaxThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 560])

class apcAnalogInputHighThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 561])

class apcAnalogInputHighThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 562])

class apcAnalogInputLowThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 563])

class apcAnalogInputLowThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 564])

class apcAnalogInputMinThresholdViolation(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 565])

class apcAnalogInputMinThresholdViolationCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 566])

class apcDeviceClearLostComms(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 567])

class apcDeviceConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 568])

class apcDeviceDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 569])

class apcUnregisteredUserAccessDenied(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 570])

class apcRegisteredUserAccessDenied(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 571])

class apcRegisteredUserConfigChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 572])

class apcDoorUnlocked(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 573])

class apcDoorLocked(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 574])

class apcHandleOpened(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 575])

class apcHandleClosed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 576])

class apcDoorOpened(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 577])

class apcDoorClosed(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 578])

class apcKeyOverrideUnlocked(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 580])

class apcKeyOverrideLocked(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 581])

class apcForcedEntry(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 582])

class apcForcedEntryCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 583])

class apcRelockTimeout(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 584])

class apcRelockTimeoutCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 585])

class apcDoorSenseDisconnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 586])

class apcDoorSenseConnected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 587])

class apcDoorLostComms(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 588])

class apcDoorEstablishedComms(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 589])

class apcRegisteredUserAccessChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 590])

class apcUnregisteredUserStatusChange(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 591])

class apcDeviceClearUserConfigs(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 592])

class upsBatteryTempSensorFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 600])

class upsBatteryTempSensorFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 601])

class upsBatterySoftBusStartFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 602])

class upsBatterySoftBusStartFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 603])

class apcOutputShortCircuit(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 604])

class apcOutputShortCircuitCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 605])

class apcOutputRelayFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 606])

class apcOutputRelayFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 607])

class upsPfcFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 608])

class upsPfcFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 609])

class apcDcBusOverVoltage(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 610])

class apcDcBusOverVoltageCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 611])

class upsInverterFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 612])

class upsInverterFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 613])

class apcAdConverterFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 614])

class apcAdConverterFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 615])

class apcLogicPowerSupplyFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 616])

class apcLogicPowerSupplyFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 617])

class apcTransformerDCImbalanceFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 618])

class apcTransformerDCImbalanceFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 619])

class upsBackfeedRelayFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 620])

class upsBackfeedRelayFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 621])

class upsBypassRelayFault(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 622])

class upsBypassRelayFaultCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 623])

class xPDUBranchCurrentMinAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 626])

class xPDUBranchCurrentMinAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 627])

class xPDUBranchCurrentMaxAlarm(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 628])

class xPDUBranchCurrentMaxAlarmCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 629])

class rPDUOutletLowLoad(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 630])

class rPDUOutletLowLoadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 631])

class rPDUOutletNearOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 632])

class rPDUOutletNearOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 633])

class rPDUOutletOverload(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 634])

class rPDUOutletOverloadCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 635])

class apcTestTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 636])

class baseFanFailureCleared(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 318, 0, 637])

# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
