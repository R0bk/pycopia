# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, mib_2, Counter32, Unsigned32, Integer32, Gauge32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from LVL7_REF_MIB import fastPath
from SNMPv2_TC import DisplayString, PhysAddress, TruthValue, TimeStamp, VariablePointer, RowPointer, RowStatus, MacAddress
from IPV6_TC import Ipv6IfIndex, Ipv6Address, Ipv6AddressPrefix, Ipv6AddressIfIdentifier, Ipv6IfIndexOrZero

class FASTPATH_ROUTING6_MIB(ModuleObject):
	path = '/usr/share/mibs/site/FASTPATH-ROUTING6-MIB'
	conformance = 2
	name = 'FASTPATH-ROUTING6-MIB'
	language = 2
	description = 'The LVL7 Private MIB for FastPath Ipv6 Routing'

# nodes
class fastPathRoutingIpv6(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30])
	name = 'fastPathRoutingIpv6'

class agentIpv6Group(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1])
	name = 'agentIpv6Group'

class agentIpv6ServicePortGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7])
	name = 'agentIpv6ServicePortGroup'


# macros
# types 
# scalars 
class agentIpv6RoutingMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


# columns
class agentIpv6InterfaceIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentIpv6InterfaceMtuValue(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentIpv6InterfaceDadTransmits(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentIpv6InterfaceLinkLocalOnly(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentIpv6RouterAdvertisementIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentIpv6RouterAdvertisementSuppressMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentIpv6RouterAdvertisementMaxAdvertisementInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentIpv6RouterAdvertisementAdvertisementLifetime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentIpv6RouterAdvertisementNbrSolicitInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentIpv6RouterAdvertisementReachableTime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentIpv6RouterAdvertisementManagedFlag(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentIpv6RouterAdvertisementOtherFlag(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentIpv6AddrPrefix(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 1])
	syntaxobject = Ipv6AddressPrefix


class agentIpv6AddrPrefixLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 2
	units = 'bits'


class agentIpv6AddrPrefixOnLinkFlag(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentIpv6AddrPrefixAutonomousFlag(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentIpv6AddrPrefixAdvPreferredLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class agentIpv6AddrPrefixAdvValidLifetime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class agentIpv6AddrAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 1])
	syntaxobject = Ipv6Address


class agentIpv6AddrPfxLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 5
	units = 'bits'


class agentIpv6AddrEui64Flag(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentIpv6AddrStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentIpv6StaticRouteDest(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 1])
	syntaxobject = Ipv6AddressPrefix


class agentIpv6StaticRoutePfxLength(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 2
	units = 'bits'


class agentIpv6StaticRouteIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 3])
	syntaxobject = Ipv6IfIndexOrZero


class agentIpv6StaticRouteNextHop(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 4])
	syntaxobject = Ipv6Address


class agentIpv6StaticRoutePreference(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentIpv6StaticRouteStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentIpv6ServicePortPrefixIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentIpv6ServicePortPrefix(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 2])
	syntaxobject = Ipv6Address


class agentIpv6ServicePortPrefixLength(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentIpv6ServicePortDefaultRouterIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentIpv6ServicePortDefaultRouter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1, 2])
	syntaxobject = Ipv6Address


class agentIpv6ServicePortNbrAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 1])
	syntaxobject = Ipv6Address


class agentIpv6ServicePortNbrPhysAddr(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class agentIpv6ServicePortNbrState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'reachable'), Enum(2, 'stale'), Enum(3, 'delay'), Enum(4, 'probe'), Enum(6, 'unknown')]


class agentIpv6ServicePortNbrUpdated(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class agentIpv6ServicePortNbrIsRouter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# rows 
class agentIpv6InterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentIpv6InterfaceIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1])
	access = 2
	columns = {'agentIpv6InterfaceIfIndex': agentIpv6InterfaceIfIndex, 'agentIpv6InterfaceMtuValue': agentIpv6InterfaceMtuValue, 'agentIpv6InterfaceDadTransmits': agentIpv6InterfaceDadTransmits, 'agentIpv6InterfaceLinkLocalOnly': agentIpv6InterfaceLinkLocalOnly}


class agentIpv6RouterAdvertisementEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentIpv6RouterAdvertisementIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1])
	access = 2
	columns = {'agentIpv6RouterAdvertisementIfIndex': agentIpv6RouterAdvertisementIfIndex, 'agentIpv6RouterAdvertisementSuppressMode': agentIpv6RouterAdvertisementSuppressMode, 'agentIpv6RouterAdvertisementMaxAdvertisementInterval': agentIpv6RouterAdvertisementMaxAdvertisementInterval, 'agentIpv6RouterAdvertisementAdvertisementLifetime': agentIpv6RouterAdvertisementAdvertisementLifetime, 'agentIpv6RouterAdvertisementNbrSolicitInterval': agentIpv6RouterAdvertisementNbrSolicitInterval, 'agentIpv6RouterAdvertisementReachableTime': agentIpv6RouterAdvertisementReachableTime, 'agentIpv6RouterAdvertisementManagedFlag': agentIpv6RouterAdvertisementManagedFlag, 'agentIpv6RouterAdvertisementOtherFlag': agentIpv6RouterAdvertisementOtherFlag}


class agentIpv6AddrPrefixEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentIpv6InterfaceIfIndex, agentIpv6AddrPrefix, agentIpv6AddrPrefixLength], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1])
	access = 2
	columns = {'agentIpv6AddrPrefix': agentIpv6AddrPrefix, 'agentIpv6AddrPrefixLength': agentIpv6AddrPrefixLength, 'agentIpv6AddrPrefixOnLinkFlag': agentIpv6AddrPrefixOnLinkFlag, 'agentIpv6AddrPrefixAutonomousFlag': agentIpv6AddrPrefixAutonomousFlag, 'agentIpv6AddrPrefixAdvPreferredLifetime': agentIpv6AddrPrefixAdvPreferredLifetime, 'agentIpv6AddrPrefixAdvValidLifetime': agentIpv6AddrPrefixAdvValidLifetime}


class agentIpv6AddrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentIpv6InterfaceIfIndex, agentIpv6AddrAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1])
	access = 2
	rowstatus = agentIpv6AddrStatus
	columns = {'agentIpv6AddrAddress': agentIpv6AddrAddress, 'agentIpv6AddrPfxLength': agentIpv6AddrPfxLength, 'agentIpv6AddrEui64Flag': agentIpv6AddrEui64Flag, 'agentIpv6AddrStatus': agentIpv6AddrStatus}


class agentIpv6StaticRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentIpv6StaticRouteDest, agentIpv6StaticRoutePfxLength, agentIpv6StaticRouteIfIndex, agentIpv6StaticRouteNextHop], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1])
	access = 2
	rowstatus = agentIpv6StaticRouteStatus
	columns = {'agentIpv6StaticRouteDest': agentIpv6StaticRouteDest, 'agentIpv6StaticRoutePfxLength': agentIpv6StaticRoutePfxLength, 'agentIpv6StaticRouteIfIndex': agentIpv6StaticRouteIfIndex, 'agentIpv6StaticRouteNextHop': agentIpv6StaticRouteNextHop, 'agentIpv6StaticRoutePreference': agentIpv6StaticRoutePreference, 'agentIpv6StaticRouteStatus': agentIpv6StaticRouteStatus}


class agentIpv6ServicePortPrefixEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentIpv6ServicePortPrefixIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1])
	access = 2
	columns = {'agentIpv6ServicePortPrefixIndex': agentIpv6ServicePortPrefixIndex, 'agentIpv6ServicePortPrefix': agentIpv6ServicePortPrefix, 'agentIpv6ServicePortPrefixLength': agentIpv6ServicePortPrefixLength}


class agentIpv6ServicePortDefaultRouterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentIpv6ServicePortDefaultRouterIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1])
	access = 2
	columns = {'agentIpv6ServicePortDefaultRouterIndex': agentIpv6ServicePortDefaultRouterIndex, 'agentIpv6ServicePortDefaultRouter': agentIpv6ServicePortDefaultRouter}


class agentIpv6ServicePortNbrEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentIpv6ServicePortNbrAddr], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1])
	access = 2
	columns = {'agentIpv6ServicePortNbrAddr': agentIpv6ServicePortNbrAddr, 'agentIpv6ServicePortNbrPhysAddr': agentIpv6ServicePortNbrPhysAddr, 'agentIpv6ServicePortNbrState': agentIpv6ServicePortNbrState, 'agentIpv6ServicePortNbrUpdated': agentIpv6ServicePortNbrUpdated, 'agentIpv6ServicePortNbrIsRouter': agentIpv6ServicePortNbrIsRouter}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
