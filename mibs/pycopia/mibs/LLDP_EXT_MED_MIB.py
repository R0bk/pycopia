# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from LLDP_MIB import lldpExtensions, lldpLocPortNum, lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex, lldpPortConfigEntry, lldpRemChassisIdSubtype, lldpRemChassisId
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Gauge32, Unsigned32, NOTIFICATION_TYPE
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue
from DIFFSERV_DSCP_TC import Dscp

class LLDP_EXT_MED_MIB(ModuleObject):
	path = '/usr/share/mibs/site/LLDP-EXT-MED-MIB'
	name = 'LLDP-EXT-MED-MIB'
	language = 2
	description = "The LLDP Management Information Base extension module for \nTIA-TR41.4 Media Endpoint Discovery information. \n\nIn order to assure the uniqueness of the LLDP-MIB, \nlldpXMedMIB is branched from lldpExtensions using the TIA OUI  \nvalue as the node.  An OUI/'company_id' is a 24 bit globally  \nunique assigned number referenced by various standards. \n\nCopyright (C) TIA (2005).  This version of this MIB module \nis published as Section 13.3 of ANSI/TIA-1057. \n\nSee the standard itself for full legal notices."

# nodes
class lldpXMedMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795])
	name = 'lldpXMedMIB'

class lldpXMedNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 0])
	name = 'lldpXMedNotifications'

class lldpXMedObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1])
	name = 'lldpXMedObjects'

class lldpXMedConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1])
	name = 'lldpXMedConfig'

class lldpXMedLocalData(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2])
	name = 'lldpXMedLocalData'

class lldpXMedRemoteData(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3])
	name = 'lldpXMedRemoteData'

class lldpXMedConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2])
	name = 'lldpXMedConformance'

class lldpXMedCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 1])
	name = 'lldpXMedCompliances'

class lldpXMedGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2])
	name = 'lldpXMedGroups'


# macros
# types 

class LldpXMedDeviceClass(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'notDefined'), Enum(1, 'endpointClass1'), Enum(2, 'endpointClass2'), Enum(3, 'endpointClass3'), Enum(4, 'networkConnectivity')]


class LldpXMedCapabilities(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'capabilities'), Enum(1, 'networkPolicy'), Enum(2, 'location'), Enum(3, 'extendedPSE'), Enum(4, 'extendedPD'), Enum(5, 'inventory')]


class LocationSubtype(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'unknown'), Enum(2, 'coordinateBased'), Enum(3, 'civicAddress'), Enum(4, 'elin')]


class PolicyAppType(pycopia.SMI.Basetypes.BITS):
	status = 1
	enumerations = [Enum(0, 'unknown'), Enum(1, 'voice'), Enum(2, 'voiceSignaling'), Enum(3, 'guestVoice'), Enum(4, 'guestVoiceSignaling'), Enum(5, 'softPhoneVoice'), Enum(6, 'videoconferencing'), Enum(7, 'streamingVideo'), Enum(8, 'videoSignaling')]

# scalars 
class lldpXMedLocDeviceClass(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 1])
	syntaxobject = LldpXMedDeviceClass


class lldpXMedFastStartRepeatCount(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class lldpXMedLocHardwareRev(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 2])
	syntaxobject = SnmpAdminString


class lldpXMedLocFirmwareRev(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 3])
	syntaxobject = SnmpAdminString


class lldpXMedLocSoftwareRev(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 4])
	syntaxobject = SnmpAdminString


class lldpXMedLocSerialNum(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 5])
	syntaxobject = SnmpAdminString


class lldpXMedLocMfgName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 6])
	syntaxobject = SnmpAdminString


class lldpXMedLocModelName(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 7])
	syntaxobject = SnmpAdminString


class lldpXMedLocAssetID(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 8])
	syntaxobject = SnmpAdminString


class lldpXMedLocXPoEDeviceType(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'pseDevice'), Enum(3, 'pdDevice'), Enum(4, 'none')]


class lldpXMedLocXPoEPSEPowerSource(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'primary'), Enum(3, 'backup')]


class lldpXMedLocXPoEPDPowerReq(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 13])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'tenth of watt'


class lldpXMedLocXPoEPDPowerSource(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'fromPSE'), Enum(3, 'local'), Enum(4, 'localAndPSE')]


class lldpXMedLocXPoEPDPowerPriority(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'critical'), Enum(3, 'high'), Enum(4, 'low')]


# columns
class lldpXMedPortCapSupported(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2, 1, 1])
	syntaxobject = LldpXMedCapabilities


class lldpXMedPortConfigTLVsTxEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2, 1, 2])
	syntaxobject = LldpXMedCapabilities


class lldpXMedPortConfigNotifEnable(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lldpXMedLocMediaPolicyAppType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 1])
	syntaxobject = PolicyAppType


class lldpXMedLocMediaPolicyVlanID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lldpXMedLocMediaPolicyPriority(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lldpXMedLocMediaPolicyDscp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 4])
	syntaxobject = Dscp


class lldpXMedLocMediaPolicyUnknown(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lldpXMedLocMediaPolicyTagged(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lldpXMedLocLocationSubtype(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 9, 1, 1])
	syntaxobject = LocationSubtype


class lldpXMedLocLocationInfo(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class lldpXMedLocXPoEPSEPortPowerAv(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'tenth of watt'


class lldpXMedLocXPoEPSEPortPDPriority(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'critical'), Enum(3, 'high'), Enum(4, 'low')]


class lldpXMedRemCapSupported(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1, 1, 1])
	syntaxobject = LldpXMedCapabilities


class lldpXMedRemCapCurrent(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1, 1, 2])
	syntaxobject = LldpXMedCapabilities


class lldpXMedRemDeviceClass(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1, 1, 3])
	syntaxobject = LldpXMedDeviceClass


class lldpXMedRemMediaPolicyAppType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 1])
	syntaxobject = PolicyAppType


class lldpXMedRemMediaPolicyVlanID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lldpXMedRemMediaPolicyPriority(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class lldpXMedRemMediaPolicyDscp(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 4])
	syntaxobject = Dscp


class lldpXMedRemMediaPolicyUnknown(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lldpXMedRemMediaPolicyTagged(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class lldpXMedRemHardwareRev(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 1])
	syntaxobject = SnmpAdminString


class lldpXMedRemFirmwareRev(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 2])
	syntaxobject = SnmpAdminString


class lldpXMedRemSoftwareRev(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 3])
	syntaxobject = SnmpAdminString


class lldpXMedRemSerialNum(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 4])
	syntaxobject = SnmpAdminString


class lldpXMedRemMfgName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 5])
	syntaxobject = SnmpAdminString


class lldpXMedRemModelName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 6])
	syntaxobject = SnmpAdminString


class lldpXMedRemAssetID(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 7])
	syntaxobject = SnmpAdminString


class lldpXMedRemLocationSubtype(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 4, 1, 1])
	syntaxobject = LocationSubtype


class lldpXMedRemLocationInfo(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class lldpXMedRemXPoEDeviceType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'pseDevice'), Enum(3, 'pdDevice'), Enum(4, 'none')]


class lldpXMedRemXPoEPSEPowerAv(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'tenth of watt'


class lldpXMedRemXPoEPSEPowerSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'primary'), Enum(3, 'backup')]


class lldpXMedRemXPoEPSEPowerPriority(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'critical'), Enum(3, 'high'), Enum(4, 'low')]


class lldpXMedRemXPoEPDPowerReq(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32
	access = 4
	units = 'tenth of watt'


class lldpXMedRemXPoEPDPowerSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'fromPSE'), Enum(3, 'local'), Enum(4, 'localAndPSE')]


class lldpXMedRemXPoEPDPowerPriority(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'unknown'), Enum(2, 'critical'), Enum(3, 'high'), Enum(4, 'low')]


# rows 
from LLDP_MIB import lldpPortConfigPortNum
class lldpXMedPortConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpPortConfigPortNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2, 1])
	access = 2
	columns = {'lldpXMedPortCapSupported': lldpXMedPortCapSupported, 'lldpXMedPortConfigTLVsTxEnable': lldpXMedPortConfigTLVsTxEnable, 'lldpXMedPortConfigNotifEnable': lldpXMedPortConfigNotifEnable}


class lldpXMedLocMediaPolicyEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpLocPortNum, lldpXMedLocMediaPolicyAppType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1])
	access = 2
	columns = {'lldpXMedLocMediaPolicyAppType': lldpXMedLocMediaPolicyAppType, 'lldpXMedLocMediaPolicyVlanID': lldpXMedLocMediaPolicyVlanID, 'lldpXMedLocMediaPolicyPriority': lldpXMedLocMediaPolicyPriority, 'lldpXMedLocMediaPolicyDscp': lldpXMedLocMediaPolicyDscp, 'lldpXMedLocMediaPolicyUnknown': lldpXMedLocMediaPolicyUnknown, 'lldpXMedLocMediaPolicyTagged': lldpXMedLocMediaPolicyTagged}


class lldpXMedLocLocationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpLocPortNum, lldpXMedLocLocationSubtype], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 9, 1])
	access = 2
	columns = {'lldpXMedLocLocationSubtype': lldpXMedLocLocationSubtype, 'lldpXMedLocLocationInfo': lldpXMedLocLocationInfo}


class lldpXMedLocXPoEPSEPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpLocPortNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 11, 1])
	access = 2
	columns = {'lldpXMedLocXPoEPSEPortPowerAv': lldpXMedLocXPoEPSEPortPowerAv, 'lldpXMedLocXPoEPSEPortPDPriority': lldpXMedLocXPoEPSEPortPDPriority}


class lldpXMedRemCapabilitiesEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1, 1])
	access = 2
	columns = {'lldpXMedRemCapSupported': lldpXMedRemCapSupported, 'lldpXMedRemCapCurrent': lldpXMedRemCapCurrent, 'lldpXMedRemDeviceClass': lldpXMedRemDeviceClass}


class lldpXMedRemMediaPolicyEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex, lldpXMedRemMediaPolicyAppType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1])
	access = 2
	columns = {'lldpXMedRemMediaPolicyAppType': lldpXMedRemMediaPolicyAppType, 'lldpXMedRemMediaPolicyVlanID': lldpXMedRemMediaPolicyVlanID, 'lldpXMedRemMediaPolicyPriority': lldpXMedRemMediaPolicyPriority, 'lldpXMedRemMediaPolicyDscp': lldpXMedRemMediaPolicyDscp, 'lldpXMedRemMediaPolicyUnknown': lldpXMedRemMediaPolicyUnknown, 'lldpXMedRemMediaPolicyTagged': lldpXMedRemMediaPolicyTagged}


class lldpXMedRemInventoryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1])
	access = 2
	columns = {'lldpXMedRemHardwareRev': lldpXMedRemHardwareRev, 'lldpXMedRemFirmwareRev': lldpXMedRemFirmwareRev, 'lldpXMedRemSoftwareRev': lldpXMedRemSoftwareRev, 'lldpXMedRemSerialNum': lldpXMedRemSerialNum, 'lldpXMedRemMfgName': lldpXMedRemMfgName, 'lldpXMedRemModelName': lldpXMedRemModelName, 'lldpXMedRemAssetID': lldpXMedRemAssetID}


class lldpXMedRemLocationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex, lldpXMedRemLocationSubtype], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 4, 1])
	access = 2
	columns = {'lldpXMedRemLocationSubtype': lldpXMedRemLocationSubtype, 'lldpXMedRemLocationInfo': lldpXMedRemLocationInfo}


class lldpXMedRemXPoEEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 5, 1])
	access = 2
	columns = {'lldpXMedRemXPoEDeviceType': lldpXMedRemXPoEDeviceType}


class lldpXMedRemXPoEPSEEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6, 1])
	access = 2
	columns = {'lldpXMedRemXPoEPSEPowerAv': lldpXMedRemXPoEPSEPowerAv, 'lldpXMedRemXPoEPSEPowerSource': lldpXMedRemXPoEPSEPowerSource, 'lldpXMedRemXPoEPSEPowerPriority': lldpXMedRemXPoEPSEPowerPriority}


class lldpXMedRemXPoEPDEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([lldpRemTimeMark, lldpRemLocalPortNum, lldpRemIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7, 1])
	access = 2
	columns = {'lldpXMedRemXPoEPDPowerReq': lldpXMedRemXPoEPDPowerReq, 'lldpXMedRemXPoEPDPowerSource': lldpXMedRemXPoEPDPowerSource, 'lldpXMedRemXPoEPDPowerPriority': lldpXMedRemXPoEPDPowerPriority}


# notifications (traps) 
class lldpXMedTopologyChangeDetected(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 0, 1])

# groups 
class lldpXMedConfigGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 1])
	group = [lldpXMedPortCapSupported, lldpXMedPortConfigTLVsTxEnable, lldpXMedPortConfigNotifEnable, lldpXMedFastStartRepeatCount, lldpXMedLocXPoEDeviceType, lldpXMedLocDeviceClass]

class lldpXMedOptMediaPolicyGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 2])
	group = [lldpXMedLocMediaPolicyVlanID, lldpXMedLocMediaPolicyPriority, lldpXMedLocMediaPolicyDscp, lldpXMedLocMediaPolicyUnknown, lldpXMedLocMediaPolicyTagged]

class lldpXMedOptInventoryGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 3])
	group = [lldpXMedLocHardwareRev, lldpXMedLocFirmwareRev, lldpXMedLocSoftwareRev, lldpXMedLocSerialNum, lldpXMedLocMfgName, lldpXMedLocModelName, lldpXMedLocAssetID]

class lldpXMedOptLocationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 4])
	group = [lldpXMedLocLocationInfo]

class lldpXMedOptPoEPSEGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 5])
	group = [lldpXMedLocXPoEPSEPortPowerAv, lldpXMedLocXPoEPSEPortPDPriority, lldpXMedLocXPoEPSEPowerSource]

class lldpXMedOptPoEPDGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 6])
	group = [lldpXMedLocXPoEPDPowerReq, lldpXMedLocXPoEPDPowerSource, lldpXMedLocXPoEPDPowerPriority]

class lldpXMedRemSysGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 7])
	group = [lldpXMedRemCapSupported, lldpXMedRemCapCurrent, lldpXMedRemDeviceClass, lldpXMedRemMediaPolicyVlanID, lldpXMedRemMediaPolicyPriority, lldpXMedRemMediaPolicyDscp, lldpXMedRemMediaPolicyUnknown, lldpXMedRemMediaPolicyTagged, lldpXMedRemHardwareRev, lldpXMedRemFirmwareRev, lldpXMedRemSoftwareRev, lldpXMedRemSerialNum, lldpXMedRemMfgName, lldpXMedRemModelName, lldpXMedRemAssetID, lldpXMedRemLocationInfo, lldpXMedRemXPoEDeviceType, lldpXMedRemXPoEPSEPowerAv, lldpXMedRemXPoEPSEPowerSource, lldpXMedRemXPoEPSEPowerPriority, lldpXMedRemXPoEPDPowerReq, lldpXMedRemXPoEPDPowerSource, lldpXMedRemXPoEPDPowerPriority]

class lldpXMedNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 8])
	group = [lldpXMedTopologyChangeDetected]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
