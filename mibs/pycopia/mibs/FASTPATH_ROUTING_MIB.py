# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from LVL7_REF_MIB import fastPath
from IF_MIB import ifIndex
from OSPF_MIB import ospfIfEntry, ospfVirtIfEntry, ospfAreaEntry
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, IpAddress, Integer32, TimeTicks, Gauge32
from RFC1155_SMI import TimeTicks
from RFC1213_MIB import DisplayString, PhysAddress
from SNMPv2_TC import RowStatus, TruthValue
from RIPv2_MIB import rip2IfConfEntry

class FASTPATH_ROUTING_MIB(ModuleObject):
	path = '/usr/share/mibs/site/FASTPATH-ROUTING-MIB'
	conformance = 2
	name = 'FASTPATH-ROUTING-MIB'
	language = 2
	description = 'The LVL7 Private MIB for FastPath Routing'

# nodes
class fastPathRouting(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2])
	name = 'fastPathRouting'

class agentSwitchArpGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1])
	name = 'agentSwitchArpGroup'

class agentSwitchIpGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2])
	name = 'agentSwitchIpGroup'

class agentRouterRipConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3])
	name = 'agentRouterRipConfigGroup'

class agentRouterOspfConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4])
	name = 'agentRouterOspfConfigGroup'

class agentSnmpTrapFlagsConfigGroupLayer3(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 5])
	name = 'agentSnmpTrapFlagsConfigGroupLayer3'

class agentBootpDhcpRelayGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6])
	name = 'agentBootpDhcpRelayGroup'

class agentECMPGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 7])
	name = 'agentECMPGroup'

class agentRouterVrrpConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 8])
	name = 'agentRouterVrrpConfigGroup'


# macros
# types 

class SpfTimerRange(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(0, 65535))

# scalars 
class agentSwitchArpAgeoutTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchArpResponseTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchArpMaxRetries(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchArpCacheSize(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchArpDynamicRenew(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchArpTotalEntryCountCurrent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class agentSwitchArpTotalEntryCountPeak(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class agentSwitchArpStaticEntryCountCurrent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class agentSwitchArpStaticEntryCountMax(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpRoutingMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentRouterRipAdminState(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentRouterRipSplitHorizonMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'simple'), Enum(3, 'poisonReverse')]


class agentRouterRipAutoSummaryMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentRouterRipHostRoutesAcceptMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentRouterRipDefaultMetric(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentRouterRipDefaultMetricConfigured(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentRouterRipDefaultInfoOriginate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentOspfDefaultMetric(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentOspfDefaultMetricConfigured(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentOspfDefaultInfoOriginate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentOspfDefaultInfoOriginateAlways(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentOspfDefaultInfoOriginateMetric(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentOspfDefaultInfoOriginateMetricConfigured(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentOspfDefaultInfoOriginateMetricType(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'externalType1'), Enum(2, 'externalType2')]


class agentRouterOspfRFC1583CompatibilityMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentOspfSpfDelayTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 12])
	syntaxobject = SpfTimerRange


class agentOspfSpfHoldTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 13])
	syntaxobject = SpfTimerRange


class agentSnmpVRRPNewMasterTrapFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSnmpVRRPAuthFailureTrapFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentBootpDhcpRelayMaxHopCount(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentBootpDhcpRelayForwardingIp(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentBootpDhcpRelayForwardMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentBootpDhcpRelayMinWaitTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentBootpDhcpRelayCircuitIdOptionMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentBootpDhcpRelayNumOfRequestsReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentBootpDhcpRelayNumOfRequestsForwarded(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentBootpDhcpRelayNumOfDiscards(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 6, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentECMPOspfMaxPaths(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentRouterVrrpAdminState(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 8, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


# columns
class agentSwitchArpAge(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class agentSwitchArpIpAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentSwitchArpMacAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class agentSwitchArpInterface(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchArpType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'local'), Enum(2, 'gateway'), Enum(3, 'static'), Enum(4, 'dynamic')]


class agentSwitchArpStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentSwitchLocalProxyArpMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchIpInterfaceIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpInterfaceIpAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentSwitchIpInterfaceNetMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentSwitchIpInterfaceClearIp(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchIpInterfaceRoutingMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchIpInterfaceProxyARPMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchIpInterfaceMtuValue(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentSwitchIpRouterDiscoveryIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpRouterDiscoveryAdvertiseMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchIpRouterDiscoveryMaxAdvertisementInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpRouterDiscoveryMinAdvertisementInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpRouterDiscoveryAdvertisementLifetime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpRouterDiscoveryPreferenceLevel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpRouterDiscoveryAdvertisementAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentSwitchIpVlanId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpVlanIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchIpVlanRoutingStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentSwitchSecondaryIpAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentSwitchSecondaryNetMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentSwitchSecondaryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentRipRouteRedistSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'connected'), Enum(2, 'static'), Enum(3, 'ospf'), Enum(4, 'bgp')]


class agentRipRouteRedistMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentRipRouteRedistMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentRipRouteRedistMetricConfigured(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentRipRouteRedistMatchInternal(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false'), Enum(3, 'not-applicable')]


class agentRipRouteRedistMatchExternal1(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false'), Enum(3, 'not-applicable')]


class agentRipRouteRedistMatchExternal2(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false'), Enum(3, 'not-applicable')]


class agentRipRouteRedistMatchNSSAExternal1(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false'), Enum(3, 'not-applicable')]


class agentRipRouteRedistMatchNSSAExternal2(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false'), Enum(3, 'not-applicable')]


class agentRipRouteRedistDistList(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentRipRouteRedistDistListConfigured(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentRip2IfConfAuthKeyId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentOspfRouteRedistSource(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'connected'), Enum(2, 'static'), Enum(3, 'rip'), Enum(4, 'bgp')]


class agentOspfRouteRedistMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentOspfRouteRedistMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentOspfRouteRedistMetricConfigured(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentOspfRouteRedistMetricType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'externalType1'), Enum(2, 'externalType2')]


class agentOspfRouteRedistTag(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentOspfRouteRedistSubnets(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentOspfRouteRedistDistList(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentOspfRouteRedistDistListConfigured(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class agentOspfIfAuthKeyId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentOspfIfIpMtuIgnoreFlag(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentOspfVirtIfAuthKeyId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class agentSwitchArpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchArpIpAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 10, 1])
	access = 2
	rowstatus = agentSwitchArpStatus
	columns = {'agentSwitchArpAge': agentSwitchArpAge, 'agentSwitchArpIpAddress': agentSwitchArpIpAddress, 'agentSwitchArpMacAddress': agentSwitchArpMacAddress, 'agentSwitchArpInterface': agentSwitchArpInterface, 'agentSwitchArpType': agentSwitchArpType, 'agentSwitchArpStatus': agentSwitchArpStatus}


class agentSwitchLocalProxyArpEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 1, 11, 1])
	access = 2
	columns = {'agentSwitchLocalProxyArpMode': agentSwitchLocalProxyArpMode}


class agentSwitchIpInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchIpInterfaceIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 3, 1])
	access = 2
	columns = {'agentSwitchIpInterfaceIfIndex': agentSwitchIpInterfaceIfIndex, 'agentSwitchIpInterfaceIpAddress': agentSwitchIpInterfaceIpAddress, 'agentSwitchIpInterfaceNetMask': agentSwitchIpInterfaceNetMask, 'agentSwitchIpInterfaceClearIp': agentSwitchIpInterfaceClearIp, 'agentSwitchIpInterfaceRoutingMode': agentSwitchIpInterfaceRoutingMode, 'agentSwitchIpInterfaceProxyARPMode': agentSwitchIpInterfaceProxyARPMode, 'agentSwitchIpInterfaceMtuValue': agentSwitchIpInterfaceMtuValue}


class agentSwitchIpRouterDiscoveryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchIpRouterDiscoveryIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 4, 1])
	access = 2
	columns = {'agentSwitchIpRouterDiscoveryIfIndex': agentSwitchIpRouterDiscoveryIfIndex, 'agentSwitchIpRouterDiscoveryAdvertiseMode': agentSwitchIpRouterDiscoveryAdvertiseMode, 'agentSwitchIpRouterDiscoveryMaxAdvertisementInterval': agentSwitchIpRouterDiscoveryMaxAdvertisementInterval, 'agentSwitchIpRouterDiscoveryMinAdvertisementInterval': agentSwitchIpRouterDiscoveryMinAdvertisementInterval, 'agentSwitchIpRouterDiscoveryAdvertisementLifetime': agentSwitchIpRouterDiscoveryAdvertisementLifetime, 'agentSwitchIpRouterDiscoveryPreferenceLevel': agentSwitchIpRouterDiscoveryPreferenceLevel, 'agentSwitchIpRouterDiscoveryAdvertisementAddress': agentSwitchIpRouterDiscoveryAdvertisementAddress}


class agentSwitchIpVlanEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchIpVlanId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 5, 1])
	access = 2
	rowstatus = agentSwitchIpVlanRoutingStatus
	columns = {'agentSwitchIpVlanId': agentSwitchIpVlanId, 'agentSwitchIpVlanIfIndex': agentSwitchIpVlanIfIndex, 'agentSwitchIpVlanRoutingStatus': agentSwitchIpVlanRoutingStatus}


class agentSwitchSecondaryAddressEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchIpInterfaceIfIndex, agentSwitchSecondaryIpAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 2, 6, 1])
	access = 2
	rowstatus = agentSwitchSecondaryStatus
	columns = {'agentSwitchSecondaryIpAddress': agentSwitchSecondaryIpAddress, 'agentSwitchSecondaryNetMask': agentSwitchSecondaryNetMask, 'agentSwitchSecondaryStatus': agentSwitchSecondaryStatus}


class agentRipRouteRedistEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentRipRouteRedistSource], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 8, 1])
	access = 2
	columns = {'agentRipRouteRedistSource': agentRipRouteRedistSource, 'agentRipRouteRedistMode': agentRipRouteRedistMode, 'agentRipRouteRedistMetric': agentRipRouteRedistMetric, 'agentRipRouteRedistMetricConfigured': agentRipRouteRedistMetricConfigured, 'agentRipRouteRedistMatchInternal': agentRipRouteRedistMatchInternal, 'agentRipRouteRedistMatchExternal1': agentRipRouteRedistMatchExternal1, 'agentRipRouteRedistMatchExternal2': agentRipRouteRedistMatchExternal2, 'agentRipRouteRedistMatchNSSAExternal1': agentRipRouteRedistMatchNSSAExternal1, 'agentRipRouteRedistMatchNSSAExternal2': agentRipRouteRedistMatchNSSAExternal2, 'agentRipRouteRedistDistList': agentRipRouteRedistDistList, 'agentRipRouteRedistDistListConfigured': agentRipRouteRedistDistListConfigured}


from RIPv2_MIB import rip2IfConfAddress
class agentRip2IfConfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([rip2IfConfAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 3, 9, 1])
	access = 2
	columns = {'agentRip2IfConfAuthKeyId': agentRip2IfConfAuthKeyId}


class agentOspfRouteRedistEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentOspfRouteRedistSource], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 8, 1])
	access = 2
	columns = {'agentOspfRouteRedistSource': agentOspfRouteRedistSource, 'agentOspfRouteRedistMode': agentOspfRouteRedistMode, 'agentOspfRouteRedistMetric': agentOspfRouteRedistMetric, 'agentOspfRouteRedistMetricConfigured': agentOspfRouteRedistMetricConfigured, 'agentOspfRouteRedistMetricType': agentOspfRouteRedistMetricType, 'agentOspfRouteRedistTag': agentOspfRouteRedistTag, 'agentOspfRouteRedistSubnets': agentOspfRouteRedistSubnets, 'agentOspfRouteRedistDistList': agentOspfRouteRedistDistList, 'agentOspfRouteRedistDistListConfigured': agentOspfRouteRedistDistListConfigured}


from OSPF_MIB import ospfIfIpAddress
from OSPF_MIB import ospfAddressLessIf
class agentOspfIfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ospfIfIpAddress, ospfAddressLessIf], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 9, 1])
	access = 2
	columns = {'agentOspfIfAuthKeyId': agentOspfIfAuthKeyId, 'agentOspfIfIpMtuIgnoreFlag': agentOspfIfIpMtuIgnoreFlag}


from OSPF_MIB import ospfVirtIfAreaId
from OSPF_MIB import ospfVirtIfNeighbor
class agentOspfVirtIfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ospfVirtIfAreaId, ospfVirtIfNeighbor], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 2, 4, 10, 1])
	access = 2
	columns = {'agentOspfVirtIfAuthKeyId': agentOspfVirtIfAuthKeyId}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
