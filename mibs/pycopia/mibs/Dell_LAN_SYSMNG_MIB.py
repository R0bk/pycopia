# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from RFC_1212 import OBJECT_TYPE
from SNMPv2_SMI import IpAddress, Unsigned32
from SNMPv2_TC import DisplayString, DateAndTime, TruthValue, RowStatus
from Dell_Vendor_MIB import dellLanCommon
from RFC_1215 import TRAP_TYPE

class Dell_LAN_SYSMNG_MIB(ModuleObject):
	path = '/usr/share/mibs/site/Dell-LAN-SYSMNG-MIB'
	conformance = 2
	name = 'Dell-LAN-SYSMNG-MIB'
	language = 2
	description = 'This MIB define the common system management functions\napplicable to all Dell PowerConnect managed switches\nwhich support SNMP management protocol.  This MIB\nincludes:\n- Management interface access control.\n- Local user configuration and user access control.\n- File system management including file copy, backup,\n  restore, rename, list, etc.\nThis MIB should not be confused with the Dell Vendor\nMIB required for ITA integration.'

# nodes
class dellLanSystemMng(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2])
	name = 'dellLanSystemMng'

class dellLanMngIfGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1])
	name = 'dellLanMngIfGroup'

class dellLanFileSysGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2])
	name = 'dellLanFileSysGroup'

class dellLanSysMngGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 3])
	name = 'dellLanSysMngGroup'


# macros
# types 

class DellLanMngInfServiceType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'allType'), Enum(1, 'telnet'), Enum(2, 'snmp'), Enum(3, 'http'), Enum(4, 'https'), Enum(5, 'ssh')]


class DellLanMngInfActionType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'permit'), Enum(1, 'deny')]

# scalars 
class dellLanMngInfEnable(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dellLanMngInfActiveListName(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dellLanFSMaxSize(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dellLanFSAvailableSize(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dellLanSysActionReload(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dellLanSysActionSetActiveImage(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


# columns
class dellLanMngInfListName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dellLanMngInfListPriority(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class dellLanMngInfListIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class dellLanMngInfListIpAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dellLanMngInfListIpNetMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dellLanMngInfListService(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 6])
	syntaxobject = DellLanMngInfServiceType


class dellLanMngInfListAction(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 7])
	syntaxobject = DellLanMngInfActionType


class dellLanMngInfListRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class dellLanMngInfListVlanId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class dellLanFileName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dellLanFilePermission(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'readonly'), Enum(2, 'writeonly'), Enum(3, 'readWrite'), Enum(4, 'noReadNoWrite')]


class dellLanFilePriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dellLanFileSize(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dellLanFileType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'image'), Enum(2, 'config'), Enum(3, 'log'), Enum(4, 'sys'), Enum(5, 'activeImg')]


class dellLanFileModificationDate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dellLanFileModificationTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dellLanFileDescription(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dellLanFileActionIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dellLanFileActionSourceFile(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dellLanFileActionDestFile(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dellLanFileActionForceAction(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class dellLanFileActionCommand(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'copy'), Enum(3, 'delete')]


class dellLanFileActionResultCode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'success'), Enum(1, 'statusPending'), Enum(2, 'fileNotFound'), Enum(3, 'invalidCmd'), Enum(4, 'unknownError'), Enum(5, 'tftpServerConnectFailed'), Enum(6, 'fileSystemFull'), Enum(7, 'overwriteNotRequested'), Enum(8, 'overwriteFailed'), Enum(9, 'permissionDenied'), Enum(10, 'incompatFileType'), Enum(11, 'invalidDest')]


# rows 
class dellLanMngInfListEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dellLanMngInfListName, dellLanMngInfListPriority], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 1, 3, 1])
	access = 2
	rowstatus = dellLanMngInfListRowStatus
	columns = {'dellLanMngInfListName': dellLanMngInfListName, 'dellLanMngInfListPriority': dellLanMngInfListPriority, 'dellLanMngInfListIfIndex': dellLanMngInfListIfIndex, 'dellLanMngInfListIpAddr': dellLanMngInfListIpAddr, 'dellLanMngInfListIpNetMask': dellLanMngInfListIpNetMask, 'dellLanMngInfListService': dellLanMngInfListService, 'dellLanMngInfListAction': dellLanMngInfListAction, 'dellLanMngInfListRowStatus': dellLanMngInfListRowStatus, 'dellLanMngInfListVlanId': dellLanMngInfListVlanId}


class dellLanFileEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dellLanFileName], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 3, 1])
	access = 2
	columns = {'dellLanFileName': dellLanFileName, 'dellLanFilePermission': dellLanFilePermission, 'dellLanFilePriority': dellLanFilePriority, 'dellLanFileSize': dellLanFileSize, 'dellLanFileType': dellLanFileType, 'dellLanFileModificationDate': dellLanFileModificationDate, 'dellLanFileModificationTime': dellLanFileModificationTime, 'dellLanFileDescription': dellLanFileDescription}


class dellLanFileActionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dellLanFileActionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 1, 2, 2, 4, 1])
	access = 2
	columns = {'dellLanFileActionIndex': dellLanFileActionIndex, 'dellLanFileActionSourceFile': dellLanFileActionSourceFile, 'dellLanFileActionDestFile': dellLanFileActionDestFile, 'dellLanFileActionForceAction': dellLanFileActionForceAction, 'dellLanFileActionCommand': dellLanFileActionCommand, 'dellLanFileActionResultCode': dellLanFileActionResultCode}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
