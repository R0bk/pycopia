# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from LVL7_REF_MIB import fastPath, AgentPortMask
from IF_MIB import ifIndex
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, IpAddress, Integer32, Unsigned32, Counter32, Gauge32, TimeTicks
from IANAifType_MIB import IANAifType
from INET_ADDRESS_MIB import InetAddressType, InetAddress
from Q_BRIDGE_MIB import VlanIndex, dot1qVlanIndex, dot1qFdbId
from RFC1213_MIB import DisplayString, PhysAddress
from SNMPv2_TC import RowStatus, MacAddress

class FASTPATH_SWITCHING_MIB(ModuleObject):
	path = '/usr/share/mibs/site/FASTPATH-SWITCHING-MIB'
	conformance = 2
	name = 'FASTPATH-SWITCHING-MIB'
	language = 2
	description = 'The LVL7 Private MIB for FastPath Switching'

# nodes
class fastPathSwitching(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1])
	name = 'fastPathSwitching'

class fastPathSwitchingTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0])
	name = 'fastPathSwitchingTraps'

class agentInfoGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1])
	name = 'agentInfoGroup'

class agentInventoryGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1])
	name = 'agentInventoryGroup'

class agentTrapLogGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 2])
	name = 'agentTrapLogGroup'

class agentSwitchCpuProcessGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 4])
	name = 'agentSwitchCpuProcessGroup'

class agentConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2])
	name = 'agentConfigGroup'

class agentCLIConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1])
	name = 'agentCLIConfigGroup'

class agentTelnetConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 2])
	name = 'agentTelnetConfigGroup'

class agentUserConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3])
	name = 'agentUserConfigGroup'

class agentSerialGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 5])
	name = 'agentSerialGroup'

class agentLagConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2])
	name = 'agentLagConfigGroup'

class agentNetworkConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3])
	name = 'agentNetworkConfigGroup'

class agentServicePortConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 4])
	name = 'agentServicePortConfigGroup'

class agentSnmpConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 6])
	name = 'agentSnmpConfigGroup'

class agentSnmpTrapFlagsConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 6, 5])
	name = 'agentSnmpTrapFlagsConfigGroup'

class agentSpanningTreeConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 7])
	name = 'agentSpanningTreeConfigGroup'

class agentSwitchConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8])
	name = 'agentSwitchConfigGroup'

class agentSwitchSnoopingGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 6])
	name = 'agentSwitchSnoopingGroup'

class agentSwitchSnoopingIntfGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7])
	name = 'agentSwitchSnoopingIntfGroup'

class agentSwitchSnoopingVlanGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 8])
	name = 'agentSwitchSnoopingVlanGroup'

class agentSwitchVlanStaticMrouterGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 9])
	name = 'agentSwitchVlanStaticMrouterGroup'

class agentSwitchMFDBGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10])
	name = 'agentSwitchMFDBGroup'

class agentSwitchDVlanTagGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 11])
	name = 'agentSwitchDVlanTagGroup'

class agentSwitchStormControlGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 12])
	name = 'agentSwitchStormControlGroup'

class agentDhcpFilteringGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 15])
	name = 'agentDhcpFilteringGroup'

class agentSwitchVlanMacAssociationGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 17])
	name = 'agentSwitchVlanMacAssociationGroup'

class agentSwitchProtectedPortConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 18])
	name = 'agentSwitchProtectedPortConfigGroup'

class agentSwitchVlanSubnetAssociationGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 19])
	name = 'agentSwitchVlanSubnetAssociationGroup'

class agentSwitchSnoopingQuerierGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20])
	name = 'agentSwitchSnoopingQuerierGroup'

class agentSwitchVoiceVLANGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 21])
	name = 'agentSwitchVoiceVLANGroup'

class agentTransferConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9])
	name = 'agentTransferConfigGroup'

class agentTransferUploadGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1])
	name = 'agentTransferUploadGroup'

class agentTransferDownloadGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2])
	name = 'agentTransferDownloadGroup'

class agentImageConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 3])
	name = 'agentImageConfigGroup'

class agentPortMirroringGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10])
	name = 'agentPortMirroringGroup'

class agentProtocolConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14])
	name = 'agentProtocolConfigGroup'

class agentStpSwitchConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15])
	name = 'agentStpSwitchConfigGroup'

class agentStpCstConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8])
	name = 'agentStpCstConfigGroup'

class agentAuthenticationGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16])
	name = 'agentAuthenticationGroup'

class agentClassOfServiceGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 17])
	name = 'agentClassOfServiceGroup'

class agentLinkDependencyGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 18])
	name = 'agentLinkDependencyGroup'

class agentSystemGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3])
	name = 'agentSystemGroup'

class agentCableTesterGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 4])
	name = 'agentCableTesterGroup'


# macros
# types 

class PortList(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 198))


class VlanList(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 512))

# scalars 
class agentInventorySysDescription(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryMachineType(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryMachineModel(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventorySerialNumber(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryFRUNumber(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryMaintenanceLevel(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryPartNumber(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryManufacturer(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryBurnedInMacAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class agentInventoryOperatingSystem(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryNetworkProcessingDevice(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryAdditionalPackages(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventorySoftwareVersion(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentTrapLogTotal(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTrapLogTotalSinceLastViewed(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchCpuProcessMemFree(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'KBytes'


class agentSwitchCpuProcessMemAvailable(ScalarObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32
	access = 4
	units = 'KBytes'


class agentTelnetLoginTimeout(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTelnetMaxSessions(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTelnetAllowNewMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentTelnetMgmtPortNum(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentUserConfigCreate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSerialTimeout(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSerialBaudrate(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'baud-1200'), Enum(2, 'baud-2400'), Enum(3, 'baud-4800'), Enum(4, 'baud-9600'), Enum(5, 'baud-19200'), Enum(6, 'baud-38400'), Enum(7, 'baud-57600'), Enum(8, 'baud-115200')]


class agentSerialCharacterSize(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSerialHWFlowControlMode(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 5, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSerialStopBits(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 5, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSerialParityType(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 5, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'even'), Enum(2, 'odd'), Enum(3, 'none')]


class agentLagConfigCreate(ScalarObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentNetworkIPAddress(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentNetworkSubnetMask(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentNetworkDefaultGateway(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentNetworkBurnedInMacAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class agentNetworkLocalAdminMacAddress(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class agentNetworkMacAddressType(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'burned-in'), Enum(2, 'local')]


class agentNetworkConfigProtocol(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'bootp'), Enum(3, 'dhcp')]


class agentNetworkWebMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentNetworkJavaMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentNetworkMgmtVlan(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentServicePortIPAddress(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentServicePortSubnetMask(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentServicePortDefaultGateway(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentServicePortBurnedInMacAddress(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.PhysAddress


class agentServicePortConfigProtocol(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'bootp'), Enum(3, 'dhcp')]


class agentSnmpAuthenticationTrapFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 6, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSnmpLinkUpDownTrapFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 6, 5, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSnmpMultipleUsersTrapFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 6, 5, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSnmpSpanningTreeTrapFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 6, 5, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSpanningTreeMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentBpduGuardMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentBPDUFilteringMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 7, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchMFDBMaxTableEntries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class agentSwitchMFDBMostEntriesUsed(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class agentSwitchMFDBCurrentEntries(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 5])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class agentSwitchDVlanTagEthertype(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 11, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchDot3FlowControlMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 12, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchBroadcastControlMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 12, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchBroadcastControlThreshold(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 12, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentSwitchMulticastControlMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 12, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchMulticastControlThreshold(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 12, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentSwitchUnicastControlMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 12, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchUnicastControlThreshold(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 12, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentDhcpFilteringAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 15, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchVoiceVLANAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 21, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentTransferUploadMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tftp'), Enum(2, 'xmodem'), Enum(3, 'ymodem'), Enum(4, 'zmodem')]


class agentTransferUploadServerIP(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentTransferUploadPath(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentTransferUploadFilename(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentTransferUploadDataType(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'code'), Enum(3, 'config'), Enum(4, 'operationallog'), Enum(5, 'startuplog')]


class agentTransferUploadStart(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentTransferUploadStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notInitiated'), Enum(2, 'transferStarting'), Enum(3, 'errorStarting'), Enum(4, 'wrongFileType'), Enum(5, 'updatingConfig'), Enum(6, 'invalidConfigFile'), Enum(7, 'writingToFlash'), Enum(8, 'failureWritingToFlash'), Enum(9, 'checkingCRC'), Enum(10, 'failedCRC'), Enum(11, 'unknownDirection'), Enum(12, 'transferSuccessful'), Enum(13, 'transferFailed')]


class agentTransferUploadServerAddressType(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 8])
	syntaxobject = InetAddressType


class agentTransferUploadServerAddress(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 1, 9])
	syntaxobject = InetAddress


class agentTransferDownloadMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tftp'), Enum(2, 'xmodem'), Enum(3, 'ymodem'), Enum(4, 'zmodem')]


class agentTransferDownloadServerIP(ScalarObject):
	access = 5
	status = 2
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentTransferDownloadPath(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentTransferDownloadFilename(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentTransferDownloadDataType(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'code'), Enum(3, 'config')]


class agentTransferDownloadStart(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentTransferDownloadStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notInitiated'), Enum(2, 'transferStarting'), Enum(3, 'errorStarting'), Enum(4, 'wrongFileType'), Enum(5, 'updatingConfig'), Enum(6, 'invalidConfigFile'), Enum(7, 'writingToFlash'), Enum(8, 'failureWritingToFlash'), Enum(9, 'checkingCRC'), Enum(10, 'failedCRC'), Enum(11, 'unknownDirection'), Enum(12, 'transferSuccessful'), Enum(13, 'transferFailed')]


class agentTransferDownloadServerAddressType(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 8])
	syntaxobject = InetAddressType


class agentTransferDownloadServerAddress(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 2, 9])
	syntaxobject = InetAddress


class agentImage1(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentImage2(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentActiveImage(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentNextActiveImage(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 9, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentProtocolGroupCreate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentStpConfigDigestKey(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpConfigFormatSelector(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpConfigName(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentStpConfigRevision(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpForceVersion(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dot1d'), Enum(2, 'dot1w'), Enum(3, 'dot1s')]


class agentStpAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentStpCstHelloTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstMaxAge(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstRegionalRootId(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpCstRegionalRootPathCost(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstRootFwdDelay(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstBridgeFwdDelay(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstBridgeHelloTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstBridgeHoldTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstBridgeMaxAge(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 9])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstBridgeMaxHops(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstBridgePriority(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 8, 11])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentAuthenticationListCreate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentUserConfigDefaultAuthenticationList(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSaveConfig(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentClearConfig(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentClearLags(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentClearLoginSessions(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentClearPasswords(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentClearPortStats(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentClearSwitchStats(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentClearTrapLog(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentClearVlan(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentResetSystem(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSaveConfigStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 3, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'notInitiated'), Enum(2, 'savingInProcess'), Enum(3, 'savingComplete'), Enum(4, 'savingFailed')]


class agentCableTesterStatus(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'success'), Enum(3, 'failure'), Enum(4, 'uninitialized')]


class agentCableTesterIfIndex(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentCableTesterCableStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 4, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'normal'), Enum(2, 'open'), Enum(3, 'short'), Enum(4, 'unknown')]


class agentCableTesterMinimumCableLength(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 4, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentCableTesterMaximumCableLength(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 4, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentCableTesterCableFailureLocation(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 4, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


# columns
class agentTrapLogIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 2, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTrapLogSystemTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 2, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentTrapLogTrap(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 2, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentSupportedMibIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSupportedMibName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSupportedMibDescription(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentSwitchCpuProcessIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchCpuProcessName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSwitchCpuProcessPercentageUtilization(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentLoginSessionIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLoginSessionUserName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentLoginSessionIPAddress(ColumnObject):
	access = 4
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentLoginSessionConnectionType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'serial'), Enum(2, 'telnet'), Enum(3, 'ssh')]


class agentLoginSessionIdleTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class agentLoginSessionSessionTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class agentLoginSessionStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentLoginSessionInetAddressType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 8])
	syntaxobject = InetAddressType


class agentLoginSessionInetAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1, 9])
	syntaxobject = InetAddress


class agentUserIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentUserName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentUserPassword(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentUserAccessMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'read'), Enum(2, 'write')]


class agentUserStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentUserAuthenticationType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'hmacmd5'), Enum(3, 'hmacsha')]


class agentUserEncryptionType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'des')]


class agentUserEncryptionPassword(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentLagSummaryLagIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLagSummaryName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentLagSummaryFlushTimer(ColumnObject):
	access = 5
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLagSummaryLinkTrap(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentLagSummaryAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentLagSummaryStpMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dot1d'), Enum(2, 'fast'), Enum(3, 'off'), Enum(4, 'dot1s')]


class agentLagSummaryAddPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLagSummaryDeletePort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLagSummaryStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentLagSummaryType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'static'), Enum(2, 'dynamic')]


class agentLagSummaryStaticCapability(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentLagSummaryHashMode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLagDetailedLagIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLagDetailedIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLagDetailedPortSpeed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class agentLagDetailedPortStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'active'), Enum(2, 'inactive')]


class agentSwitchAddressAgingTimeout(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchStaticMacFilteringVlanId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchStaticMacFilteringAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class agentSwitchStaticMacFilteringSourcePortMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 5, 1, 3])
	syntaxobject = AgentPortMask


class agentSwitchStaticMacFilteringDestPortMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 5, 1, 4])
	syntaxobject = AgentPortMask


class agentSwitchStaticMacFilteringStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 5, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentSwitchSnoopingProtocol(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 6, 1, 1, 1])
	syntaxobject = InetAddressType


class agentSwitchSnoopingAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 6, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchSnoopingPortMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 6, 1, 1, 3])
	syntaxobject = AgentPortMask


class agentSwitchSnoopingMulticastControlFramesProcessed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 6, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentSwitchSnoopingIntfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentSwitchSnoopingIntfAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchSnoopingIntfGroupMembershipInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingIntfMaxResponseTime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingIntfMRPExpirationTime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingIntfFastLeaveAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchSnoopingIntfMulticastRouterMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchSnoopingIntfVlanIDs(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1, 8])
	syntaxobject = VlanList


class agentSwitchSnoopingVlanAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 8, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disable'), Enum(1, 'enable')]


class agentSwitchSnoopingVlanGroupMembershipInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 8, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingVlanMaxResponseTime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 8, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingVlanFastLeaveAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 8, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disable'), Enum(1, 'enable')]


class agentSwitchSnoopingVlanMRPExpirationTime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 8, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchVlanStaticMrouterAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 9, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disable'), Enum(1, 'enable')]


class agentSwitchMFDBVlanId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 1, 1, 1])
	syntaxobject = VlanIndex


class agentSwitchMFDBMacAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class agentSwitchMFDBProtocolType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'static'), Enum(2, 'gmrp'), Enum(3, 'igmp')]


class agentSwitchMFDBType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'static'), Enum(2, 'dynamic')]


class agentSwitchMFDBDescription(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSwitchMFDBForwardingPortMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 1, 1, 6])
	syntaxobject = AgentPortMask


class agentSwitchMFDBFilteringPortMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 1, 1, 7])
	syntaxobject = AgentPortMask


class agentSwitchMFDBSummaryVlanId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 2, 1, 1])
	syntaxobject = VlanIndex


class agentSwitchMFDBSummaryMacAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class agentSwitchMFDBSummaryForwardingPortMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 2, 1, 3])
	syntaxobject = AgentPortMask


class agentDhcpFilteringPortTrustedMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 15, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trusted'), Enum(2, 'untrusted')]


class agentSwitchVlanMacAssociationMacAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 17, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class agentSwitchVlanMacAssociationVlanId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 17, 1, 1, 2])
	syntaxobject = VlanIndex


class agentSwitchVlanMacAssociationRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 17, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentSwitchProtectedPortGroupId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchProtectedPortGroupName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 18, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSwitchProtectedPortPortList(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 18, 1, 1, 3])
	syntaxobject = PortList


class agentSwitchVlanSubnetAssociationIPAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 19, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentSwitchVlanSubnetAssociationSubnetMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 19, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentSwitchVlanSubnetAssociationVlanId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 19, 1, 1, 3])
	syntaxobject = VlanIndex


class agentSwitchVlanSubnetAssociationRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 19, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentSwitchSnoopingQuerierAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSwitchSnoopingQuerierVersion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingQuerierAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 1, 1, 3])
	syntaxobject = InetAddress


class agentSwitchSnoopingQuerierQueryInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingQuerierExpiryInterval(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingQuerierVlanAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disable'), Enum(1, 'enable')]


class agentSwitchSnoopingQuerierVlanOperMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'querier'), Enum(2, 'non-querier')]


class agentSwitchSnoopingQuerierElectionParticipateMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disable'), Enum(1, 'enable')]


class agentSwitchSnoopingQuerierVlanAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1, 4])
	syntaxobject = InetAddress


class agentSwitchSnoopingQuerierOperVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingQuerierOperMaxResponseTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentSwitchSnoopingQuerierLastQuerierAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1, 7])
	syntaxobject = InetAddress


class agentSwitchSnoopingQuerierLastQuerierVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortMirrorSessionNum(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentPortMirrorDestinationPort(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentPortMirrorSourcePortMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10, 4, 1, 3])
	syntaxobject = AgentPortMask


class agentPortMirrorAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable'), Enum(3, 'delete')]


class agentPortMirrorTypeSourcePort(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentPortMirrorTypeType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'tx'), Enum(2, 'rx'), Enum(3, 'txrx')]


class agentDot3adAggPort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentDot3adAggPortLACPMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortDot1dBasePort(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortIanaType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 3])
	syntaxobject = IANAifType


class agentPortSTPMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dot1d'), Enum(2, 'fast'), Enum(3, 'off')]


class agentPortSTPState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'blocking'), Enum(2, 'listening'), Enum(3, 'learning'), Enum(4, 'forwarding'), Enum(5, 'disabled')]


class agentPortAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortPhysicalMode(ColumnObject):
	status = 5
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'auto-negotiate'), Enum(2, 'half-10'), Enum(3, 'full-10'), Enum(4, 'half-100'), Enum(5, 'full-100'), Enum(6, 'half-100fx'), Enum(7, 'full-100fx'), Enum(8, 'full-1000sx'), Enum(9, 'full-10gsx')]


class agentPortPhysicalStatus(ColumnObject):
	status = 5
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'auto-negotiate'), Enum(2, 'half-10'), Enum(3, 'full-10'), Enum(4, 'half-100'), Enum(5, 'full-100'), Enum(6, 'half-100fx'), Enum(7, 'full-100fx'), Enum(8, 'full-1000sx'), Enum(9, 'full-10gsx')]


class agentPortLinkTrapMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortClearStats(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortDefaultType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class agentPortType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.ObjectIdentifier


class agentPortAutoNegAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortDot3FlowControlMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortDVlanTagMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortDVlanTagEthertype(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortDVlanTagCustomerId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortMaxFrameSizeLimit(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortMaxFrameSize(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortBroadcastControlMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortBroadcastControlThreshold(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortMulticastControlMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortMulticastControlThreshold(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortUnicastControlMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentPortUnicastControlThreshold(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortSwitchportMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 26])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'access'), Enum(2, 'trunk'), Enum(3, 'general')]


class agentPortVoiceVlanMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 27])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'none'), Enum(2, 'vlanid'), Enum(3, 'dot1p'), Enum(4, 'untagged'), Enum(5, 'disable')]


class agentPortVoiceVlanID(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 28])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortVoiceVlanPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 29])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentPortVoiceVlanDataPriorityMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 30])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'trust'), Enum(2, 'untrust')]


class agentPortVoiceVlanOperationalStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1, 31])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enabled'), Enum(2, 'disabled')]


class agentProtocolGroupId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentProtocolGroupName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentProtocolGroupVlanId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentProtocolGroupProtocolIP(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentProtocolGroupProtocolARP(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentProtocolGroupProtocolIPX(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentProtocolGroupStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentProtocolGroupPortIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentProtocolGroupPortStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentStpPortState(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentStpPortStatsMstpBpduRx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentStpPortStatsMstpBpduTx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentStpPortStatsRstpBpduRx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentStpPortStatsRstpBpduTx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentStpPortStatsStpBpduRx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentStpPortStatsStpBpduTx(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentStpPortUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class agentStpPortMigrationCheck(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'false'), Enum(1, 'true')]


class agentStpCstPortOperEdge(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentStpCstPortOperPointToPoint(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class agentStpCstPortTopologyChangeAck(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class agentStpCstPortEdge(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentStpCstPortForwardingState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'discarding'), Enum(2, 'learning'), Enum(3, 'forwarding'), Enum(4, 'disabled'), Enum(5, 'manualFwd'), Enum(6, 'notParticipate')]


class agentStpCstPortId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpCstPortPathCost(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstPortPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstDesignatedBridgeId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpCstDesignatedCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpCstDesignatedPortId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpCstExtPortPathCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpMstId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpMstBridgePriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpMstBridgeIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpMstDesignatedRootId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpMstRootPathCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpMstRootPortId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpMstTimeSinceTopologyChange(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class agentStpMstTopologyChangeCount(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentStpMstTopologyChangeParm(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'true'), Enum(2, 'false')]


class agentStpMstRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentStpMstPortForwardingState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 11, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'discarding'), Enum(2, 'learning'), Enum(3, 'forwarding'), Enum(4, 'disabled'), Enum(5, 'manualFwd'), Enum(6, 'notParticipate')]


class agentStpMstPortId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 11, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpMstPortPathCost(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 11, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpMstPortPriority(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 11, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpMstDesignatedBridgeId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 11, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpMstDesignatedCost(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 11, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentStpMstDesignatedPortId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 11, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class agentStpMstVlanRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentAuthenticationListIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentAuthenticationListName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentAuthenticationListMethod1(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'local'), Enum(2, 'radius'), Enum(3, 'reject'), Enum(4, 'tacacs')]


class agentAuthenticationListMethod2(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'undefined'), Enum(2, 'local'), Enum(3, 'radius'), Enum(4, 'reject'), Enum(5, 'tacacs')]


class agentAuthenticationListMethod3(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'undefined'), Enum(2, 'local'), Enum(3, 'radius'), Enum(4, 'reject'), Enum(5, 'tacacs')]


class agentAuthenticationListStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentAuthenticationListMethod4(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'undefined'), Enum(2, 'local'), Enum(3, 'radius'), Enum(4, 'reject'), Enum(5, 'tacacs')]


class agentUserAuthenticationList(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentUserPortSecurity(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 5, 1, 1])
	syntaxobject = AgentPortMask


class agentClassOfServicePortPriority(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 17, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentClassOfServicePortClass(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 17, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLinkDependencyGroupId(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 18, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentLinkDependencyGroupStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 18, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentLinkDependencyGroupMemberPortMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 18, 1, 1, 3])
	syntaxobject = AgentPortMask


class agentLinkDependencyGroupDependsOnPortMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 18, 1, 1, 4])
	syntaxobject = AgentPortMask


# rows 
class agentTrapLogEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentTrapLogIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 2, 4, 1])
	access = 2
	columns = {'agentTrapLogIndex': agentTrapLogIndex, 'agentTrapLogSystemTime': agentTrapLogSystemTime, 'agentTrapLogTrap': agentTrapLogTrap}


class agentSupportedMibEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSupportedMibIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 3, 1])
	access = 2
	columns = {'agentSupportedMibIndex': agentSupportedMibIndex, 'agentSupportedMibName': agentSupportedMibName, 'agentSupportedMibDescription': agentSupportedMibDescription}


class agentSwitchCpuProcessEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchCpuProcessIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 1, 4, 3, 1])
	access = 2
	columns = {'agentSwitchCpuProcessIndex': agentSwitchCpuProcessIndex, 'agentSwitchCpuProcessName': agentSwitchCpuProcessName, 'agentSwitchCpuProcessPercentageUtilization': agentSwitchCpuProcessPercentageUtilization}


class agentLoginSessionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentLoginSessionIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 1, 1])
	access = 2
	rowstatus = agentLoginSessionStatus
	columns = {'agentLoginSessionIndex': agentLoginSessionIndex, 'agentLoginSessionUserName': agentLoginSessionUserName, 'agentLoginSessionIPAddress': agentLoginSessionIPAddress, 'agentLoginSessionConnectionType': agentLoginSessionConnectionType, 'agentLoginSessionIdleTime': agentLoginSessionIdleTime, 'agentLoginSessionSessionTime': agentLoginSessionSessionTime, 'agentLoginSessionStatus': agentLoginSessionStatus, 'agentLoginSessionInetAddressType': agentLoginSessionInetAddressType, 'agentLoginSessionInetAddress': agentLoginSessionInetAddress}


class agentUserConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentUserIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 1, 3, 2, 1])
	access = 2
	rowstatus = agentUserStatus
	columns = {'agentUserIndex': agentUserIndex, 'agentUserName': agentUserName, 'agentUserPassword': agentUserPassword, 'agentUserAccessMode': agentUserAccessMode, 'agentUserStatus': agentUserStatus, 'agentUserAuthenticationType': agentUserAuthenticationType, 'agentUserEncryptionType': agentUserEncryptionType, 'agentUserEncryptionPassword': agentUserEncryptionPassword}


class agentLagSummaryConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentLagSummaryLagIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 2, 1])
	access = 2
	rowstatus = agentLagSummaryStatus
	columns = {'agentLagSummaryLagIndex': agentLagSummaryLagIndex, 'agentLagSummaryName': agentLagSummaryName, 'agentLagSummaryFlushTimer': agentLagSummaryFlushTimer, 'agentLagSummaryLinkTrap': agentLagSummaryLinkTrap, 'agentLagSummaryAdminMode': agentLagSummaryAdminMode, 'agentLagSummaryStpMode': agentLagSummaryStpMode, 'agentLagSummaryAddPort': agentLagSummaryAddPort, 'agentLagSummaryDeletePort': agentLagSummaryDeletePort, 'agentLagSummaryStatus': agentLagSummaryStatus, 'agentLagSummaryType': agentLagSummaryType, 'agentLagSummaryStaticCapability': agentLagSummaryStaticCapability, 'agentLagSummaryHashMode': agentLagSummaryHashMode}


class agentLagDetailedConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentLagDetailedLagIndex, agentLagDetailedIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 2, 3, 1])
	access = 2
	columns = {'agentLagDetailedLagIndex': agentLagDetailedLagIndex, 'agentLagDetailedIfIndex': agentLagDetailedIfIndex, 'agentLagDetailedPortSpeed': agentLagDetailedPortSpeed, 'agentLagDetailedPortStatus': agentLagDetailedPortStatus}


class agentSwitchAddressAgingTimeoutEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dot1qFdbId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 4, 1])
	access = 2
	columns = {'agentSwitchAddressAgingTimeout': agentSwitchAddressAgingTimeout}


class agentSwitchStaticMacFilteringEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchStaticMacFilteringVlanId, agentSwitchStaticMacFilteringAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 5, 1])
	access = 2
	rowstatus = agentSwitchStaticMacFilteringStatus
	columns = {'agentSwitchStaticMacFilteringVlanId': agentSwitchStaticMacFilteringVlanId, 'agentSwitchStaticMacFilteringAddress': agentSwitchStaticMacFilteringAddress, 'agentSwitchStaticMacFilteringSourcePortMask': agentSwitchStaticMacFilteringSourcePortMask, 'agentSwitchStaticMacFilteringDestPortMask': agentSwitchStaticMacFilteringDestPortMask, 'agentSwitchStaticMacFilteringStatus': agentSwitchStaticMacFilteringStatus}


class agentSwitchSnoopingCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchSnoopingProtocol], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 6, 1, 1])
	access = 2
	columns = {'agentSwitchSnoopingProtocol': agentSwitchSnoopingProtocol, 'agentSwitchSnoopingAdminMode': agentSwitchSnoopingAdminMode, 'agentSwitchSnoopingPortMask': agentSwitchSnoopingPortMask, 'agentSwitchSnoopingMulticastControlFramesProcessed': agentSwitchSnoopingMulticastControlFramesProcessed}


class agentSwitchSnoopingIntfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, agentSwitchSnoopingProtocol], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 7, 1, 1])
	access = 2
	columns = {'agentSwitchSnoopingIntfIndex': agentSwitchSnoopingIntfIndex, 'agentSwitchSnoopingIntfAdminMode': agentSwitchSnoopingIntfAdminMode, 'agentSwitchSnoopingIntfGroupMembershipInterval': agentSwitchSnoopingIntfGroupMembershipInterval, 'agentSwitchSnoopingIntfMaxResponseTime': agentSwitchSnoopingIntfMaxResponseTime, 'agentSwitchSnoopingIntfMRPExpirationTime': agentSwitchSnoopingIntfMRPExpirationTime, 'agentSwitchSnoopingIntfFastLeaveAdminMode': agentSwitchSnoopingIntfFastLeaveAdminMode, 'agentSwitchSnoopingIntfMulticastRouterMode': agentSwitchSnoopingIntfMulticastRouterMode, 'agentSwitchSnoopingIntfVlanIDs': agentSwitchSnoopingIntfVlanIDs}


class agentSwitchSnoopingVlanEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dot1qVlanIndex, agentSwitchSnoopingProtocol], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 8, 1, 1])
	access = 2
	columns = {'agentSwitchSnoopingVlanAdminMode': agentSwitchSnoopingVlanAdminMode, 'agentSwitchSnoopingVlanGroupMembershipInterval': agentSwitchSnoopingVlanGroupMembershipInterval, 'agentSwitchSnoopingVlanMaxResponseTime': agentSwitchSnoopingVlanMaxResponseTime, 'agentSwitchSnoopingVlanFastLeaveAdminMode': agentSwitchSnoopingVlanFastLeaveAdminMode, 'agentSwitchSnoopingVlanMRPExpirationTime': agentSwitchSnoopingVlanMRPExpirationTime}


class agentSwitchVlanStaticMrouterEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, dot1qVlanIndex, agentSwitchSnoopingProtocol], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 9, 1, 1])
	access = 2
	columns = {'agentSwitchVlanStaticMrouterAdminMode': agentSwitchVlanStaticMrouterAdminMode}


class agentSwitchMFDBEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchMFDBVlanId, agentSwitchMFDBMacAddress, agentSwitchMFDBProtocolType], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 1, 1])
	access = 2
	columns = {'agentSwitchMFDBVlanId': agentSwitchMFDBVlanId, 'agentSwitchMFDBMacAddress': agentSwitchMFDBMacAddress, 'agentSwitchMFDBProtocolType': agentSwitchMFDBProtocolType, 'agentSwitchMFDBType': agentSwitchMFDBType, 'agentSwitchMFDBDescription': agentSwitchMFDBDescription, 'agentSwitchMFDBForwardingPortMask': agentSwitchMFDBForwardingPortMask, 'agentSwitchMFDBFilteringPortMask': agentSwitchMFDBFilteringPortMask}


class agentSwitchMFDBSummaryEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchMFDBSummaryVlanId, agentSwitchMFDBSummaryMacAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 10, 2, 1])
	access = 2
	columns = {'agentSwitchMFDBSummaryVlanId': agentSwitchMFDBSummaryVlanId, 'agentSwitchMFDBSummaryMacAddress': agentSwitchMFDBSummaryMacAddress, 'agentSwitchMFDBSummaryForwardingPortMask': agentSwitchMFDBSummaryForwardingPortMask}


class agentDhcpFilteringPortConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 15, 2, 1])
	access = 2
	columns = {'agentDhcpFilteringPortTrustedMode': agentDhcpFilteringPortTrustedMode}


class agentSwitchVlanMacAssociationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchVlanMacAssociationMacAddress, agentSwitchVlanMacAssociationVlanId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 17, 1, 1])
	access = 2
	rowstatus = agentSwitchVlanMacAssociationRowStatus
	columns = {'agentSwitchVlanMacAssociationMacAddress': agentSwitchVlanMacAssociationMacAddress, 'agentSwitchVlanMacAssociationVlanId': agentSwitchVlanMacAssociationVlanId, 'agentSwitchVlanMacAssociationRowStatus': agentSwitchVlanMacAssociationRowStatus}


class agentSwitchProtectedPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchProtectedPortGroupId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 18, 1, 1])
	access = 2
	columns = {'agentSwitchProtectedPortGroupId': agentSwitchProtectedPortGroupId, 'agentSwitchProtectedPortGroupName': agentSwitchProtectedPortGroupName, 'agentSwitchProtectedPortPortList': agentSwitchProtectedPortPortList}


class agentSwitchVlanSubnetAssociationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchVlanSubnetAssociationIPAddress, agentSwitchVlanSubnetAssociationSubnetMask, agentSwitchVlanSubnetAssociationVlanId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 19, 1, 1])
	access = 2
	rowstatus = agentSwitchVlanSubnetAssociationRowStatus
	columns = {'agentSwitchVlanSubnetAssociationIPAddress': agentSwitchVlanSubnetAssociationIPAddress, 'agentSwitchVlanSubnetAssociationSubnetMask': agentSwitchVlanSubnetAssociationSubnetMask, 'agentSwitchVlanSubnetAssociationVlanId': agentSwitchVlanSubnetAssociationVlanId, 'agentSwitchVlanSubnetAssociationRowStatus': agentSwitchVlanSubnetAssociationRowStatus}


class agentSwitchSnoopingQuerierCfgEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentSwitchSnoopingProtocol], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 1, 1])
	access = 2
	columns = {'agentSwitchSnoopingQuerierAdminMode': agentSwitchSnoopingQuerierAdminMode, 'agentSwitchSnoopingQuerierVersion': agentSwitchSnoopingQuerierVersion, 'agentSwitchSnoopingQuerierAddress': agentSwitchSnoopingQuerierAddress, 'agentSwitchSnoopingQuerierQueryInterval': agentSwitchSnoopingQuerierQueryInterval, 'agentSwitchSnoopingQuerierExpiryInterval': agentSwitchSnoopingQuerierExpiryInterval}


class agentSwitchSnoopingQuerierVlanEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dot1qVlanIndex, agentSwitchSnoopingProtocol], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 8, 20, 2, 1])
	access = 2
	columns = {'agentSwitchSnoopingQuerierVlanAdminMode': agentSwitchSnoopingQuerierVlanAdminMode, 'agentSwitchSnoopingQuerierVlanOperMode': agentSwitchSnoopingQuerierVlanOperMode, 'agentSwitchSnoopingQuerierElectionParticipateMode': agentSwitchSnoopingQuerierElectionParticipateMode, 'agentSwitchSnoopingQuerierVlanAddress': agentSwitchSnoopingQuerierVlanAddress, 'agentSwitchSnoopingQuerierOperVersion': agentSwitchSnoopingQuerierOperVersion, 'agentSwitchSnoopingQuerierOperMaxResponseTime': agentSwitchSnoopingQuerierOperMaxResponseTime, 'agentSwitchSnoopingQuerierLastQuerierAddress': agentSwitchSnoopingQuerierLastQuerierAddress, 'agentSwitchSnoopingQuerierLastQuerierVersion': agentSwitchSnoopingQuerierLastQuerierVersion}


class agentPortMirrorEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentPortMirrorSessionNum], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10, 4, 1])
	access = 2
	columns = {'agentPortMirrorSessionNum': agentPortMirrorSessionNum, 'agentPortMirrorDestinationPort': agentPortMirrorDestinationPort, 'agentPortMirrorSourcePortMask': agentPortMirrorSourcePortMask, 'agentPortMirrorAdminMode': agentPortMirrorAdminMode}


class agentPortMirrorTypeEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentPortMirrorSessionNum, agentPortMirrorTypeSourcePort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 10, 5, 1])
	access = 2
	columns = {'agentPortMirrorTypeSourcePort': agentPortMirrorTypeSourcePort, 'agentPortMirrorTypeType': agentPortMirrorTypeType}


class agentDot3adAggPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentDot3adAggPort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 12, 1])
	access = 2
	columns = {'agentDot3adAggPort': agentDot3adAggPort, 'agentDot3adAggPortLACPMode': agentDot3adAggPortLACPMode}


class agentPortConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentPortDot1dBasePort], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 13, 1])
	access = 2
	columns = {'agentPortDot1dBasePort': agentPortDot1dBasePort, 'agentPortIfIndex': agentPortIfIndex, 'agentPortIanaType': agentPortIanaType, 'agentPortSTPMode': agentPortSTPMode, 'agentPortSTPState': agentPortSTPState, 'agentPortAdminMode': agentPortAdminMode, 'agentPortPhysicalMode': agentPortPhysicalMode, 'agentPortPhysicalStatus': agentPortPhysicalStatus, 'agentPortLinkTrapMode': agentPortLinkTrapMode, 'agentPortClearStats': agentPortClearStats, 'agentPortDefaultType': agentPortDefaultType, 'agentPortType': agentPortType, 'agentPortAutoNegAdminStatus': agentPortAutoNegAdminStatus, 'agentPortDot3FlowControlMode': agentPortDot3FlowControlMode, 'agentPortDVlanTagMode': agentPortDVlanTagMode, 'agentPortDVlanTagEthertype': agentPortDVlanTagEthertype, 'agentPortDVlanTagCustomerId': agentPortDVlanTagCustomerId, 'agentPortMaxFrameSizeLimit': agentPortMaxFrameSizeLimit, 'agentPortMaxFrameSize': agentPortMaxFrameSize, 'agentPortBroadcastControlMode': agentPortBroadcastControlMode, 'agentPortBroadcastControlThreshold': agentPortBroadcastControlThreshold, 'agentPortMulticastControlMode': agentPortMulticastControlMode, 'agentPortMulticastControlThreshold': agentPortMulticastControlThreshold, 'agentPortUnicastControlMode': agentPortUnicastControlMode, 'agentPortUnicastControlThreshold': agentPortUnicastControlThreshold, 'agentPortSwitchportMode': agentPortSwitchportMode, 'agentPortVoiceVlanMode': agentPortVoiceVlanMode, 'agentPortVoiceVlanID': agentPortVoiceVlanID, 'agentPortVoiceVlanPriority': agentPortVoiceVlanPriority, 'agentPortVoiceVlanDataPriorityMode': agentPortVoiceVlanDataPriorityMode, 'agentPortVoiceVlanOperationalStatus': agentPortVoiceVlanOperationalStatus}


class agentProtocolGroupEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentProtocolGroupId], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 2, 1])
	access = 2
	rowstatus = agentProtocolGroupStatus
	columns = {'agentProtocolGroupId': agentProtocolGroupId, 'agentProtocolGroupName': agentProtocolGroupName, 'agentProtocolGroupVlanId': agentProtocolGroupVlanId, 'agentProtocolGroupProtocolIP': agentProtocolGroupProtocolIP, 'agentProtocolGroupProtocolARP': agentProtocolGroupProtocolARP, 'agentProtocolGroupProtocolIPX': agentProtocolGroupProtocolIPX, 'agentProtocolGroupStatus': agentProtocolGroupStatus}


class agentProtocolGroupPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentProtocolGroupId, agentProtocolGroupPortIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 14, 3, 1])
	access = 2
	rowstatus = agentProtocolGroupPortStatus
	columns = {'agentProtocolGroupPortIfIndex': agentProtocolGroupPortIfIndex, 'agentProtocolGroupPortStatus': agentProtocolGroupPortStatus}


class agentStpPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 7, 1])
	access = 2
	columns = {'agentStpPortState': agentStpPortState, 'agentStpPortStatsMstpBpduRx': agentStpPortStatsMstpBpduRx, 'agentStpPortStatsMstpBpduTx': agentStpPortStatsMstpBpduTx, 'agentStpPortStatsRstpBpduRx': agentStpPortStatsRstpBpduRx, 'agentStpPortStatsRstpBpduTx': agentStpPortStatsRstpBpduTx, 'agentStpPortStatsStpBpduRx': agentStpPortStatsStpBpduRx, 'agentStpPortStatsStpBpduTx': agentStpPortStatsStpBpduTx, 'agentStpPortUpTime': agentStpPortUpTime, 'agentStpPortMigrationCheck': agentStpPortMigrationCheck}


class agentStpCstPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 9, 1])
	access = 2
	columns = {'agentStpCstPortOperEdge': agentStpCstPortOperEdge, 'agentStpCstPortOperPointToPoint': agentStpCstPortOperPointToPoint, 'agentStpCstPortTopologyChangeAck': agentStpCstPortTopologyChangeAck, 'agentStpCstPortEdge': agentStpCstPortEdge, 'agentStpCstPortForwardingState': agentStpCstPortForwardingState, 'agentStpCstPortId': agentStpCstPortId, 'agentStpCstPortPathCost': agentStpCstPortPathCost, 'agentStpCstPortPriority': agentStpCstPortPriority, 'agentStpCstDesignatedBridgeId': agentStpCstDesignatedBridgeId, 'agentStpCstDesignatedCost': agentStpCstDesignatedCost, 'agentStpCstDesignatedPortId': agentStpCstDesignatedPortId, 'agentStpCstExtPortPathCost': agentStpCstExtPortPathCost}


class agentStpMstEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentStpMstId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 10, 1])
	access = 2
	rowstatus = agentStpMstRowStatus
	columns = {'agentStpMstId': agentStpMstId, 'agentStpMstBridgePriority': agentStpMstBridgePriority, 'agentStpMstBridgeIdentifier': agentStpMstBridgeIdentifier, 'agentStpMstDesignatedRootId': agentStpMstDesignatedRootId, 'agentStpMstRootPathCost': agentStpMstRootPathCost, 'agentStpMstRootPortId': agentStpMstRootPortId, 'agentStpMstTimeSinceTopologyChange': agentStpMstTimeSinceTopologyChange, 'agentStpMstTopologyChangeCount': agentStpMstTopologyChangeCount, 'agentStpMstTopologyChangeParm': agentStpMstTopologyChangeParm, 'agentStpMstRowStatus': agentStpMstRowStatus}


class agentStpMstPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentStpMstId, ifIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 11, 1])
	access = 2
	columns = {'agentStpMstPortForwardingState': agentStpMstPortForwardingState, 'agentStpMstPortId': agentStpMstPortId, 'agentStpMstPortPathCost': agentStpMstPortPathCost, 'agentStpMstPortPriority': agentStpMstPortPriority, 'agentStpMstDesignatedBridgeId': agentStpMstDesignatedBridgeId, 'agentStpMstDesignatedCost': agentStpMstDesignatedCost, 'agentStpMstDesignatedPortId': agentStpMstDesignatedPortId}


class agentStpMstVlanEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentStpMstId, dot1qVlanIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 15, 12, 1])
	access = 2
	rowstatus = agentStpMstVlanRowStatus
	columns = {'agentStpMstVlanRowStatus': agentStpMstVlanRowStatus}


class agentAuthenticationListEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentAuthenticationListIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 2, 1])
	access = 2
	rowstatus = agentAuthenticationListStatus
	columns = {'agentAuthenticationListIndex': agentAuthenticationListIndex, 'agentAuthenticationListName': agentAuthenticationListName, 'agentAuthenticationListMethod1': agentAuthenticationListMethod1, 'agentAuthenticationListMethod2': agentAuthenticationListMethod2, 'agentAuthenticationListMethod3': agentAuthenticationListMethod3, 'agentAuthenticationListStatus': agentAuthenticationListStatus, 'agentAuthenticationListMethod4': agentAuthenticationListMethod4}


from FASTPATH_SWITCHING_MIB import agentUserIndex
class agentUserAuthenticationConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentUserIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 4, 1])
	access = 2
	columns = {'agentUserAuthenticationList': agentUserAuthenticationList}


from FASTPATH_SWITCHING_MIB import agentUserIndex
class agentUserPortConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentUserIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 16, 5, 1])
	access = 2
	columns = {'agentUserPortSecurity': agentUserPortSecurity}


class agentClassOfServicePortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([ifIndex, agentClassOfServicePortPriority], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 17, 1, 1])
	access = 2
	columns = {'agentClassOfServicePortPriority': agentClassOfServicePortPriority, 'agentClassOfServicePortClass': agentClassOfServicePortClass}


class agentLinkDependencyGroupEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentLinkDependencyGroupId], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 2, 18, 1, 1])
	access = 2
	rowstatus = agentLinkDependencyGroupStatus
	columns = {'agentLinkDependencyGroupId': agentLinkDependencyGroupId, 'agentLinkDependencyGroupStatus': agentLinkDependencyGroupStatus, 'agentLinkDependencyGroupMemberPortMask': agentLinkDependencyGroupMemberPortMask, 'agentLinkDependencyGroupDependsOnPortMask': agentLinkDependencyGroupDependsOnPortMask}


# notifications (traps) 
class multipleUsersTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 1])

class broadcastStormStartTrap(NotificationObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 2])

class broadcastStormEndTrap(NotificationObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 3])

class linkFailureTrap(NotificationObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 4])

class vlanRequestFailureTrap(NotificationObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 5])

class vlanDeleteLastTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 6])

class vlanDefaultCfgFailureTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 7])

class vlanRestoreFailureTrap(NotificationObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 8])

class fanFailureTrap(NotificationObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 9])

class stpInstanceNewRootTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 10])

class stpInstanceTopologyChangeTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 11])

class powerSupplyStatusChangeTrap(NotificationObject):
	status = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 12])

class failedUserLoginTrap(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 1, 0, 13])

# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
