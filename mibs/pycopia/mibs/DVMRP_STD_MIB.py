# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from LVL7_REF_MIB import fastPath
from IF_MIB import InterfaceIndexOrZero, InterfaceIndex
from SNMP_FRAMEWORK_MIB import SnmpAdminString
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, mib_2, Integer32, Counter32, Gauge32, NOTIFICATION_TYPE, IpAddress, TimeTicks
from SNMPv2_TC import DisplayString, RowStatus

class DVMRP_STD_MIB(ModuleObject):
	path = '/usr/share/mibs/site/DVMRP-STD-MIB'
	conformance = 5
	name = 'DVMRP-STD-MIB'
	language = 2
	description = 'The MIB module for management of DVMRP routers.'

# nodes
class dvmrpStdMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10])
	name = 'dvmrpStdMIB'

class dvmrpMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1])
	name = 'dvmrpMIBObjects'

class dvmrp(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1])
	name = 'dvmrp'

class dvmrpScalar(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 1])
	name = 'dvmrpScalar'

class dvmrpTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 7])
	name = 'dvmrpTraps'

class dvmrpMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2])
	name = 'dvmrpMIBConformance'

class dvmrpMIBCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 1])
	name = 'dvmrpMIBCompliances'

class dvmrpMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 2])
	name = 'dvmrpMIBGroups'


# macros
# types 
# scalars 
class dvmrpVersionString(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class dvmrpGenerationId(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dvmrpNumRoutes(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class dvmrpReachableRoutes(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


# columns
class dvmrpInterfaceIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 1])
	syntaxobject = InterfaceIndex


class dvmrpInterfaceLocalAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpInterfaceMetric(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dvmrpInterfaceStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class dvmrpInterfaceRcvBadPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dvmrpInterfaceRcvBadRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dvmrpInterfaceSentRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dvmrpInterfaceInterfaceKey(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 8])
	syntaxobject = SnmpAdminString


class dvmrpInterfaceInterfaceKeyVersion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dvmrpNeighborIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 1])
	syntaxobject = InterfaceIndex


class dvmrpNeighborAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpNeighborUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class dvmrpNeighborExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class dvmrpNeighborGenerationId(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dvmrpNeighborMajorVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dvmrpNeighborMinorVersion(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dvmrpNeighborCapabilities(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class dvmrpNeighborRcvRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dvmrpNeighborRcvBadPkts(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dvmrpNeighborRcvBadRoutes(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class dvmrpNeighborState(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'oneway'), Enum(2, 'active'), Enum(3, 'ignoring'), Enum(4, 'down')]


class dvmrpRouteSource(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpRouteSourceMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpRouteUpstreamNeighbor(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpRouteIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 4, 1, 4])
	syntaxobject = InterfaceIndexOrZero


class dvmrpRouteMetric(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class dvmrpRouteExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class dvmrpRouteUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class dvmrpRouteNextHopSource(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpRouteNextHopSourceMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpRouteNextHopIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 5, 1, 3])
	syntaxobject = InterfaceIndex


class dvmrpRouteNextHopType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'leaf'), Enum(2, 'branch')]


class dvmrpPruneGroup(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpPruneSource(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 6, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpPruneSourceMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class dvmrpPruneExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 6, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


# rows 
class dvmrpInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dvmrpInterfaceIfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 2, 1])
	access = 2
	rowstatus = dvmrpInterfaceStatus
	columns = {'dvmrpInterfaceIfIndex': dvmrpInterfaceIfIndex, 'dvmrpInterfaceLocalAddress': dvmrpInterfaceLocalAddress, 'dvmrpInterfaceMetric': dvmrpInterfaceMetric, 'dvmrpInterfaceStatus': dvmrpInterfaceStatus, 'dvmrpInterfaceRcvBadPkts': dvmrpInterfaceRcvBadPkts, 'dvmrpInterfaceRcvBadRoutes': dvmrpInterfaceRcvBadRoutes, 'dvmrpInterfaceSentRoutes': dvmrpInterfaceSentRoutes, 'dvmrpInterfaceInterfaceKey': dvmrpInterfaceInterfaceKey, 'dvmrpInterfaceInterfaceKeyVersion': dvmrpInterfaceInterfaceKeyVersion}


class dvmrpNeighborEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dvmrpNeighborIfIndex, dvmrpNeighborAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 3, 1])
	access = 2
	columns = {'dvmrpNeighborIfIndex': dvmrpNeighborIfIndex, 'dvmrpNeighborAddress': dvmrpNeighborAddress, 'dvmrpNeighborUpTime': dvmrpNeighborUpTime, 'dvmrpNeighborExpiryTime': dvmrpNeighborExpiryTime, 'dvmrpNeighborGenerationId': dvmrpNeighborGenerationId, 'dvmrpNeighborMajorVersion': dvmrpNeighborMajorVersion, 'dvmrpNeighborMinorVersion': dvmrpNeighborMinorVersion, 'dvmrpNeighborCapabilities': dvmrpNeighborCapabilities, 'dvmrpNeighborRcvRoutes': dvmrpNeighborRcvRoutes, 'dvmrpNeighborRcvBadPkts': dvmrpNeighborRcvBadPkts, 'dvmrpNeighborRcvBadRoutes': dvmrpNeighborRcvBadRoutes, 'dvmrpNeighborState': dvmrpNeighborState}


class dvmrpRouteEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dvmrpRouteSource, dvmrpRouteSourceMask], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 4, 1])
	access = 2
	columns = {'dvmrpRouteSource': dvmrpRouteSource, 'dvmrpRouteSourceMask': dvmrpRouteSourceMask, 'dvmrpRouteUpstreamNeighbor': dvmrpRouteUpstreamNeighbor, 'dvmrpRouteIfIndex': dvmrpRouteIfIndex, 'dvmrpRouteMetric': dvmrpRouteMetric, 'dvmrpRouteExpiryTime': dvmrpRouteExpiryTime, 'dvmrpRouteUpTime': dvmrpRouteUpTime}


class dvmrpRouteNextHopEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dvmrpRouteNextHopSource, dvmrpRouteNextHopSourceMask, dvmrpRouteNextHopIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 5, 1])
	access = 2
	columns = {'dvmrpRouteNextHopSource': dvmrpRouteNextHopSource, 'dvmrpRouteNextHopSourceMask': dvmrpRouteNextHopSourceMask, 'dvmrpRouteNextHopIfIndex': dvmrpRouteNextHopIfIndex, 'dvmrpRouteNextHopType': dvmrpRouteNextHopType}


class dvmrpPruneEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([dvmrpPruneGroup, dvmrpPruneSource, dvmrpPruneSourceMask], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 6, 1])
	access = 2
	columns = {'dvmrpPruneGroup': dvmrpPruneGroup, 'dvmrpPruneSource': dvmrpPruneSource, 'dvmrpPruneSourceMask': dvmrpPruneSourceMask, 'dvmrpPruneExpiryTime': dvmrpPruneExpiryTime}


# notifications (traps) 
class dvmrpNeighborLoss(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 7, 1])

class dvmrpNeighborNotPruning(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 1, 1, 7, 2])

# groups 
class dvmrpGeneralGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 2, 2])
	group = [dvmrpVersionString, dvmrpGenerationId, dvmrpNumRoutes, dvmrpReachableRoutes]

class dvmrpInterfaceGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 2, 3])
	group = [dvmrpInterfaceLocalAddress, dvmrpInterfaceMetric, dvmrpInterfaceStatus, dvmrpInterfaceRcvBadPkts, dvmrpInterfaceRcvBadRoutes, dvmrpInterfaceSentRoutes]

class dvmrpNeighborGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 2, 4])
	group = [dvmrpNeighborUpTime, dvmrpNeighborExpiryTime, dvmrpNeighborGenerationId, dvmrpNeighborMajorVersion, dvmrpNeighborMinorVersion, dvmrpNeighborCapabilities, dvmrpNeighborRcvRoutes, dvmrpNeighborRcvBadPkts, dvmrpNeighborRcvBadRoutes, dvmrpNeighborState]

class dvmrpRoutingGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 2, 5])
	group = [dvmrpRouteUpstreamNeighbor, dvmrpRouteIfIndex, dvmrpRouteMetric, dvmrpRouteExpiryTime, dvmrpRouteUpTime, dvmrpRouteNextHopType]

class dvmrpSecurityGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 2, 6])
	group = [dvmrpInterfaceInterfaceKey, dvmrpInterfaceInterfaceKeyVersion]

class dvmrpTreeGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 2, 7])
	group = [dvmrpPruneExpiryTime]

class dvmrpNotificationGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 10, 2, 2, 8])
	group = [dvmrpNeighborLoss, dvmrpNeighborNotPruning]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
