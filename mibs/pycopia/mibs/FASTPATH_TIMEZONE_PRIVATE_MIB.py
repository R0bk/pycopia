# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32
from RFC1213_MIB import DisplayString
from LVL7_REF_MIB import fastPath

class FASTPATH_TIMEZONE_PRIVATE_MIB(ModuleObject):
	path = '/usr/share/mibs/site/FASTPATH-TIMEZONE-PRIVATE-MIB'
	conformance = 2
	name = 'FASTPATH-TIMEZONE-PRIVATE-MIB'
	language = 2
	description = 'The LVL7 Private MIB for FASTPATH  for system time, timezone and summer-time settings'

# nodes
class fastPathTimeZonePrivate(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32])
	name = 'fastPathTimeZonePrivate'

class agentSystemTimeGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 1])
	name = 'agentSystemTimeGroup'

class agentTimeZoneGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 2])
	name = 'agentTimeZoneGroup'

class agentSummerTimeGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3])
	name = 'agentSummerTimeGroup'

class agentSummerTimeRecurringGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2])
	name = 'agentSummerTimeRecurringGroup'

class agentSummerTimeNonRecurringGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3])
	name = 'agentSummerTimeNonRecurringGroup'


# macros
# types 
# scalars 
class agentSystemTime(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSystemDate(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSystemTimeZoneAcronym(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSystemTimeSource(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'sntp')]


class agentSystemSummerTimeState(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'disabled'), Enum(1, 'enabled')]


class agentTimeZoneHoursOffset(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTimeZoneMinutesOffset(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTimeZoneAcronym(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentSummerTimeMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'noSummertime'), Enum(1, 'recurring'), Enum(2, 'recurringEu'), Enum(3, 'recurringUsa'), Enum(4, 'nonrecurring')]


class agentStRecurringStartingWeek(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'first'), Enum(2, 'second'), Enum(3, 'third'), Enum(4, 'fourth'), Enum(5, 'last')]


class agentStRecurringStartingDay(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'sun'), Enum(2, 'mon'), Enum(3, 'tue'), Enum(4, 'wed'), Enum(5, 'thu'), Enum(6, 'fri'), Enum(7, 'sat')]


class agentStRecurringStartingMonth(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'jan'), Enum(2, 'feb'), Enum(3, 'mar'), Enum(4, 'apr'), Enum(5, 'may'), Enum(6, 'jun'), Enum(7, 'jul'), Enum(8, 'aug'), Enum(9, 'sep'), Enum(10, 'oct'), Enum(11, 'nov'), Enum(12, 'dec')]


class agentStRecurringStartingTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentStRecurringEndingWeek(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'first'), Enum(2, 'second'), Enum(3, 'third'), Enum(4, 'fourth'), Enum(5, 'last')]


class agentStRecurringEndingDay(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'sun'), Enum(2, 'mon'), Enum(3, 'tue'), Enum(4, 'wed'), Enum(5, 'thu'), Enum(6, 'fri'), Enum(7, 'sat')]


class agentStRecurringEndingMonth(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'jan'), Enum(2, 'feb'), Enum(3, 'mar'), Enum(4, 'apr'), Enum(5, 'may'), Enum(6, 'jun'), Enum(7, 'jul'), Enum(8, 'aug'), Enum(9, 'sep'), Enum(10, 'oct'), Enum(11, 'nov'), Enum(12, 'dec')]


class agentStRecurringEndingTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentStRecurringZoneAcronym(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 9])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentStRecurringZoneOffset(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 2, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentStNonRecurringStartingDay(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentStNonRecurringStartingMonth(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'jan'), Enum(2, 'feb'), Enum(3, 'mar'), Enum(4, 'apr'), Enum(5, 'may'), Enum(6, 'jun'), Enum(7, 'jul'), Enum(8, 'aug'), Enum(9, 'sep'), Enum(10, 'oct'), Enum(11, 'nov'), Enum(12, 'dec')]


class agentStNonRecurringStartingYear(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentStNonRecurringStartingTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentStNonRecurringEndingDay(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentStNonRecurringEndingMonth(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'jan'), Enum(2, 'feb'), Enum(3, 'mar'), Enum(4, 'apr'), Enum(5, 'may'), Enum(6, 'jun'), Enum(7, 'jul'), Enum(8, 'aug'), Enum(9, 'sep'), Enum(10, 'oct'), Enum(11, 'nov'), Enum(12, 'dec')]


class agentStNonRecurringEndingYear(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 7])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentStNonRecurringEndingTime(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentStNonRecurringZoneOffset(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 9])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentStNonRecurringZoneAcronym(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 32, 3, 3, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


# columns
# rows 
# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
