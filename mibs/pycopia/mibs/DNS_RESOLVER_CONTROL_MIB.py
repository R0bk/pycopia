# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, IpAddress, Counter32, Integer32
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from LVL7_REF_MIB import fastPath
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, DisplayString, TruthValue

class DNS_RESOLVER_CONTROL_MIB(ModuleObject):
	path = '/usr/share/mibs/site/DNS-RESOLVER-CONTROL-MIB'
	conformance = 4
	name = 'DNS-RESOLVER-CONTROL-MIB'
	language = 2
	description = 'This MIB module defines a portion of the SNMP MIB under\nthe LVL7 Systems enterprise OID pertaining to\nDNS Client control configuration'

# nodes
class dnsResControlMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201])
	name = 'dnsResControlMIB'

class dnsResCtlMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1])
	name = 'dnsResCtlMIBObjects'

class resCtlglobal(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 1])
	name = 'resCtlglobal'

class resCtlStaticServConfig(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 2])
	name = 'resCtlStaticServConfig'


# macros
# types 

class DnsCacheEntryType(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'dnsCacheAddresstype'), Enum(2, 'dnsCacheCnametye')]

# scalars 
class resCtlAdminMode(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class resCtlDefDomainName(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class resCtlCacheFlushStatus(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'dnsCacheFlushEnable'), Enum(2, 'dnsCacheFlushDisable')]


# columns
class resCtlStaticHostName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.OctetString


class resCtlStaticIPAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 2, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class resCtlStaticNameServerStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 2, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class resCtlStaticServEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([resCtlStaticHostName, resCtlStaticIPAddress], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 201, 1, 2, 1, 1])
	access = 2
	rowstatus = resCtlStaticNameServerStatus
	columns = {'resCtlStaticHostName': resCtlStaticHostName, 'resCtlStaticIPAddress': resCtlStaticIPAddress, 'resCtlStaticNameServerStatus': resCtlStaticNameServerStatus}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
