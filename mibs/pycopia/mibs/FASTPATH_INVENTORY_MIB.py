# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, Integer32, Unsigned32, TimeTicks, NOTIFICATION_TYPE
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from LVL7_REF_MIB import fastPath
from SNMPv2_TC import TEXTUAL_CONVENTION, DisplayString, RowStatus

class FASTPATH_INVENTORY_MIB(ModuleObject):
	path = '/usr/share/mibs/site/FASTPATH-INVENTORY-MIB'
	conformance = 2
	name = 'FASTPATH-INVENTORY-MIB'
	language = 2
	description = 'This MIB defines the objects used for FastPath to\nconfigure and report information and status of units,\nslots and supported cards.'

# nodes
class fastPathInventory(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13])
	name = 'fastPathInventory'

class agentInventoryTraps(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 0])
	name = 'agentInventoryTraps'

class agentInventoryStackGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 1])
	name = 'agentInventoryStackGroup'

class agentInventoryUnitGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2])
	name = 'agentInventoryUnitGroup'

class agentInventorySlotGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3])
	name = 'agentInventorySlotGroup'

class agentInventoryCardGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 4])
	name = 'agentInventoryCardGroup'

class agentInventoryComponentGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 5])
	name = 'agentInventoryComponentGroup'

class fastPathInventoryConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 6])
	name = 'fastPathInventoryConformance'

class fastPathInventoryCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 6, 1])
	name = 'fastPathInventoryCompliances'

class fastPathInventoryGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 6, 2])
	name = 'fastPathInventoryGroups'

class agentInventoryStackPortGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7])
	name = 'agentInventoryStackPortGroup'


# macros
# types 

class AgentInventoryUnitPreference(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(0, 'disabled'), Enum(1, 'unsassigned'), Enum(2, 'assigned')]


class AgentInventoryUnitType(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	format = 'x'


class AgentInventoryCardType(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	format = 'x'

# scalars 
class agentInventoryStackReplicateSTK(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventoryStackReload(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventoryStackMaxUnitNumber(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryStackReplicateSTKStatus(ScalarObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inProgress'), Enum(2, 'notInProgress'), Enum(3, 'finishedWithSuccess'), Enum(4, 'finishedWithError')]


class agentInventoryStackSTKname(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'image1'), Enum(3, 'image2')]


class agentInventoryStackActivateSTK(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventoryStackDeleteSTK(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventoryStackPortIpTelephonyQOSSupport(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


# columns
class agentInventorySupportedUnitIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventorySupportedUnitModelIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventorySupportedUnitDescription(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventorySupportedUnitExpectedCodeVer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryUnitNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryUnitAssignNumber(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryUnitType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 3])
	syntaxobject = AgentInventoryUnitType


class agentInventoryUnitSupportedUnitIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryUnitMgmtAdmin(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'mgmtUnit'), Enum(2, 'stackUnit'), Enum(3, 'mgmtUnassigned')]


class agentInventoryUnitHWMgmtPref(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 7])
	syntaxobject = AgentInventoryUnitPreference


class agentInventoryUnitHWMgmtPrefValue(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryUnitAdminMgmtPref(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 9])
	syntaxobject = AgentInventoryUnitPreference


class agentInventoryUnitAdminMgmtPrefValue(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryUnitStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ok'), Enum(2, 'unsupported'), Enum(3, 'codeMismatch'), Enum(4, 'configMismatch'), Enum(5, 'notPresent')]


class agentInventoryUnitDetectedCodeVer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryUnitDetectedCodeInFlashVer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryUnitUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class agentInventoryUnitDescription(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryUnitReplicateSTK(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 16])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventoryUnitReload(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 17])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventoryUnitRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 18])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentInventoryUnitSerialNumber(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 19])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryUnitImage1Version(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 20])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryUnitImage2Version(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 21])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryUnitSTKname(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 22])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(2, 'image1'), Enum(3, 'image2')]


class agentInventoryUnitActivateSTK(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 23])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventoryUnitDeleteSTK(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 24])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventoryUnitReplicateSTKStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1, 25])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'inProgress'), Enum(2, 'notInProgress'), Enum(3, 'finishedWithSuccess'), Enum(4, 'finishedWithError')]


class agentInventorySlotNumber(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventorySlotStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'empty'), Enum(2, 'full'), Enum(3, 'error')]


class agentInventorySlotPowerMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventorySlotAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3, 1, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentInventorySlotInsertedCardType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3, 1, 1, 6])
	syntaxobject = AgentInventoryCardType


class agentInventorySlotConfiguredCardType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3, 1, 1, 7])
	syntaxobject = AgentInventoryCardType


class agentInventorySlotCapabilities(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class agentInventoryCardIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 4, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryCardType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 4, 1, 1, 2])
	syntaxobject = AgentInventoryCardType


class agentInventoryCardModelIdentifier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 4, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryCardDescription(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 4, 1, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryComponentIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 5, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryComponentMnemonic(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 5, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryComponentName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 5, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryStackPortIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryStackPortUnit(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentInventoryStackPortTag(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentInventoryStackPortConfiguredStackMode(ColumnObject):
	status = 2
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stack'), Enum(2, 'ethernet')]


class agentInventoryStackPortRunningStackMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'stack'), Enum(2, 'ethernet')]


class agentInventoryStackPortLinkStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down')]


class agentInventoryStackPortLinkSpeed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class agentInventoryStackPortDataRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentInventoryStackPortErrorRate(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentInventoryStackPortTotalErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


# rows 
class agentInventorySupportedUnitEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentInventorySupportedUnitIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 1, 1])
	access = 2
	columns = {'agentInventorySupportedUnitIndex': agentInventorySupportedUnitIndex, 'agentInventorySupportedUnitModelIdentifier': agentInventorySupportedUnitModelIdentifier, 'agentInventorySupportedUnitDescription': agentInventorySupportedUnitDescription, 'agentInventorySupportedUnitExpectedCodeVer': agentInventorySupportedUnitExpectedCodeVer}


class agentInventoryUnitEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentInventoryUnitNumber], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 2, 2, 1])
	access = 2
	rowstatus = agentInventoryUnitRowStatus
	columns = {'agentInventoryUnitNumber': agentInventoryUnitNumber, 'agentInventoryUnitAssignNumber': agentInventoryUnitAssignNumber, 'agentInventoryUnitType': agentInventoryUnitType, 'agentInventoryUnitSupportedUnitIndex': agentInventoryUnitSupportedUnitIndex, 'agentInventoryUnitMgmtAdmin': agentInventoryUnitMgmtAdmin, 'agentInventoryUnitHWMgmtPref': agentInventoryUnitHWMgmtPref, 'agentInventoryUnitHWMgmtPrefValue': agentInventoryUnitHWMgmtPrefValue, 'agentInventoryUnitAdminMgmtPref': agentInventoryUnitAdminMgmtPref, 'agentInventoryUnitAdminMgmtPrefValue': agentInventoryUnitAdminMgmtPrefValue, 'agentInventoryUnitStatus': agentInventoryUnitStatus, 'agentInventoryUnitDetectedCodeVer': agentInventoryUnitDetectedCodeVer, 'agentInventoryUnitDetectedCodeInFlashVer': agentInventoryUnitDetectedCodeInFlashVer, 'agentInventoryUnitUpTime': agentInventoryUnitUpTime, 'agentInventoryUnitDescription': agentInventoryUnitDescription, 'agentInventoryUnitReplicateSTK': agentInventoryUnitReplicateSTK, 'agentInventoryUnitReload': agentInventoryUnitReload, 'agentInventoryUnitRowStatus': agentInventoryUnitRowStatus, 'agentInventoryUnitSerialNumber': agentInventoryUnitSerialNumber, 'agentInventoryUnitImage1Version': agentInventoryUnitImage1Version, 'agentInventoryUnitImage2Version': agentInventoryUnitImage2Version, 'agentInventoryUnitSTKname': agentInventoryUnitSTKname, 'agentInventoryUnitActivateSTK': agentInventoryUnitActivateSTK, 'agentInventoryUnitDeleteSTK': agentInventoryUnitDeleteSTK, 'agentInventoryUnitReplicateSTKStatus': agentInventoryUnitReplicateSTKStatus}


class agentInventorySlotEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentInventoryUnitNumber, agentInventorySlotNumber], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 3, 1, 1])
	access = 2
	columns = {'agentInventorySlotNumber': agentInventorySlotNumber, 'agentInventorySlotStatus': agentInventorySlotStatus, 'agentInventorySlotPowerMode': agentInventorySlotPowerMode, 'agentInventorySlotAdminMode': agentInventorySlotAdminMode, 'agentInventorySlotInsertedCardType': agentInventorySlotInsertedCardType, 'agentInventorySlotConfiguredCardType': agentInventorySlotConfiguredCardType, 'agentInventorySlotCapabilities': agentInventorySlotCapabilities}


class agentInventoryCardTypeEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentInventoryCardIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 4, 1, 1])
	access = 2
	columns = {'agentInventoryCardIndex': agentInventoryCardIndex, 'agentInventoryCardType': agentInventoryCardType, 'agentInventoryCardModelIdentifier': agentInventoryCardModelIdentifier, 'agentInventoryCardDescription': agentInventoryCardDescription}


class agentInventoryComponentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentInventoryComponentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 5, 1, 1])
	access = 2
	columns = {'agentInventoryComponentIndex': agentInventoryComponentIndex, 'agentInventoryComponentMnemonic': agentInventoryComponentMnemonic, 'agentInventoryComponentName': agentInventoryComponentName}


class agentInventoryStackPortEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentInventoryStackPortIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 7, 2, 1])
	access = 2
	columns = {'agentInventoryStackPortIndex': agentInventoryStackPortIndex, 'agentInventoryStackPortUnit': agentInventoryStackPortUnit, 'agentInventoryStackPortTag': agentInventoryStackPortTag, 'agentInventoryStackPortConfiguredStackMode': agentInventoryStackPortConfiguredStackMode, 'agentInventoryStackPortRunningStackMode': agentInventoryStackPortRunningStackMode, 'agentInventoryStackPortLinkStatus': agentInventoryStackPortLinkStatus, 'agentInventoryStackPortLinkSpeed': agentInventoryStackPortLinkSpeed, 'agentInventoryStackPortDataRate': agentInventoryStackPortDataRate, 'agentInventoryStackPortErrorRate': agentInventoryStackPortErrorRate, 'agentInventoryStackPortTotalErrors': agentInventoryStackPortTotalErrors}


# notifications (traps) 
class agentInventoryCardMismatch(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 0, 1])

class agentInventoryCardUnsupported(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 0, 2])

class agentInventoryStackPortLinkUp(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 0, 3])

class agentInventoryStackPortLinkDown(NotificationObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 0, 4])

# groups 
class fastPathInventorySupportedUnitGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 6, 2, 1])
	group = [agentInventorySupportedUnitIndex, agentInventorySupportedUnitModelIdentifier, agentInventorySupportedUnitDescription, agentInventorySupportedUnitExpectedCodeVer]

class fastPathInventoryUnitGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 6, 2, 2])
	group = [agentInventoryUnitNumber, agentInventoryUnitAssignNumber, agentInventoryUnitType, agentInventoryUnitMgmtAdmin, agentInventoryUnitHWMgmtPref, agentInventoryUnitAdminMgmtPref, agentInventoryUnitStatus, agentInventoryUnitDetectedCodeVer, agentInventoryUnitDetectedCodeInFlashVer, agentInventoryUnitUpTime, agentInventoryUnitDescription, agentInventoryUnitReplicateSTK, agentInventoryUnitRowStatus, agentInventoryUnitImage1Version, agentInventoryUnitImage2Version, agentInventoryUnitSTKname, agentInventoryUnitActivateSTK, agentInventoryUnitDeleteSTK, agentInventoryUnitSTKname]

class fastPathInventorySlotGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 6, 2, 3])
	group = [agentInventorySlotNumber, agentInventorySlotStatus, agentInventorySlotPowerMode, agentInventorySlotAdminMode, agentInventorySlotInsertedCardType, agentInventorySlotConfiguredCardType]

class fastPathInventoryCardGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 6, 2, 4])
	group = [agentInventoryCardIndex, agentInventoryCardType, agentInventoryCardModelIdentifier, agentInventoryCardDescription]

class fastPathInventoryNotificationsGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 13, 6, 2, 5])
	group = [agentInventoryCardMismatch, agentInventoryCardUnsupported]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
