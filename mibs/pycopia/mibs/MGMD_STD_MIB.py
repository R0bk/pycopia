# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, mib_2, Counter32, Gauge32, Unsigned32, TimeTicks
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP
from INET_ADDRESS_MIB import InetAddress, InetAddressType
from SNMPv2_TC import RowStatus
from IF_MIB import InterfaceIndexOrZero, InterfaceIndex

class MGMD_STD_MIB(ModuleObject):
	path = '/usr/share/mibs/site/MGMD-STD-MIB'
	conformance = 3
	name = 'MGMD-STD-MIB'
	language = 2
	description = 'The MIB module for MGMD Management.\nA New version of MGMD combining RFC 2933 and RFC 3019.\nIncludes IGMPv3 and MLDv2 source filtering changes.\nthis follows the draft : draft-ietf-magma-mgmd-mib-05.txt'

# nodes
class mgmdStdMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82])
	name = 'mgmdStdMIB'

class mgmdMIBObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1])
	name = 'mgmdMIBObjects'

class mgmdMIBConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2])
	name = 'mgmdMIBConformance'

class mgmdMIBCompliance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 3])
	name = 'mgmdMIBCompliance'

class mgmdMIBGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4])
	name = 'mgmdMIBGroups'


# macros
# types 
# scalars 
# columns
class mgmdHostInterfaceIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 1])
	syntaxobject = InterfaceIndex


class mgmdHostInterfaceQuerierType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 2])
	syntaxobject = InetAddressType


class mgmdHostInterfaceQuerier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 3])
	syntaxobject = InetAddress


class mgmdHostInterfaceStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mgmdHostInterfaceVersion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mgmdHostInterfaceVersion1QuerierTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdHostInterfaceVersion2QuerierTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdRouterInterfaceIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 1])
	syntaxobject = InterfaceIndex


class mgmdRouterInterfaceQuerierType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 2])
	syntaxobject = InetAddressType


class mgmdRouterInterfaceQuerier(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 3])
	syntaxobject = InetAddress


class mgmdRouterInterfaceQueryInterval(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'seconds'


class mgmdRouterInterfaceStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mgmdRouterInterfaceVersion(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mgmdRouterInterfaceQueryMaxResponseTime(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'tenths of seconds'


class mgmdRouterInterfaceQuerierUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdRouterInterfaceQuerierExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdRouterInterfaceWrongVersionQueries(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mgmdRouterInterfaceJoins(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mgmdRouterInterfaceProxyIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 12])
	syntaxobject = InterfaceIndexOrZero


class mgmdRouterInterfaceGroups(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mgmdRouterInterfaceRobustness(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class mgmdRouterInterfaceLastMembQueryIntvl(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32
	access = 5
	units = 'tenths of seconds'


class mgmdHostCacheAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 1])
	syntaxobject = InetAddressType


class mgmdHostCacheAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 2])
	syntaxobject = InetAddress


class mgmdHostCacheIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 3])
	syntaxobject = InterfaceIndex


class mgmdHostCacheUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdHostCacheLastReporter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 5])
	syntaxobject = InetAddress


class mgmdHostCacheSourceFilterMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'include'), Enum(2, 'exclude')]


class mgmdRouterCacheAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 1])
	syntaxobject = InetAddressType


class mgmdRouterCacheAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 2])
	syntaxobject = InetAddress


class mgmdRouterCacheIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 3])
	syntaxobject = InterfaceIndex


class mgmdRouterCacheLastReporter(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 4])
	syntaxobject = InetAddress


class mgmdRouterCacheUpTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdRouterCacheExpiryTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdRouterCacheVersion1HostTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdRouterCacheVersion2HostTimer(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class mgmdRouterCacheSourceFilterMode(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'include'), Enum(2, 'exclude')]


class mgmdInverseHostCacheIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 7, 1, 1])
	syntaxobject = InterfaceIndex


class mgmdInverseHostCacheAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 7, 1, 2])
	syntaxobject = InetAddressType


class mgmdInverseHostCacheAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 7, 1, 3])
	syntaxobject = InetAddress


class mgmdInverseRouterCacheIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 8, 1, 1])
	syntaxobject = InterfaceIndex


class mgmdInverseRouterCacheAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 8, 1, 2])
	syntaxobject = InetAddressType


class mgmdInverseRouterCacheAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 8, 1, 3])
	syntaxobject = InetAddress


class mgmdHostSrcListAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 9, 1, 1])
	syntaxobject = InetAddressType


class mgmdHostSrcListAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 9, 1, 2])
	syntaxobject = InetAddress


class mgmdHostSrcListIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 9, 1, 3])
	syntaxobject = InterfaceIndex


class mgmdHostSrcListHostAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 9, 1, 4])
	syntaxobject = InetAddress


class mgmdRouterSrcListAddressType(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 10, 1, 1])
	syntaxobject = InetAddressType


class mgmdRouterSrcListAddress(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 10, 1, 2])
	syntaxobject = InetAddress


class mgmdRouterSrcListIfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 10, 1, 3])
	syntaxobject = InterfaceIndex


class mgmdRouterSrcListHostAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 10, 1, 4])
	syntaxobject = InetAddress


# rows 
class mgmdHostInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mgmdHostInterfaceIfIndex, mgmdHostInterfaceQuerierType], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 3, 1])
	access = 2
	rowstatus = mgmdHostInterfaceStatus
	columns = {'mgmdHostInterfaceIfIndex': mgmdHostInterfaceIfIndex, 'mgmdHostInterfaceQuerierType': mgmdHostInterfaceQuerierType, 'mgmdHostInterfaceQuerier': mgmdHostInterfaceQuerier, 'mgmdHostInterfaceStatus': mgmdHostInterfaceStatus, 'mgmdHostInterfaceVersion': mgmdHostInterfaceVersion, 'mgmdHostInterfaceVersion1QuerierTimer': mgmdHostInterfaceVersion1QuerierTimer, 'mgmdHostInterfaceVersion2QuerierTimer': mgmdHostInterfaceVersion2QuerierTimer}


class mgmdRouterInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mgmdRouterInterfaceIfIndex, mgmdRouterInterfaceQuerierType], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 4, 1])
	access = 2
	rowstatus = mgmdRouterInterfaceStatus
	columns = {'mgmdRouterInterfaceIfIndex': mgmdRouterInterfaceIfIndex, 'mgmdRouterInterfaceQuerierType': mgmdRouterInterfaceQuerierType, 'mgmdRouterInterfaceQuerier': mgmdRouterInterfaceQuerier, 'mgmdRouterInterfaceQueryInterval': mgmdRouterInterfaceQueryInterval, 'mgmdRouterInterfaceStatus': mgmdRouterInterfaceStatus, 'mgmdRouterInterfaceVersion': mgmdRouterInterfaceVersion, 'mgmdRouterInterfaceQueryMaxResponseTime': mgmdRouterInterfaceQueryMaxResponseTime, 'mgmdRouterInterfaceQuerierUpTime': mgmdRouterInterfaceQuerierUpTime, 'mgmdRouterInterfaceQuerierExpiryTime': mgmdRouterInterfaceQuerierExpiryTime, 'mgmdRouterInterfaceWrongVersionQueries': mgmdRouterInterfaceWrongVersionQueries, 'mgmdRouterInterfaceJoins': mgmdRouterInterfaceJoins, 'mgmdRouterInterfaceProxyIfIndex': mgmdRouterInterfaceProxyIfIndex, 'mgmdRouterInterfaceGroups': mgmdRouterInterfaceGroups, 'mgmdRouterInterfaceRobustness': mgmdRouterInterfaceRobustness, 'mgmdRouterInterfaceLastMembQueryIntvl': mgmdRouterInterfaceLastMembQueryIntvl}


class mgmdHostCacheEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mgmdHostCacheAddressType, mgmdHostCacheAddress, mgmdHostCacheIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 5, 1])
	access = 2
	columns = {'mgmdHostCacheAddressType': mgmdHostCacheAddressType, 'mgmdHostCacheAddress': mgmdHostCacheAddress, 'mgmdHostCacheIfIndex': mgmdHostCacheIfIndex, 'mgmdHostCacheUpTime': mgmdHostCacheUpTime, 'mgmdHostCacheLastReporter': mgmdHostCacheLastReporter, 'mgmdHostCacheSourceFilterMode': mgmdHostCacheSourceFilterMode}


class mgmdRouterCacheEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mgmdRouterCacheAddressType, mgmdRouterCacheAddress, mgmdRouterCacheIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 6, 1])
	access = 2
	columns = {'mgmdRouterCacheAddressType': mgmdRouterCacheAddressType, 'mgmdRouterCacheAddress': mgmdRouterCacheAddress, 'mgmdRouterCacheIfIndex': mgmdRouterCacheIfIndex, 'mgmdRouterCacheLastReporter': mgmdRouterCacheLastReporter, 'mgmdRouterCacheUpTime': mgmdRouterCacheUpTime, 'mgmdRouterCacheExpiryTime': mgmdRouterCacheExpiryTime, 'mgmdRouterCacheVersion1HostTimer': mgmdRouterCacheVersion1HostTimer, 'mgmdRouterCacheVersion2HostTimer': mgmdRouterCacheVersion2HostTimer, 'mgmdRouterCacheSourceFilterMode': mgmdRouterCacheSourceFilterMode}


class mgmdInverseHostCacheEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mgmdInverseHostCacheIfIndex, mgmdInverseHostCacheAddressType, mgmdInverseHostCacheAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 7, 1])
	access = 2
	columns = {'mgmdInverseHostCacheIfIndex': mgmdInverseHostCacheIfIndex, 'mgmdInverseHostCacheAddressType': mgmdInverseHostCacheAddressType, 'mgmdInverseHostCacheAddress': mgmdInverseHostCacheAddress}


class mgmdInverseRouterCacheEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mgmdInverseRouterCacheIfIndex, mgmdInverseRouterCacheAddressType, mgmdInverseRouterCacheAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 8, 1])
	access = 2
	columns = {'mgmdInverseRouterCacheIfIndex': mgmdInverseRouterCacheIfIndex, 'mgmdInverseRouterCacheAddressType': mgmdInverseRouterCacheAddressType, 'mgmdInverseRouterCacheAddress': mgmdInverseRouterCacheAddress}


class mgmdHostSrcListEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mgmdHostSrcListAddressType, mgmdHostSrcListAddress, mgmdHostSrcListIfIndex, mgmdHostSrcListHostAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 9, 1])
	access = 2
	columns = {'mgmdHostSrcListAddressType': mgmdHostSrcListAddressType, 'mgmdHostSrcListAddress': mgmdHostSrcListAddress, 'mgmdHostSrcListIfIndex': mgmdHostSrcListIfIndex, 'mgmdHostSrcListHostAddress': mgmdHostSrcListHostAddress}


class mgmdRouterSrcListEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mgmdRouterSrcListAddressType, mgmdRouterSrcListAddress, mgmdRouterSrcListIfIndex, mgmdRouterSrcListHostAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 1, 10, 1])
	access = 2
	columns = {'mgmdRouterSrcListAddressType': mgmdRouterSrcListAddressType, 'mgmdRouterSrcListAddress': mgmdRouterSrcListAddress, 'mgmdRouterSrcListIfIndex': mgmdRouterSrcListIfIndex, 'mgmdRouterSrcListHostAddress': mgmdRouterSrcListHostAddress}


# notifications (traps) 
# groups 
class mgmdHostBaseMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 1])
	group = [mgmdHostInterfaceStatus]

class mgmdRouterBaseMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 2])
	group = [mgmdRouterInterfaceStatus, mgmdRouterCacheUpTime, mgmdRouterCacheExpiryTime, mgmdRouterInterfaceJoins, mgmdRouterInterfaceGroups, mgmdRouterCacheLastReporter, mgmdRouterInterfaceQuerierUpTime, mgmdRouterInterfaceQuerierExpiryTime, mgmdRouterInterfaceQueryInterval]

class mgmdV2IgmpHostMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 3])
	group = [mgmdHostInterfaceVersion, mgmdHostInterfaceVersion1QuerierTimer]

class mgmdHostOptMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 4])
	group = [mgmdHostCacheLastReporter, mgmdHostCacheUpTime, mgmdHostInterfaceQuerier]

class mgmdV2HostOptMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 5])
	group = [mgmdInverseHostCacheAddress]

class mgmdV2RouterBaseMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 6])
	group = [mgmdRouterInterfaceVersion, mgmdRouterInterfaceQuerier, mgmdRouterInterfaceQueryMaxResponseTime, mgmdRouterInterfaceRobustness, mgmdRouterInterfaceWrongVersionQueries, mgmdRouterInterfaceLastMembQueryIntvl]

class mgmdV2IgmpRouterMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 7])
	group = [mgmdRouterCacheVersion1HostTimer]

class mgmdV2ProxyMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 8])
	group = [mgmdRouterInterfaceProxyIfIndex]

class mgmdV2RouterOptMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 9])
	group = [mgmdInverseRouterCacheAddress]

class mgmdV3HostMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 10])
	group = [mgmdHostInterfaceVersion2QuerierTimer, mgmdHostCacheSourceFilterMode, mgmdHostSrcListHostAddress]

class mgmdV3RouterMIBGroup(GroupObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 2, 1, 82, 2, 4, 11])
	group = [mgmdRouterCacheSourceFilterMode, mgmdRouterCacheVersion2HostTimer, mgmdRouterSrcListHostAddress]

# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
