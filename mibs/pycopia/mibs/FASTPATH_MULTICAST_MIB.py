# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY
from LVL7_REF_MIB import fastPath
from SNMPv2_TC import RowStatus

class FASTPATH_MULTICAST_MIB(ModuleObject):
	path = '/usr/share/mibs/site/FASTPATH-MULTICAST-MIB'
	conformance = 2
	name = 'FASTPATH-MULTICAST-MIB'
	language = 2
	description = 'The MIB definitions for Multicast Routing Flex package.'

# nodes
class fastPathMulticast(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4])
	name = 'fastPathMulticast'

class agentMulticastIGMPConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 1])
	name = 'agentMulticastIGMPConfigGroup'

class agentMulticastPIMConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 2])
	name = 'agentMulticastPIMConfigGroup'

class agentMulticastPIMSMConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3])
	name = 'agentMulticastPIMSMConfigGroup'

class agentMulticastPIMDMConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 4])
	name = 'agentMulticastPIMDMConfigGroup'

class agentMulticastRoutingConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 5])
	name = 'agentMulticastRoutingConfigGroup'

class agentMulticastDVMRPConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 6])
	name = 'agentMulticastDVMRPConfigGroup'

class agentSnmpTrapFlagsConfigGroupMulticast(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 7])
	name = 'agentSnmpTrapFlagsConfigGroupMulticast'


# macros
# types 
# scalars 
class agentMulticastIGMPAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentMulticastPIMConfigMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'sparse'), Enum(2, 'dense')]


class agentMulticastPIMSMAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentMulticastPIMSMDataThresholdRate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentMulticastPIMSMRegThresholdRate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentMulticastPIMDMAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentMulticastRoutingAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 5, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentMulticastDVMRPAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 6, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSnmpDVMRPTrapFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 7, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentSnmpPIMTrapFlag(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 7, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


# columns
class agentMulticastIGMPInterfaceIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentMulticastIGMPInterfaceAdminMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentMulticastPIMSMStaticRPIpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentMulticastPIMSMStaticRPGroupIpAddr(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentMulticastPIMSMStaticRPGroupIpMask(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentMulticastPIMSMStaticRPStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentMulticastPIMSMInterfaceIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentMulticastPIMSMInterfaceCBSRHashMaskLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentMulticastPIMSMInterfaceCRPPreference(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


# rows 
class agentMulticastIGMPInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentMulticastIGMPInterfaceIfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 1, 2, 1])
	access = 2
	columns = {'agentMulticastIGMPInterfaceIfIndex': agentMulticastIGMPInterfaceIfIndex, 'agentMulticastIGMPInterfaceAdminMode': agentMulticastIGMPInterfaceAdminMode}


class agentMulticastPIMSMStaticRPEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentMulticastPIMSMStaticRPIpAddr, agentMulticastPIMSMStaticRPGroupIpAddr, agentMulticastPIMSMStaticRPGroupIpMask], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 4, 1])
	access = 2
	rowstatus = agentMulticastPIMSMStaticRPStatus
	columns = {'agentMulticastPIMSMStaticRPIpAddr': agentMulticastPIMSMStaticRPIpAddr, 'agentMulticastPIMSMStaticRPGroupIpAddr': agentMulticastPIMSMStaticRPGroupIpAddr, 'agentMulticastPIMSMStaticRPGroupIpMask': agentMulticastPIMSMStaticRPGroupIpMask, 'agentMulticastPIMSMStaticRPStatus': agentMulticastPIMSMStaticRPStatus}


class agentMulticastPIMSMInterfaceEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentMulticastPIMSMInterfaceIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 4, 3, 5, 1])
	access = 2
	columns = {'agentMulticastPIMSMInterfaceIndex': agentMulticastPIMSMInterfaceIndex, 'agentMulticastPIMSMInterfaceCBSRHashMaskLength': agentMulticastPIMSMInterfaceCBSRHashMaskLength, 'agentMulticastPIMSMInterfaceCRPPreference': agentMulticastPIMSMInterfaceCRPPreference}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
