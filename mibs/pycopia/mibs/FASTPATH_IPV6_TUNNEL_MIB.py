# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from LVL7_REF_MIB import fastPath
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, mib_2, Unsigned32, Integer32
from INET_ADDRESS_MIB import InetAddressIPv4, InetAddressPrefixLength
from RFC1213_MIB import DisplayString, PhysAddress
from SNMPv2_TC import RowStatus
from IPV6_TC import Ipv6IfIndex, Ipv6Address, Ipv6AddressPrefix

class FASTPATH_IPV6_TUNNEL_MIB(ModuleObject):
	path = '/usr/share/mibs/site/FASTPATH-IPV6-TUNNEL-MIB'
	conformance = 2
	name = 'FASTPATH-IPV6-TUNNEL-MIB'
	language = 2
	description = 'The LVL7 Private MIB for FastPath IPV6 Tunnel'

# nodes
class fastPathIpv6Tunnel(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27])
	name = 'fastPathIpv6Tunnel'

class agentTunnelIPV6Group(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1])
	name = 'agentTunnelIPV6Group'


# macros
# types 
# scalars 
# columns
class agentTunnelID(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 1, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTunnelIfIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 1, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTunnelMode(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 1, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'undefined'), Enum(2, 'ip6over4')]


class agentTunnelLocalIP4Addr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 1, 1, 4])
	syntaxobject = InetAddressIPv4


class agentTunnelRemoteIP4Addr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 1, 1, 5])
	syntaxobject = InetAddressIPv4


class agentTunnelLocalIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 1, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentTunnelStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 1, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentTunnelIPV6PrefixPrefix(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 2, 1, 1])
	syntaxobject = Ipv6AddressPrefix


class agentTunnelIPV6PrefixPrefixLen(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 2, 1, 2])
	syntaxobject = InetAddressPrefixLength


class agentTunnelIPV6PrefixStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class agentTunnelIPV6Entry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentTunnelID], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 1, 1])
	access = 2
	rowstatus = agentTunnelStatus
	columns = {'agentTunnelID': agentTunnelID, 'agentTunnelIfIndex': agentTunnelIfIndex, 'agentTunnelMode': agentTunnelMode, 'agentTunnelLocalIP4Addr': agentTunnelLocalIP4Addr, 'agentTunnelRemoteIP4Addr': agentTunnelRemoteIP4Addr, 'agentTunnelLocalIfIndex': agentTunnelLocalIfIndex, 'agentTunnelStatus': agentTunnelStatus}


class agentTunnelIPV6PrefixEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentTunnelID, agentTunnelIPV6PrefixPrefix, agentTunnelIPV6PrefixPrefixLen], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 27, 1, 2, 1])
	access = 2
	rowstatus = agentTunnelIPV6PrefixStatus
	columns = {'agentTunnelIPV6PrefixPrefix': agentTunnelIPV6PrefixPrefix, 'agentTunnelIPV6PrefixPrefixLen': agentTunnelIPV6PrefixPrefixLen, 'agentTunnelIPV6PrefixStatus': agentTunnelIPV6PrefixStatus}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
