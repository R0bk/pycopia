# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, IpAddress, Integer32, Unsigned32, TimeTicks, Counter32
from RFC1213_MIB import DisplayString, PhysAddress
from SNMPv2_TC import TEXTUAL_CONVENTION, RowStatus, RowPointer, MacAddress, StorageType, TruthValue
from LVL7_REF_MIB import fastPath

class FASTPATH_DHCPSERVER_PRIVATE_MIB(ModuleObject):
	path = '/usr/share/mibs/site/FASTPATH-DHCPSERVER-PRIVATE-MIB'
	conformance = 2
	name = 'FASTPATH-DHCPSERVER-PRIVATE-MIB'
	language = 2
	description = 'The LVL7 Private MIB for FASTPATH DHCP Server'

# nodes
class fastPathDHCPServerPrivate(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12])
	name = 'fastPathDHCPServerPrivate'

class agentDhcpServerGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1])
	name = 'agentDhcpServerGroup'

class agentDhcpServerPoolConfigGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2])
	name = 'agentDhcpServerPoolConfigGroup'

class agentDhcpServerLeaseGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3])
	name = 'agentDhcpServerLeaseGroup'

class agentDhcpServerAddressConflictGroup(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 4])
	name = 'agentDhcpServerAddressConflictGroup'


# macros
# types 
# scalars 
class agentDhcpServerAdminMode(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentDhcpServerPingPktNos(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentDhcpServerAutomaticBindingsNos(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerExpiredBindingsNos(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerMalformedMessagesReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerDISCOVERMessagesReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerREQUESTMessagesReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerDECLINEMessagesReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerRELEASEMessagesReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerINFORMMessagesReceived(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerOFFERMessagesSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerACKMessagesSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerNAKMessagesSent(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class agentDhcpServerClearStatistics(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 14])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentDhcpServerBootpAutomatic(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentDhcpServerPoolNameCreate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerExcludedAddressRangeCreate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolOptionCreate(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerLeaseClearAllBindings(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentDhcpServerClearAllAddressConflicts(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 4, 1])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


class agentDhcpServerAddressConflictLogging(ScalarObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 4, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'enable'), Enum(2, 'disable')]


# columns
class agentDhcpServerPoolIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentDhcpServerPoolName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolDefRouter(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolDNSServer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolLeaseTime(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class agentDhcpServerPoolType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'un-allocated'), Enum(1, 'dynamic'), Enum(2, 'manual')]


class agentDhcpServerPoolNetbiosNameServer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolNetbiosNodeType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'none'), Enum(1, 'b-node'), Enum(2, 'p-node'), Enum(4, 'm-node'), Enum(8, 'h-node')]


class agentDhcpServerPoolNextServer(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerPoolDomainName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolBootfile(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentDhcpServerPoolAllocationName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerDynamicPoolIpAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerDynamicPoolIpMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerDynamicPoolIpPrefixLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentDhcpServerPoolAllocationType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(0, 'un-allocated'), Enum(1, 'dynamic'), Enum(2, 'manual')]


class agentDhcpServerManualPoolClientIdentifier(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerManualPoolClientName(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerManualPoolClientHWAddr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerManualPoolClientHWType(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ethernet'), Enum(6, 'ieee802')]


class agentDhcpServerManualPoolIpAddress(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerManualPoolIpMask(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerManualPoolIpPrefixLength(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentDhcpServerExcludedRangeIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 5, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentDhcpServerExcludedStartIpAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 5, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerExcludedEndIpAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 5, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerExcludedAddressRangeStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 5, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentDhcpServerPoolOptionIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentDhcpServerPoolOptionCode(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Unsigned32


class agentDhcpServerOptionPoolName(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolOptionAsciiData(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolOptionHexData(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolOptionIpAddressData(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.DisplayString


class agentDhcpServerPoolOptionStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 7, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentDhcpServerLeaseIPAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerLeaseIPMask(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerLeaseHWAddress(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.MacAddress


class agentDhcpServerLeaseRemainingTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class agentDhcpServerLeaseType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3, 2, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'automatic'), Enum(2, 'manual')]


class agentDhcpServerLeaseStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3, 2, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class agentDhcpServerAddressConflictIP(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 4, 3, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.IpAddress


class agentDhcpServerAddressConflictDetectionType(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 4, 3, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'ping'), Enum(2, 'gratuitousArp')]


class agentDhcpServerAddressConflictDetectionTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 4, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TimeTicks


class agentDhcpServerAddressConflictStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 4, 3, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


# rows 
class agentDhcpServerPoolConfigEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentDhcpServerPoolIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 2, 1])
	access = 2
	rowstatus = agentDhcpServerPoolRowStatus
	columns = {'agentDhcpServerPoolIndex': agentDhcpServerPoolIndex, 'agentDhcpServerPoolName': agentDhcpServerPoolName, 'agentDhcpServerPoolDefRouter': agentDhcpServerPoolDefRouter, 'agentDhcpServerPoolDNSServer': agentDhcpServerPoolDNSServer, 'agentDhcpServerPoolLeaseTime': agentDhcpServerPoolLeaseTime, 'agentDhcpServerPoolType': agentDhcpServerPoolType, 'agentDhcpServerPoolNetbiosNameServer': agentDhcpServerPoolNetbiosNameServer, 'agentDhcpServerPoolNetbiosNodeType': agentDhcpServerPoolNetbiosNodeType, 'agentDhcpServerPoolNextServer': agentDhcpServerPoolNextServer, 'agentDhcpServerPoolDomainName': agentDhcpServerPoolDomainName, 'agentDhcpServerPoolBootfile': agentDhcpServerPoolBootfile, 'agentDhcpServerPoolRowStatus': agentDhcpServerPoolRowStatus}


from FASTPATH_DHCPSERVER_PRIVATE_MIB import agentDhcpServerPoolIndex
class agentDhcpServerPoolAllocationEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentDhcpServerPoolIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 3, 1])
	access = 2
	columns = {'agentDhcpServerPoolAllocationName': agentDhcpServerPoolAllocationName, 'agentDhcpServerDynamicPoolIpAddress': agentDhcpServerDynamicPoolIpAddress, 'agentDhcpServerDynamicPoolIpMask': agentDhcpServerDynamicPoolIpMask, 'agentDhcpServerDynamicPoolIpPrefixLength': agentDhcpServerDynamicPoolIpPrefixLength, 'agentDhcpServerPoolAllocationType': agentDhcpServerPoolAllocationType, 'agentDhcpServerManualPoolClientIdentifier': agentDhcpServerManualPoolClientIdentifier, 'agentDhcpServerManualPoolClientName': agentDhcpServerManualPoolClientName, 'agentDhcpServerManualPoolClientHWAddr': agentDhcpServerManualPoolClientHWAddr, 'agentDhcpServerManualPoolClientHWType': agentDhcpServerManualPoolClientHWType, 'agentDhcpServerManualPoolIpAddress': agentDhcpServerManualPoolIpAddress, 'agentDhcpServerManualPoolIpMask': agentDhcpServerManualPoolIpMask, 'agentDhcpServerManualPoolIpPrefixLength': agentDhcpServerManualPoolIpPrefixLength}


class agentDhcpServerExcludedAddressRangeEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentDhcpServerExcludedRangeIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 5, 1])
	access = 2
	rowstatus = agentDhcpServerExcludedAddressRangeStatus
	columns = {'agentDhcpServerExcludedRangeIndex': agentDhcpServerExcludedRangeIndex, 'agentDhcpServerExcludedStartIpAddress': agentDhcpServerExcludedStartIpAddress, 'agentDhcpServerExcludedEndIpAddress': agentDhcpServerExcludedEndIpAddress, 'agentDhcpServerExcludedAddressRangeStatus': agentDhcpServerExcludedAddressRangeStatus}


class agentDhcpServerPoolOptionEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentDhcpServerPoolOptionIndex, agentDhcpServerPoolOptionCode], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 2, 7, 1])
	access = 2
	rowstatus = agentDhcpServerPoolOptionStatus
	columns = {'agentDhcpServerPoolOptionIndex': agentDhcpServerPoolOptionIndex, 'agentDhcpServerPoolOptionCode': agentDhcpServerPoolOptionCode, 'agentDhcpServerOptionPoolName': agentDhcpServerOptionPoolName, 'agentDhcpServerPoolOptionAsciiData': agentDhcpServerPoolOptionAsciiData, 'agentDhcpServerPoolOptionHexData': agentDhcpServerPoolOptionHexData, 'agentDhcpServerPoolOptionIpAddressData': agentDhcpServerPoolOptionIpAddressData, 'agentDhcpServerPoolOptionStatus': agentDhcpServerPoolOptionStatus}


class agentDhcpServerLeaseEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentDhcpServerLeaseIPAddress], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 3, 2, 1])
	access = 2
	rowstatus = agentDhcpServerLeaseStatus
	columns = {'agentDhcpServerLeaseIPAddress': agentDhcpServerLeaseIPAddress, 'agentDhcpServerLeaseIPMask': agentDhcpServerLeaseIPMask, 'agentDhcpServerLeaseHWAddress': agentDhcpServerLeaseHWAddress, 'agentDhcpServerLeaseRemainingTime': agentDhcpServerLeaseRemainingTime, 'agentDhcpServerLeaseType': agentDhcpServerLeaseType, 'agentDhcpServerLeaseStatus': agentDhcpServerLeaseStatus}


class agentDhcpServerAddressConflictEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([agentDhcpServerAddressConflictIP], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 12, 4, 3, 1])
	access = 2
	rowstatus = agentDhcpServerAddressConflictStatus
	columns = {'agentDhcpServerAddressConflictIP': agentDhcpServerAddressConflictIP, 'agentDhcpServerAddressConflictDetectionType': agentDhcpServerAddressConflictDetectionType, 'agentDhcpServerAddressConflictDetectionTime': agentDhcpServerAddressConflictDetectionTime, 'agentDhcpServerAddressConflictStatus': agentDhcpServerAddressConflictStatus}


# notifications (traps) 
# groups 
# capabilities 

# special additions

# Add to master OIDMAP.
from pycopia import SMI
SMI.update_oidmap(__name__)
