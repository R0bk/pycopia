# python
# This file is generated by a program (mib2py). Any edits will be lost.

from pycopia.aid import Enum
import pycopia.SMI.Basetypes
Range = pycopia.SMI.Basetypes.Range
Ranges = pycopia.SMI.Basetypes.Ranges

from pycopia.SMI.Objects import ColumnObject, MacroObject, NotificationObject, RowObject, ScalarObject, NodeObject, ModuleObject, GroupObject

# imports 
from SNMPv2_CONF import MODULE_COMPLIANCE, OBJECT_GROUP, NOTIFICATION_GROUP
from IF_MIB import InterfaceIndex, InterfaceIndexOrZero
from SNMPv2_SMI import MODULE_IDENTITY, OBJECT_TYPE, NOTIFICATION_TYPE, experimental, Integer32, Counter32, Unsigned32, Counter64, Gauge32
from INET_ADDRESS_MIB import InetAddressIPv4, InetAddressIPv6, InetAddressType
from IANA_ADDRESS_FAMILY_NUMBERS_MIB import AddressFamilyNumbers
from SNMPv2_TC import TEXTUAL_CONVENTION, TruthValue, RowStatus, StorageType, RowPointer, TimeStamp

class MPLS_LSR_MIB(ModuleObject):
	path = '/usr/share/mibs/site/MPLS-LSR-MIB'
	conformance = 2
	name = 'MPLS-LSR-MIB'
	language = 2
	description = 'This MIB contains managed object definitions for the\nMultiprotocol Label Switching (MPLS) Router as\ndefined in: Rosen, E., Viswanathan, A., and R.\nCallon, Multiprotocol Label Switching Architecture,\nAugust 1999.'

# nodes
class mplsLsrMIB(NodeObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96])
	name = 'mplsLsrMIB'

class mplsLsrObjects(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1])
	name = 'mplsLsrObjects'

class mplsLsrNotifications(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 2])
	name = 'mplsLsrNotifications'

class mplsLsrNotifyPrefix(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 2, 0])
	name = 'mplsLsrNotifyPrefix'

class mplsLsrConformance(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 3])
	name = 'mplsLsrConformance'

class mplsLsrGroups(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 3, 1])
	name = 'mplsLsrGroups'

class mplsLsrCompliances(NodeObject):
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 3, 2])
	name = 'mplsLsrCompliances'


# macros
# types 

class MplsLSPID(pycopia.SMI.Basetypes.OctetString):
	status = 1
	ranges = Ranges(Range(0, 31))


class MplsLabel(pycopia.SMI.Basetypes.Unsigned32):
	status = 1
	ranges = Ranges(Range(0, 4294967295))


class MplsBitRate(pycopia.SMI.Basetypes.Integer32):
	status = 1
	ranges = Ranges(Range(1, 2147483647))
	format = 'd'


class MplsObjectOwner(pycopia.SMI.Basetypes.Enumeration):
	status = 1
	enumerations = [Enum(1, 'other'), Enum(2, 'snmp'), Enum(3, 'ldp'), Enum(4, 'rsvp'), Enum(5, 'crldp'), Enum(6, 'policyAgent'), Enum(7, 'unknown')]

# scalars 
class mplsOutSegmentIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsXCIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsMaxLabelStackDepth(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsLabelStackIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsTrafficParamIndexNext(ScalarObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 13])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsXCTrapEnable(ScalarObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 15])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


# columns
class mplsInterfaceConfIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 1])
	syntaxobject = InterfaceIndexOrZero


class mplsInterfaceLabelMinIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 2])
	syntaxobject = MplsLabel


class mplsInterfaceLabelMaxIn(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 3])
	syntaxobject = MplsLabel


class mplsInterfaceLabelMinOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 4])
	syntaxobject = MplsLabel


class mplsInterfaceLabelMaxOut(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 5])
	syntaxobject = MplsLabel


class mplsInterfaceTotalBandwidth(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 6])
	syntaxobject = MplsBitRate


class mplsInterfaceAvailableBandwidth(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 7])
	syntaxobject = MplsBitRate


class mplsInterfaceLabelParticipationType(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.BITS


class mplsInterfaceConfStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsInterfaceInLabelsUsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 2, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mplsInterfaceFailedLabelLookup(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 2, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInterfaceOutLabelsUsed(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 2, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Gauge32


class mplsInterfaceOutFragments(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 2, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentIfIndex(ColumnObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 1])
	syntaxobject = InterfaceIndexOrZero


class mplsInSegmentLabel(ColumnObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 2])
	syntaxobject = MplsLabel


class mplsInSegmentNPop(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsInSegmentAddrFamily(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 4])
	syntaxobject = AddressFamilyNumbers


class mplsInSegmentXCIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsInSegmentOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 6])
	syntaxobject = MplsObjectOwner


class mplsInSegmentTrafficParamPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class mplsInSegmentRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsInSegmentStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsInSegmentOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 4, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 4, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 4, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 4, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsInSegmentHCOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 4, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class mplsInSegmentPerfDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 4, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsOutSegmentIndex(ColumnObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsOutSegmentIfIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 2])
	syntaxobject = InterfaceIndex


class mplsOutSegmentPushTopLabel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class mplsOutSegmentTopLabel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 4])
	syntaxobject = MplsLabel


class mplsOutSegmentNextHopIpAddrType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 5])
	syntaxobject = InetAddressType


class mplsOutSegmentNextHopIpv4Addr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 6])
	syntaxobject = InetAddressIPv4


class mplsOutSegmentNextHopIpv6Addr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 7])
	syntaxobject = InetAddressIPv6


class mplsOutSegmentXCIndex(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsOutSegmentOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 9])
	syntaxobject = MplsObjectOwner


class mplsOutSegmentTrafficParamPtr(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 10])
	syntaxobject = pycopia.SMI.Basetypes.RowPointer


class mplsOutSegmentRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 11])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsOutSegmentStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1, 12])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsOutSegmentOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 7, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsOutSegmentPackets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 7, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsOutSegmentErrors(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 7, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsOutSegmentDiscards(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 7, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.Counter32


class mplsOutSegmentHCOctets(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 7, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.Counter64


class mplsOutSegmentPerfDiscontinuityTime(ColumnObject):
	access = 4
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 7, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.TimeStamp


class mplsXCIndex(ColumnObject):
	access = 3
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsXCLspId(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 2])
	syntaxobject = MplsLSPID


class mplsXCLabelStackIndex(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 3])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsXCIsPersistent(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.TruthValue


class mplsXCOwner(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 5])
	syntaxobject = MplsObjectOwner


class mplsXCRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsXCStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 7])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsXCAdminStatus(ColumnObject):
	status = 1
	access = 5
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 8])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'testing')]


class mplsXCOperStatus(ColumnObject):
	status = 1
	access = 4
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1, 9])
	syntaxobject = pycopia.SMI.Basetypes.Enumeration
	enumerations = [Enum(1, 'up'), Enum(2, 'down'), Enum(3, 'testing'), Enum(4, 'unknown'), Enum(5, 'dormant'), Enum(6, 'notPresent'), Enum(7, 'lowerLayerDown')]


class mplsLabelStackIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 12, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsLabelStackLabelIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 12, 1, 2])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsLabelStackLabel(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 12, 1, 3])
	syntaxobject = MplsLabel


class mplsLabelStackRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 12, 1, 4])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsLabelStackStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 12, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


class mplsTrafficParamIndex(ColumnObject):
	access = 2
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 14, 1, 1])
	syntaxobject = pycopia.SMI.Basetypes.Integer32


class mplsTrafficParamMaxRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 14, 1, 2])
	syntaxobject = MplsBitRate
	access = 5
	units = 'kilobits per second'


class mplsTrafficParamMeanRate(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 14, 1, 3])
	syntaxobject = MplsBitRate
	access = 5
	units = 'kilobits per second'


class mplsTrafficParamMaxBurstSize(ColumnObject):
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 14, 1, 4])
	syntaxobject = UNKNOWN
	access = 5
	units = 'bytes'


class mplsTrafficParamRowStatus(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 14, 1, 5])
	syntaxobject = pycopia.SMI.Basetypes.RowStatus


class mplsTrafficParamStorageType(ColumnObject):
	access = 5
	status = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 14, 1, 6])
	syntaxobject = pycopia.SMI.Basetypes.StorageType


# rows 
class mplsInterfaceConfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInterfaceConfIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 1, 1])
	access = 2
	columns = {'mplsInterfaceConfIndex': mplsInterfaceConfIndex, 'mplsInterfaceLabelMinIn': mplsInterfaceLabelMinIn, 'mplsInterfaceLabelMaxIn': mplsInterfaceLabelMaxIn, 'mplsInterfaceLabelMinOut': mplsInterfaceLabelMinOut, 'mplsInterfaceLabelMaxOut': mplsInterfaceLabelMaxOut, 'mplsInterfaceTotalBandwidth': mplsInterfaceTotalBandwidth, 'mplsInterfaceAvailableBandwidth': mplsInterfaceAvailableBandwidth, 'mplsInterfaceLabelParticipationType': mplsInterfaceLabelParticipationType, 'mplsInterfaceConfStorageType': mplsInterfaceConfStorageType}


from MPLS_LSR_MIB import mplsInterfaceConfIndex
class mplsInterfacePerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInterfaceConfIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 2, 1])
	access = 2
	columns = {'mplsInterfaceInLabelsUsed': mplsInterfaceInLabelsUsed, 'mplsInterfaceFailedLabelLookup': mplsInterfaceFailedLabelLookup, 'mplsInterfaceOutLabelsUsed': mplsInterfaceOutLabelsUsed, 'mplsInterfaceOutFragments': mplsInterfaceOutFragments}


class mplsInSegmentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInSegmentIfIndex, mplsInSegmentLabel], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 3, 1])
	access = 2
	rowstatus = mplsInSegmentRowStatus
	columns = {'mplsInSegmentIfIndex': mplsInSegmentIfIndex, 'mplsInSegmentLabel': mplsInSegmentLabel, 'mplsInSegmentNPop': mplsInSegmentNPop, 'mplsInSegmentAddrFamily': mplsInSegmentAddrFamily, 'mplsInSegmentXCIndex': mplsInSegmentXCIndex, 'mplsInSegmentOwner': mplsInSegmentOwner, 'mplsInSegmentTrafficParamPtr': mplsInSegmentTrafficParamPtr, 'mplsInSegmentRowStatus': mplsInSegmentRowStatus, 'mplsInSegmentStorageType': mplsInSegmentStorageType}


from MPLS_LSR_MIB import mplsInSegmentIfIndex
from MPLS_LSR_MIB import mplsInSegmentLabel
class mplsInSegmentPerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsInSegmentIfIndex, mplsInSegmentLabel], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 4, 1])
	access = 2
	columns = {'mplsInSegmentOctets': mplsInSegmentOctets, 'mplsInSegmentPackets': mplsInSegmentPackets, 'mplsInSegmentErrors': mplsInSegmentErrors, 'mplsInSegmentDiscards': mplsInSegmentDiscards, 'mplsInSegmentHCOctets': mplsInSegmentHCOctets, 'mplsInSegmentPerfDiscontinuityTime': mplsInSegmentPerfDiscontinuityTime}


class mplsOutSegmentEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsOutSegmentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 6, 1])
	access = 2
	rowstatus = mplsOutSegmentRowStatus
	columns = {'mplsOutSegmentIndex': mplsOutSegmentIndex, 'mplsOutSegmentIfIndex': mplsOutSegmentIfIndex, 'mplsOutSegmentPushTopLabel': mplsOutSegmentPushTopLabel, 'mplsOutSegmentTopLabel': mplsOutSegmentTopLabel, 'mplsOutSegmentNextHopIpAddrType': mplsOutSegmentNextHopIpAddrType, 'mplsOutSegmentNextHopIpv4Addr': mplsOutSegmentNextHopIpv4Addr, 'mplsOutSegmentNextHopIpv6Addr': mplsOutSegmentNextHopIpv6Addr, 'mplsOutSegmentXCIndex': mplsOutSegmentXCIndex, 'mplsOutSegmentOwner': mplsOutSegmentOwner, 'mplsOutSegmentTrafficParamPtr': mplsOutSegmentTrafficParamPtr, 'mplsOutSegmentRowStatus': mplsOutSegmentRowStatus, 'mplsOutSegmentStorageType': mplsOutSegmentStorageType}


from MPLS_LSR_MIB import mplsOutSegmentIndex
class mplsOutSegmentPerfEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsOutSegmentIndex], False)
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 7, 1])
	access = 2
	columns = {'mplsOutSegmentOctets': mplsOutSegmentOctets, 'mplsOutSegmentPackets': mplsOutSegmentPackets, 'mplsOutSegmentErrors': mplsOutSegmentErrors, 'mplsOutSegmentDiscards': mplsOutSegmentDiscards, 'mplsOutSegmentHCOctets': mplsOutSegmentHCOctets, 'mplsOutSegmentPerfDiscontinuityTime': mplsOutSegmentPerfDiscontinuityTime}


class mplsXCEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsXCIndex, mplsInSegmentIfIndex, mplsInSegmentLabel, mplsOutSegmentIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 9, 1])
	access = 2
	rowstatus = mplsXCRowStatus
	columns = {'mplsXCIndex': mplsXCIndex, 'mplsXCLspId': mplsXCLspId, 'mplsXCLabelStackIndex': mplsXCLabelStackIndex, 'mplsXCIsPersistent': mplsXCIsPersistent, 'mplsXCOwner': mplsXCOwner, 'mplsXCRowStatus': mplsXCRowStatus, 'mplsXCStorageType': mplsXCStorageType, 'mplsXCAdminStatus': mplsXCAdminStatus, 'mplsXCOperStatus': mplsXCOperStatus}


class mplsLabelStackEntry(RowObject):
	status = 1
	index = pycopia.SMI.Objects.IndexObjects([mplsLabelStackIndex, mplsLabelStackLabelIndex], False)
	create = 1
	OID = pycopia.SMI.Basetypes.ObjectIdentifier([1, 3, 6, 1, 3, 96, 1, 12, 1])
	access = 2
	rowstatus = mplsLabelStackRowStatus
	columns = {'mplsLabelStackIndex': mplsLabelStackIndex, 'mplsLabelStackLabelIndex': mplsLabelStackLabelIndex, 'mplsLabelStackLabel': mplsLabelStackLabel, 'mplsLabelStackRowStatus': mplsLabelStackRowStatus, 'mplsLabelStackStorageType': mplsLabelStackStorageType}


